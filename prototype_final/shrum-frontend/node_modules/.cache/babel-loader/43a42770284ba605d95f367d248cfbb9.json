{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/huangyongli/workspace/TestShrum/prototype_final/shrum-frontend/src/views/BoardView.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect, useSelector } from \"react-redux\"; //import BoardComponent from \"../components/BoardComponent\";\n\nimport Board from 'react-trello';\n/**\n * For register new users\n * @param {props} props\n */\n//  class NewCardForm extends Component {\n//   handleAdd = () => this.props.onAdd({title: this.titleRef.value, description: this.descRef.value, label: this.label.value, assignee: this.assignee.value, priority: this.priority.value, reviewer: this.reviewer.value})\n//   setTitleRef = (ref) => this.titleRef = ref\n//   setDescRef = (ref) => this.descRef = ref\n//   setLabelRef = (ref) => this.label = ref\n//   setAssigneeRef = (ref) => this.assignee = ref\n//   setPriorityRef =(ref) => this.priority = ref\n//   setReviewerRef = (ref) => this.reviewer = ref\n//   render() {\n//   const {onCancel} = this.props\n//   return (\n//    <div style={{background: 'white', borderRadius: 3, border: '1px solid #eee', borderBottom: '1px solid #ccc'}}>\n//     <div style={{padding: 5, margin: 5}}>\n//       <div>\n//         <div style={{marginBottom: 5}}>\n//           <input type=\"text\" ref={this.setTitleRef} placeholder=\"User\" />\n//         </div>\n//         <div style={{marginBottom: 5}}>\n//           <input type=\"text\" ref={this.setDescRef} placeholder=\"Task Description\" />\n//         </div>\n//         <div style={{marginBottom: 5}}>\n//           <input type=\"text\" ref={this.setLabelRef} placeholder=\"points\" />\n//         </div>\n//         <div style={{marginBottom: 5}}>\n//           <input type=\"text\" ref={this.setAssigneeRef} placeholder=\"assignee\" />\n//         </div>\n//         <div style={{marginBottom: 5}}>\n//           <input type=\"text\" ref={this.setPriorityRef} placeholder=\"priority\" />\n//         </div>\n//         <div style={{marginBottom: 5}}>\n//           <input type=\"text\" ref={this.setReviewerRef} placeholder=\"reviewer\" />\n//         </div>\n//       </div>\n//       <button onClick={this.handleAdd}>Add</button>\n//       <button onClick={onCancel}>Cancel</button>\n//     </div>\n//   </div>\n//     ) \n//   }\n// }\n\nfunction BoardView() {\n  _s();\n\n  //   const data = {\n  //     lanes: [\n  //     {\n  //       id: 'lane1',\n  //       title: 'To Do',\n  //       cards: [\n  //         {id: 'Card1', title: 'Assignment 1', description: 'Deadline: Sunday, May 2nd.',assignee: 'None', priority:'low ❗', reviewer: 'None', label: '3 Points', draggable: true},\n  //         {id: 'Card2', title: 'Assignment 2', description: 'Deadline: Sunday, May 16th.', assignee: 'None', priority:'low ❗', reviewer: 'None',  label: '5 Points', metadata: {sha: 'be312a1'}},\n  //         {id: 'Card3', title: 'Assignment 3', description: 'Deadline: Sunday, July 25th.', assignee: 'None', priority:'high ❗❗', reviewer: 'None', label: '8 Points', metadata: {sha: 'be312a1'}},\n  //         {id: 'Card4', title: 'Final Exam', description: 'Deadline: Friday, Augusr 6th.',  assignee: 'None', priority:'high ❗❗', reviewer: 'None', label: '8 Points', metadata: {sha: 'be312a1'}}\n  //       ]\n  //     },\n  //     {\n  //       id: 'lane2',\n  //       title: 'In Progress',\n  //       cards: []\n  //     },\n  //     {\n  //       id: 'lane3',\n  //       title: 'In Review',\n  //       cards: []\n  //     },\n  //     {\n  //       id: 'lane4',\n  //       title: 'Done',\n  //       cards: []\n  //     }\n  //   ]\n  // };\n  const [retrievedObject, setRetrievedObject] = useState([]); //retrievedObject = localStorage.getItem('data');\n\n  localStorage.setItem('data', JSON.stringify(retrievedObject));\n  retrievedObject = localStorage.getItem('data');\n  console.log('data: ', JSON.parse(retrievedObject));\n  return /*#__PURE__*/_jsxDEV(Board, {\n    style: {\n      backgroundColor: 'grey'\n    },\n    editable: true,\n    onDataChange: newData => {\n      console.log(newData);\n    },\n    onCardAdd: card => {\n      localStorage.setItem('data', JSON.stringify(card));\n      var retrievedObject = localStorage.getItem('data');\n      console.log(retrievedObject);\n    },\n    cardDraggable: true,\n    draggable: true,\n    data: JSON.parse(retrievedObject),\n    collapsibleLanes: true //components={{NewCardForm: NewCardForm}} \n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 7\n  }, this);\n}\n\n_s(BoardView, \"psqgOpYm2Lj4XG4tmfW7SbOv7OE=\");\n\n_c = BoardView;\nexport default connect()(withRouter(BoardView));\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardView\");","map":{"version":3,"sources":["/Users/huangyongli/workspace/TestShrum/prototype_final/shrum-frontend/src/views/BoardView.js"],"names":["React","Component","useState","useEffect","withRouter","connect","useSelector","Board","BoardView","retrievedObject","setRetrievedObject","localStorage","setItem","JSON","stringify","getItem","console","log","parse","backgroundColor","newData","card"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC,C,CAGA;;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,SAASC,SAAT,GAAqB;AAAA;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,EAAD,CAAtD,CApCmB,CAqCnB;;AAEAS,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeL,eAAf,CAA7B;AACAA,EAAAA,eAAe,GAAGE,YAAY,CAACI,OAAb,CAAqB,MAArB,CAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,IAAI,CAACK,KAAL,CAAWT,eAAX,CAAtB;AAME,sBACE,QAAC,KAAD;AAAO,IAAA,KAAK,EAAI;AAACU,MAAAA,eAAe,EAAE;AAAlB,KAAhB;AACA,IAAA,QAAQ,MADR;AAEC,IAAA,YAAY,EAAGC,OAAD,IAAa;AAACJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AAAqB,KAFlD;AAGC,IAAA,SAAS,EAAGC,IAAD,IAAU;AAACV,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeO,IAAf,CAA7B;AACJ,UAAIZ,eAAe,GAAGE,YAAY,CAACI,OAAb,CAAqB,MAArB,CAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYR,eAAZ;AAA6B,KALhD;AAMmB,IAAA,aAAa,MANhC;AAOmB,IAAA,SAAS,MAP5B;AAQmB,IAAA,IAAI,EAAEI,IAAI,CAACK,KAAL,CAAWT,eAAX,CARzB;AASmB,IAAA,gBAAgB,MATnC,CAUmB;;AAVnB;AAAA;AAAA;AAAA;AAAA,UADF;AAqBH;;GApEQD,S;;KAAAA,S;AAsET,eAAeH,OAAO,GAAGD,UAAU,CAACI,SAAD,CAAb,CAAtB","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { connect, useSelector } from \"react-redux\";\n\n\n//import BoardComponent from \"../components/BoardComponent\";\nimport Board from 'react-trello'\n\n\n/**\n * For register new users\n * @param {props} props\n */\n\n//  class NewCardForm extends Component {\n//   handleAdd = () => this.props.onAdd({title: this.titleRef.value, description: this.descRef.value, label: this.label.value, assignee: this.assignee.value, priority: this.priority.value, reviewer: this.reviewer.value})\n//   setTitleRef = (ref) => this.titleRef = ref\n//   setDescRef = (ref) => this.descRef = ref\n//   setLabelRef = (ref) => this.label = ref\n//   setAssigneeRef = (ref) => this.assignee = ref\n//   setPriorityRef =(ref) => this.priority = ref\n//   setReviewerRef = (ref) => this.reviewer = ref\n//   render() {\n//   const {onCancel} = this.props\n//   return (\n//    <div style={{background: 'white', borderRadius: 3, border: '1px solid #eee', borderBottom: '1px solid #ccc'}}>\n//     <div style={{padding: 5, margin: 5}}>\n//       <div>\n//         <div style={{marginBottom: 5}}>\n//           <input type=\"text\" ref={this.setTitleRef} placeholder=\"User\" />\n//         </div>\n//         <div style={{marginBottom: 5}}>\n//           <input type=\"text\" ref={this.setDescRef} placeholder=\"Task Description\" />\n//         </div>\n//         <div style={{marginBottom: 5}}>\n//           <input type=\"text\" ref={this.setLabelRef} placeholder=\"points\" />\n//         </div>\n//         <div style={{marginBottom: 5}}>\n//           <input type=\"text\" ref={this.setAssigneeRef} placeholder=\"assignee\" />\n//         </div>\n//         <div style={{marginBottom: 5}}>\n//           <input type=\"text\" ref={this.setPriorityRef} placeholder=\"priority\" />\n//         </div>\n//         <div style={{marginBottom: 5}}>\n//           <input type=\"text\" ref={this.setReviewerRef} placeholder=\"reviewer\" />\n//         </div>\n//       </div>\n//       <button onClick={this.handleAdd}>Add</button>\n//       <button onClick={onCancel}>Cancel</button>\n//     </div>\n//   </div>\n//     ) \n//   }\n// }\n\n\n\nfunction BoardView() {\n  \n  //   const data = {\n  //     lanes: [\n  //     {\n  //       id: 'lane1',\n  //       title: 'To Do',\n  //       cards: [\n  //         {id: 'Card1', title: 'Assignment 1', description: 'Deadline: Sunday, May 2nd.',assignee: 'None', priority:'low ❗', reviewer: 'None', label: '3 Points', draggable: true},\n  //         {id: 'Card2', title: 'Assignment 2', description: 'Deadline: Sunday, May 16th.', assignee: 'None', priority:'low ❗', reviewer: 'None',  label: '5 Points', metadata: {sha: 'be312a1'}},\n  //         {id: 'Card3', title: 'Assignment 3', description: 'Deadline: Sunday, July 25th.', assignee: 'None', priority:'high ❗❗', reviewer: 'None', label: '8 Points', metadata: {sha: 'be312a1'}},\n  //         {id: 'Card4', title: 'Final Exam', description: 'Deadline: Friday, Augusr 6th.',  assignee: 'None', priority:'high ❗❗', reviewer: 'None', label: '8 Points', metadata: {sha: 'be312a1'}}\n  //       ]\n  //     },\n  //     {\n  //       id: 'lane2',\n  //       title: 'In Progress',\n  //       cards: []\n     \n  //     },\n  //     {\n  //       id: 'lane3',\n  //       title: 'In Review',\n  //       cards: []\n       \n  //     },\n  //     {\n  //       id: 'lane4',\n  //       title: 'Done',\n  //       cards: []\n      \n  //     }\n  //   ]\n  // };\n\n\n  const [retrievedObject, setRetrievedObject] = useState([]);\n  //retrievedObject = localStorage.getItem('data');\n\n  localStorage.setItem('data', JSON.stringify(retrievedObject));\n  retrievedObject = localStorage.getItem('data');\n  console.log('data: ', JSON.parse(retrievedObject));\n\n  \n  \n\n\n    return (\n      <Board style = {{backgroundColor: 'grey'}}\n      editable\n       onDataChange={(newData) => {console.log(newData)}}\n       onCardAdd={(card) => {localStorage.setItem('data', JSON.stringify(card));\n                         var retrievedObject = localStorage.getItem('data');\n                         console.log(retrievedObject)}}\n                         cardDraggable\n                         draggable\n                         data={JSON.parse(retrievedObject)}\n                         collapsibleLanes\n                         //components={{NewCardForm: NewCardForm}} \n                         />\n                        \n                         \n                         \n    );\n\n\n   \n  \n}\n\nexport default connect()(withRouter(BoardView));\n"]},"metadata":{},"sourceType":"module"}