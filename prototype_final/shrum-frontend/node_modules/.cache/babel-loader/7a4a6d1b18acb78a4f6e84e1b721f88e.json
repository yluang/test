{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/huangyongli/workspace/Shrum/prototype/shrum-frontend/src/components/Ratings.js\";\nimport React from \"react\";\nimport { Table, TableBody, TableCell, TableRow } from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\nimport PropTypes from \"prop-types\";\nimport CustomTextField from \"./CustomTextField\";\n/**\n * For presenting and changing movie details\n * @param {props} props\n */\n\nfunction Ratings(props) {\n  return /*#__PURE__*/_jsxDEV(Table, {\n    children: /*#__PURE__*/_jsxDEV(TableBody, {\n      children: [/*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(CustomTextField, {\n            value: \"Critics\",\n            editMode: false,\n            variant: \"body1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(CustomTextField, {\n            value: props.criticsRating.toFixed(1),\n            editMode: false,\n            variant: \"body1\",\n            align: \"end\",\n            nofullwidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(Rating, {\n            value: props.criticsRating,\n            onChange: (e, value) => props.onChangeCriticsRating(value),\n            readOnly: !props.editMode,\n            name: \"critics-rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(CustomTextField, {\n            value: \"Audience\",\n            editMode: false,\n            variant: \"body1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(CustomTextField, {\n            value: props.avgAudienceRating.toFixed(1),\n            editMode: false,\n            variant: \"body1\",\n            align: \"end\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(Rating, {\n            value: props.avgAudienceRating,\n            onChange: (e, value) => props.onChangeOwnRating(value),\n            readOnly: props.isAdmin,\n            name: \"audience-rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n} // attributes of props and their type\n\n\n_c = Ratings;\nRatings.propTypes = {\n  criticsRating: PropTypes.number,\n  avgAudienceRating: PropTypes.number,\n  editMode: PropTypes.bool,\n  onChangeCriticsRating: PropTypes.func,\n  onChangeOwnRating: PropTypes.func\n};\nexport default Ratings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ratings\");","map":{"version":3,"sources":["/Users/huangyongli/workspace/Shrum/prototype/shrum-frontend/src/components/Ratings.js"],"names":["React","Table","TableBody","TableCell","TableRow","Rating","PropTypes","CustomTextField","Ratings","props","criticsRating","toFixed","e","value","onChangeCriticsRating","editMode","avgAudienceRating","onChangeOwnRating","isAdmin","propTypes","number","bool","func"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,mBAAtD;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA;AACA;AACA;AACA;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,sBACI,QAAC,KAAD;AAAA,2BACI,QAAC,SAAD;AAAA,8BACI,QAAC,QAAD;AAAA,gCACI,QAAC,SAAD;AAAA,iCACI,QAAC,eAAD;AACI,YAAA,KAAK,EAAC,SADV;AAEI,YAAA,QAAQ,EAAE,KAFd;AAGI,YAAA,OAAO,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI,QAAC,SAAD;AAAA,iCACI,QAAC,eAAD;AACI,YAAA,KAAK,EAAEA,KAAK,CAACC,aAAN,CAAoBC,OAApB,CAA4B,CAA5B,CADX;AAEI,YAAA,QAAQ,EAAE,KAFd;AAGI,YAAA,OAAO,EAAC,OAHZ;AAII,YAAA,KAAK,EAAC,KAJV;AAKI,YAAA,WAAW;AALf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBARJ,eAiBI,QAAC,SAAD;AAAA,iCACI,QAAC,MAAD;AACI,YAAA,KAAK,EAAEF,KAAK,CAACC,aADjB;AAEI,YAAA,QAAQ,EAAE,CAACE,CAAD,EAAIC,KAAJ,KACNJ,KAAK,CAACK,qBAAN,CAA4BD,KAA5B,CAHR;AAKI,YAAA,QAAQ,EAAE,CAACJ,KAAK,CAACM,QALrB;AAMI,YAAA,IAAI,EAAC;AANT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eA8BI,QAAC,QAAD;AAAA,gCACI,QAAC,SAAD;AAAA,iCACI,QAAC,eAAD;AACI,YAAA,KAAK,EAAC,UADV;AAEI,YAAA,QAAQ,EAAE,KAFd;AAGI,YAAA,OAAO,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI,QAAC,SAAD;AAAA,iCACI,QAAC,eAAD;AACI,YAAA,KAAK,EAAEN,KAAK,CAACO,iBAAN,CAAwBL,OAAxB,CAAgC,CAAhC,CADX;AAEI,YAAA,QAAQ,EAAE,KAFd;AAGI,YAAA,OAAO,EAAC,OAHZ;AAII,YAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBARJ,eAgBI,QAAC,SAAD;AAAA,iCACI,QAAC,MAAD;AACI,YAAA,KAAK,EAAEF,KAAK,CAACO,iBADjB;AAEI,YAAA,QAAQ,EAAE,CAACJ,CAAD,EAAIC,KAAJ,KACNJ,KAAK,CAACQ,iBAAN,CAAwBJ,KAAxB,CAHR;AAKI,YAAA,QAAQ,EAAEJ,KAAK,CAACS,OALpB;AAMI,YAAA,IAAI,EAAC;AANT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA8DH,C,CAED;;;KAjESV,O;AAkETA,OAAO,CAACW,SAAR,GAAoB;AAChBT,EAAAA,aAAa,EAAEJ,SAAS,CAACc,MADT;AAEhBJ,EAAAA,iBAAiB,EAAEV,SAAS,CAACc,MAFb;AAGhBL,EAAAA,QAAQ,EAAET,SAAS,CAACe,IAHJ;AAIhBP,EAAAA,qBAAqB,EAAER,SAAS,CAACgB,IAJjB;AAKhBL,EAAAA,iBAAiB,EAAEX,SAAS,CAACgB;AALb,CAApB;AAQA,eAAed,OAAf","sourcesContent":["import React from \"react\";\nimport { Table, TableBody, TableCell, TableRow } from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\nimport PropTypes from \"prop-types\";\nimport CustomTextField from \"./CustomTextField\";\n\n/**\n * For presenting and changing movie details\n * @param {props} props\n */\nfunction Ratings(props) {\n    return (\n        <Table>\n            <TableBody>\n                <TableRow>\n                    <TableCell>\n                        <CustomTextField\n                            value=\"Critics\"\n                            editMode={false}\n                            variant=\"body1\"\n                        />\n                    </TableCell>\n                    <TableCell>\n                        <CustomTextField\n                            value={props.criticsRating.toFixed(1)}\n                            editMode={false}\n                            variant=\"body1\"\n                            align=\"end\"\n                            nofullwidth\n                        />\n                    </TableCell>\n                    <TableCell>\n                        <Rating\n                            value={props.criticsRating}\n                            onChange={(e, value) =>\n                                props.onChangeCriticsRating(value)\n                            }\n                            readOnly={!props.editMode}\n                            name=\"critics-rating\"\n                        />\n                    </TableCell>\n                </TableRow>\n\n                <TableRow>\n                    <TableCell>\n                        <CustomTextField\n                            value=\"Audience\"\n                            editMode={false}\n                            variant=\"body1\"\n                        />\n                    </TableCell>\n                    <TableCell>\n                        <CustomTextField\n                            value={props.avgAudienceRating.toFixed(1)}\n                            editMode={false}\n                            variant=\"body1\"\n                            align=\"end\"\n                        />\n                    </TableCell>\n                    <TableCell>\n                        <Rating\n                            value={props.avgAudienceRating}\n                            onChange={(e, value) =>\n                                props.onChangeOwnRating(value)\n                            }\n                            readOnly={props.isAdmin}\n                            name=\"audience-rating\"\n                        />\n                    </TableCell>\n                </TableRow>\n            </TableBody>\n        </Table>\n    );\n}\n\n// attributes of props and their type\nRatings.propTypes = {\n    criticsRating: PropTypes.number,\n    avgAudienceRating: PropTypes.number,\n    editMode: PropTypes.bool,\n    onChangeCriticsRating: PropTypes.func,\n    onChangeOwnRating: PropTypes.func,\n};\n\nexport default Ratings;\n"]},"metadata":{},"sourceType":"module"}