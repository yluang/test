{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/huangyongli/workspace/Shrum/prototype/shrum-frontend/src/components/DropWrapper.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport ITEM_TYPE from \"../data/types\";\nimport { statuses } from \"../data\";\nimport { IndeterminateCheckBoxRounded } from \"@material-ui/icons\";\n\nconst DropWrapper = ({\n  onDrop,\n  children,\n  status\n}) => {\n  _s();\n\n  const [{\n    isOver\n  }, drop] = useDrop({\n    accept: ITEM_TYPE,\n    canDrop: (item, monitor) => {\n      const itemIndex = statuses.findIndex(si => si.status === item.status);\n      const statusIndex = status.findIndex(si => si.status === status);\n      return [itemIndex + 1, itemIndex - 1, itemIndex].includes(statusIndex);\n    },\n    drop: (item, monitor) => {\n      onDrop(item, monitor, status);\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver()\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    className: \"drop-wrapper\",\n    children: /*#__PURE__*/React.cloneElement(children, {\n      isOver\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DropWrapper, \"J1zlkivqRCGcJFAnPMhlnYWlWR0=\", false, function () {\n  return [useDrop];\n});\n\n_c = DropWrapper;\nexport default DropWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropWrapper\");","map":{"version":3,"sources":["/Users/huangyongli/workspace/Shrum/prototype/shrum-frontend/src/components/DropWrapper.jsx"],"names":["React","useDrop","ITEM_TYPE","statuses","IndeterminateCheckBoxRounded","DropWrapper","onDrop","children","status","isOver","drop","accept","canDrop","item","monitor","itemIndex","findIndex","si","statusIndex","includes","collect","cloneElement"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,4BAAT,QAA6C,oBAA7C;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA;AAApB,CAAD,KAAiC;AAAA;;AACjD,QAAM,CAAC;AAACC,IAAAA;AAAD,GAAD,EAAWC,IAAX,IAAmBT,OAAO,CAAE;AAC9BU,IAAAA,MAAM,EAAET,SADsB;AAE9BU,IAAAA,OAAO,EAAE,CAACC,IAAD,EAAOC,OAAP,KAAmB;AACxB,YAAMC,SAAS,GAAGZ,QAAQ,CAACa,SAAT,CAAmBC,EAAE,IAAIA,EAAE,CAACT,MAAH,KAAcK,IAAI,CAACL,MAA5C,CAAlB;AACA,YAAMU,WAAW,GAAGV,MAAM,CAACQ,SAAP,CAAiBC,EAAE,IAAIA,EAAE,CAACT,MAAH,KAAcA,MAArC,CAApB;AACA,aAAO,CAACO,SAAS,GAAG,CAAb,EAAgBA,SAAS,GAAG,CAA5B,EAA+BA,SAA/B,EAA0CI,QAA1C,CAAmDD,WAAnD,CAAP;AACH,KAN6B;AAQ9BR,IAAAA,IAAI,EAAE,CAACG,IAAD,EAAOC,OAAP,KAAmB;AACrBR,MAAAA,MAAM,CAACO,IAAD,EAAMC,OAAN,EAAeN,MAAf,CAAN;AACH,KAV6B;AAW9BY,IAAAA,OAAO,EAAEN,OAAO,KAAK;AACjBL,MAAAA,MAAM,EAAEK,OAAO,CAACL,MAAR;AADS,KAAL;AAXc,GAAF,CAAhC;AAkBA,sBACI;AAAK,IAAA,GAAG,EAAEC,IAAV;AAAgB,IAAA,SAAS,EAAE,cAA3B;AAAA,2BACKV,KAAK,CAACqB,YAAN,CAAmBd,QAAnB,EAA6B;AAACE,MAAAA;AAAD,KAA7B;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxBD;;GAAMJ,W;UACuBJ,O;;;KADvBI,W;AA0BN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport {useDrop} from \"react-dnd\";\nimport ITEM_TYPE from \"../data/types\";\nimport { statuses } from \"../data\";\nimport { IndeterminateCheckBoxRounded } from \"@material-ui/icons\";\n\nconst DropWrapper = ({ onDrop, children, status}) => {\n    const [{isOver}, drop] = useDrop ({\n        accept: ITEM_TYPE,\n        canDrop: (item, monitor) => {\n            const itemIndex = statuses.findIndex(si => si.status === item.status);\n            const statusIndex = status.findIndex(si => si.status === status);\n            return [itemIndex + 1, itemIndex - 1, itemIndex].includes(statusIndex);\n        },\n\n        drop: (item, monitor) => {\n            onDrop(item,monitor, status);\n        },\n        collect: monitor => ({\n            isOver: monitor.isOver()\n        })\n\n\n    });\n\n    return (\n        <div ref={drop} className={\"drop-wrapper\"}>\n            {React.cloneElement(children, {isOver})}\n        </div>\n    );\n};\n\nexport default DropWrapper;"]},"metadata":{},"sourceType":"module"}