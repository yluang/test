{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/huangyongli/workspace/TestShrum/prototype_final/shrum-frontend/src/views/TaskListView.js\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect } from \"react\";\n// import { withRouter, useParams } from \"react-router-dom\";\n// import { connect, useSelector } from \"react-redux\";\n// import { getTasks, getProject } from \"../redux/actions\";\n// import TaskListComponent from \"../components/TaskListComponent\";\n// import Loading from \"../components/Loading\";\n// function TaskListView(props) {\n//     // Project name from URI\n//     const { projectSpecifier } = useParams();\n//     // Redux\n//     const user = useSelector((state) => state.user); \n//     const tasks = useSelector((state) => state.tasks);\n//     const project = useSelector((state) => state.currentProject);\n//     useEffect(() => {\n//         // Load project when the page is loaded\n//         if (!project.project) {\n//             // Redux get project action\n//             props.dispatch(getProject(projectSpecifier));\n//         }\n//     });\n//     // Load tasks if a project is loaded\n//     useEffect(() => {\n//         if (project.project) {\n//             props.dispatch(getTasks(projectSpecifier));\n//         }\n//     }, [project]);\n//     /**\n//      * TODO:\n//      * - implement \"Add Task\" button somewhere\n//      * \n//      */\n//     const onAddTask = () => {\n//         props.history.push(\"/tasks/new\");\n//     }\n//     return !tasks.tasks ? (\n//         <Loading />\n//     ) : !Array.isArray(tasks.tasks) ? (\n//         <div>Error while loading tasks</div>\n//     ) : (\n//         <>\n//             <TaskListComponent\n//                 tasks={tasks.tasks}\n//                 user={user}\n//             />\n//         </>\n//     );\n// }\n// export default connect()(withRouter(TaskListView))\nimport React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect, useSelector } from \"react-redux\";\nimport TaskListComponent from \"../components/TaskListComponent\";\nimport { register } from \"../redux/actions\";\n/**\n * For register new users\n * @param {props} props\n */\n\nfunction TaskListView(props) {\n  _s();\n\n  const user = useSelector(state => state.user);\n  useEffect(() => {\n    if (user.user) {\n      props.history.push(\"/tasks\");\n    }\n  }, [user, props.history]);\n\n  const onRegister = (username, password, isAdmin) => {// props.dispatch(register(username, password, isAdmin));\n  };\n\n  const onCancel = () => {\n    props.history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"tasks coming...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this) // <TaskListComponent\n  ///>\n  ;\n}\n\n_s(TaskListView, \"w5+LAD8lLDhLgasoS8hF5Z9czWg=\", false, function () {\n  return [useSelector];\n});\n\n_c = TaskListView;\nexport default connect()(withRouter(TaskListView));\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskListView\");","map":{"version":3,"sources":["/Users/huangyongli/workspace/TestShrum/prototype_final/shrum-frontend/src/views/TaskListView.js"],"names":["React","useEffect","withRouter","connect","useSelector","TaskListComponent","register","TaskListView","props","user","state","history","push","onRegister","username","password","isAdmin","onCancel"],"mappings":";;;;;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AAEA,OAAOC,iBAAP,MAA8B,iCAA9B;AAEA,SAASC,QAAT,QAAyB,kBAAzB;AAEA;AACA;AACA;AACA;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AACzB,QAAMC,IAAI,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,IAAI,CAACA,IAAT,EAAe;AACXD,MAAAA,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACH;AACJ,GAJQ,EAIN,CAACH,IAAD,EAAOD,KAAK,CAACG,OAAb,CAJM,CAAT;;AAMA,QAAME,UAAU,GAAG,CAACC,QAAD,EAAWC,QAAX,EAAqBC,OAArB,KAAiC,CAChD;AACH,GAFD;;AAIA,QAAMC,QAAQ,GAAG,MAAM;AACnBT,IAAAA,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACH,GAFD;;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAEG;AACC;AAHJ;AAKH;;GAtBQL,Y;UACQH,W;;;KADRG,Y;AAwBT,eAAeJ,OAAO,GAAGD,UAAU,CAACK,YAAD,CAAb,CAAtB","sourcesContent":["// import React, { useEffect } from \"react\";\n// import { withRouter, useParams } from \"react-router-dom\";\n// import { connect, useSelector } from \"react-redux\";\n\n// import { getTasks, getProject } from \"../redux/actions\";\n\n// import TaskListComponent from \"../components/TaskListComponent\";\n// import Loading from \"../components/Loading\";\n\n// function TaskListView(props) {\n\n//     // Project name from URI\n//     const { projectSpecifier } = useParams();\n\n//     // Redux\n//     const user = useSelector((state) => state.user); \n//     const tasks = useSelector((state) => state.tasks);\n//     const project = useSelector((state) => state.currentProject);\n\n//     useEffect(() => {\n//         // Load project when the page is loaded\n//         if (!project.project) {\n//             // Redux get project action\n//             props.dispatch(getProject(projectSpecifier));\n//         }\n//     });\n\n//     // Load tasks if a project is loaded\n//     useEffect(() => {\n//         if (project.project) {\n//             props.dispatch(getTasks(projectSpecifier));\n//         }\n//     }, [project]);\n\n//     /**\n//      * TODO:\n//      * - implement \"Add Task\" button somewhere\n//      * \n//      */\n//     const onAddTask = () => {\n//         props.history.push(\"/tasks/new\");\n//     }\n    \n\n//     return !tasks.tasks ? (\n//         <Loading />\n//     ) : !Array.isArray(tasks.tasks) ? (\n//         <div>Error while loading tasks</div>\n//     ) : (\n//         <>\n//             <TaskListComponent\n//                 tasks={tasks.tasks}\n//                 user={user}\n//             />\n//         </>\n//     );\n// }\n\n// export default connect()(withRouter(TaskListView))\n\n\nimport React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect, useSelector } from \"react-redux\";\n\nimport TaskListComponent from \"../components/TaskListComponent\";\n\nimport { register } from \"../redux/actions\";\n\n/**\n * For register new users\n * @param {props} props\n */\nfunction TaskListView(props) {\n    const user = useSelector((state) => state.user);\n\n    useEffect(() => {\n        if (user.user) {\n            props.history.push(\"/tasks\");\n        }\n    }, [user, props.history]);\n\n    const onRegister = (username, password, isAdmin) => {\n        // props.dispatch(register(username, password, isAdmin));\n    };\n\n    const onCancel = () => {\n        props.history.push(\"/\");\n    };\n\n    return (\n        <h1>tasks coming...</h1>\n       // <TaskListComponent\n        ///>\n    );\n}\n\nexport default connect()(withRouter(TaskListView));\n"]},"metadata":{},"sourceType":"module"}