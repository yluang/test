{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/huangyongli/workspace/Shrum_new/prototype/shrum/src/views/TaskListView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { withRouter, useParams } from \"react-router-dom\";\nimport { connect, useSelector } from \"react-redux\";\nimport { getTasks, getProject } from \"../redux/actions\";\nimport TaskListComponent from \"../components/TaskListComponent\";\nimport Loading from \"../components/Loading\";\n\nfunction TaskListView(props) {\n  _s();\n\n  // Project name from URI\n  const {\n    projectSpecifier\n  } = useParams(); // Redux\n\n  const user = useSelector(state => state.user);\n  const tasks = useSelector(state => state.tasks);\n  const project = useSelector(state => state.currentProject);\n  useEffect(() => {\n    // Load project when the page is loaded\n    if (!project.project) {\n      // Redux get project action\n      props.dispatch(getProject(projectSpecifier));\n    }\n  }); // Load tasks if a project is loaded\n\n  useEffect(() => {\n    if (project.project) {\n      props.dispatch(getTasks(projectSpecifier));\n    }\n  }, [project]);\n  /**\n   * TODO:\n   * - implement \"Add Task\" button somewhere\n   * \n   */\n\n  const onAddTask = () => {\n    props.history.push(\"/tasks/new\");\n  };\n\n  return !tasks.tasks ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this) : !Array.isArray(tasks.tasks) ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error while loading tasks\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TaskListComponent, {\n      tasks: tasks.tasks,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(TaskListView, \"vl9NMosSlXroYe2Tmsc6jTfkM08=\", false, function () {\n  return [useParams, useSelector, useSelector, useSelector];\n});\n\n_c = TaskListView;\nexport default connect()(withRouter(TaskListView));\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskListView\");","map":{"version":3,"sources":["/Users/huangyongli/workspace/Shrum_new/prototype/shrum/src/views/TaskListView.js"],"names":["React","useEffect","withRouter","useParams","connect","useSelector","getTasks","getProject","TaskListComponent","Loading","TaskListView","props","projectSpecifier","user","state","tasks","project","currentProject","dispatch","onAddTask","history","push","Array","isArray"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AAEA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;AAEA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAEzB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAuBT,SAAS,EAAtC,CAHyB,CAKzB;;AACA,QAAMU,IAAI,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAME,KAAK,GAAGV,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAAzB;AACA,QAAMC,OAAO,GAAGX,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACG,cAAlB,CAA3B;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAI,CAACe,OAAO,CAACA,OAAb,EAAsB;AAClB;AACAL,MAAAA,KAAK,CAACO,QAAN,CAAeX,UAAU,CAACK,gBAAD,CAAzB;AACH;AACJ,GANQ,CAAT,CAVyB,CAkBzB;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIe,OAAO,CAACA,OAAZ,EAAqB;AACjBL,MAAAA,KAAK,CAACO,QAAN,CAAeZ,QAAQ,CAACM,gBAAD,CAAvB;AACH;AACJ,GAJQ,EAIN,CAACI,OAAD,CAJM,CAAT;AAMA;AACJ;AACA;AACA;AACA;;AACI,QAAMG,SAAS,GAAG,MAAM;AACpBR,IAAAA,KAAK,CAACS,OAAN,CAAcC,IAAd,CAAmB,YAAnB;AACH,GAFD;;AAKA,SAAO,CAACN,KAAK,CAACA,KAAP,gBACH,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADG,GAEH,CAACO,KAAK,CAACC,OAAN,CAAcR,KAAK,CAACA,KAApB,CAAD,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,gBAGA;AAAA,2BACI,QAAC,iBAAD;AACI,MAAA,KAAK,EAAEA,KAAK,CAACA,KADjB;AAEI,MAAA,IAAI,EAAEF;AAFV;AAAA;AAAA;AAAA;AAAA;AADJ,mBALJ;AAYH;;GA/CQH,Y;UAGwBP,S,EAGhBE,W,EACCA,W,EACEA,W;;;KARXK,Y;AAiDT,eAAeN,OAAO,GAAGF,UAAU,CAACQ,YAAD,CAAb,CAAtB","sourcesContent":["import React, { useEffect } from \"react\";\nimport { withRouter, useParams } from \"react-router-dom\";\nimport { connect, useSelector } from \"react-redux\";\n\nimport { getTasks, getProject } from \"../redux/actions\";\n\nimport TaskListComponent from \"../components/TaskListComponent\";\nimport Loading from \"../components/Loading\";\n\nfunction TaskListView(props) {\n\n    // Project name from URI\n    const { projectSpecifier } = useParams();\n\n    // Redux\n    const user = useSelector((state) => state.user); \n    const tasks = useSelector((state) => state.tasks);\n    const project = useSelector((state) => state.currentProject);\n\n    useEffect(() => {\n        // Load project when the page is loaded\n        if (!project.project) {\n            // Redux get project action\n            props.dispatch(getProject(projectSpecifier));\n        }\n    });\n\n    // Load tasks if a project is loaded\n    useEffect(() => {\n        if (project.project) {\n            props.dispatch(getTasks(projectSpecifier));\n        }\n    }, [project]);\n\n    /**\n     * TODO:\n     * - implement \"Add Task\" button somewhere\n     * \n     */\n    const onAddTask = () => {\n        props.history.push(\"/tasks/new\");\n    }\n    \n\n    return !tasks.tasks ? (\n        <Loading />\n    ) : !Array.isArray(tasks.tasks) ? (\n        <div>Error while loading tasks</div>\n    ) : (\n        <>\n            <TaskListComponent\n                tasks={tasks.tasks}\n                user={user}\n            />\n        </>\n    );\n}\n\nexport default connect()(withRouter(TaskListView))"]},"metadata":{},"sourceType":"module"}