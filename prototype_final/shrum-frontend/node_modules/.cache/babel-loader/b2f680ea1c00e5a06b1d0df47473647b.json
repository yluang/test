{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/huangyongli/workspace/Shrum/prototype/shrum-frontend/src/views/MovieListView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { getMovies, deleteMovie } from \"../redux/actions\";\nimport MovieListComponent from \"../components/MovieListComponent\";\nimport Loading from \"../components/Loading\";\n/**\n * Manages the process of getting movie list data\n * @param {props} props\n */\n\nfunction MovieListView(props) {\n  _s();\n\n  // state from the redux store\n  const movies = useSelector(state => state.entities.movies);\n  const user = useSelector(state => state.user);\n  useEffect(() => {\n    // load movies when the page is loaded or the movies have changed.\n    if (!movies) {\n      loadMovies();\n    }\n  }, [movies]);\n\n  const loadMovies = async () => {\n    // trigger the redux action getMovies\n    props.dispatch(getMovies());\n  };\n\n  const onClickDeleteMovie = id => {\n    // trigger the redux action delete Movies\n    props.dispatch(deleteMovie(id));\n  };\n\n  const onClickDisplayMovie = id => {\n    // navigate to details of the selected movie\n    props.history.push(\"/movie/\" + id);\n  };\n\n  const onAddMovie = () => {\n    // navigate to an empty mask for entering details of the new movie\n    props.history.push(\"/movie/new\");\n  };\n\n  return !movies ?\n  /*#__PURE__*/\n  // if no movies are loaded, the above useEffect should be triggered\n  _jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this) : !Array.isArray(movies) ?\n  /*#__PURE__*/\n  // apperantly something went wrong, usually there should be some kind of error handling\n  _jsxDEV(\"div\", {\n    children: \"error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this) :\n  /*#__PURE__*/\n  // everyhing is fine an the movie list can be displayed\n  _jsxDEV(MovieListComponent, {\n    movies: movies,\n    onClickDisplayMovie: onClickDisplayMovie,\n    onClickDeleteMovie: onClickDeleteMovie,\n    onAddMovie: onAddMovie,\n    isLoggedIn: !!user.user,\n    isAdmin: !!user.user ? user.user.role === \"admin\" : false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n} // connect() establishes the connection to the redux functionalities\n\n\n_s(MovieListView, \"7q8FZehkIBv5W5kWX8TGwJW2JoQ=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = MovieListView;\nexport default connect()(MovieListView);\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieListView\");","map":{"version":3,"sources":["/Users/huangyongli/workspace/Shrum/prototype/shrum-frontend/src/views/MovieListView.js"],"names":["React","useEffect","connect","useSelector","getMovies","deleteMovie","MovieListComponent","Loading","MovieListView","props","movies","state","entities","user","loadMovies","dispatch","onClickDeleteMovie","id","onClickDisplayMovie","history","push","onAddMovie","Array","isArray","role"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AAEA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,kBAAvC;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA;AACA;AACA;AACA;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC1B;AACA,QAAMC,MAAM,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeF,MAA3B,CAA1B;AACA,QAAMG,IAAI,GAAGV,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACE,IAAlB,CAAxB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAI,CAACS,MAAL,EAAa;AACTI,MAAAA,UAAU;AACb;AACJ,GALQ,EAKN,CAACJ,MAAD,CALM,CAAT;;AAOA,QAAMI,UAAU,GAAG,YAAY;AAC3B;AACAL,IAAAA,KAAK,CAACM,QAAN,CAAeX,SAAS,EAAxB;AACH,GAHD;;AAKA,QAAMY,kBAAkB,GAAIC,EAAD,IAAQ;AAC/B;AACAR,IAAAA,KAAK,CAACM,QAAN,CAAeV,WAAW,CAACY,EAAD,CAA1B;AACH,GAHD;;AAKA,QAAMC,mBAAmB,GAAID,EAAD,IAAQ;AAChC;AACAR,IAAAA,KAAK,CAACU,OAAN,CAAcC,IAAd,CAAmB,YAAYH,EAA/B;AACH,GAHD;;AAKA,QAAMI,UAAU,GAAG,MAAM;AACrB;AACAZ,IAAAA,KAAK,CAACU,OAAN,CAAcC,IAAd,CAAmB,YAAnB;AACH,GAHD;;AAKA,SAAO,CAACV,MAAD;AAAA;AACH;AACA,UAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAFG,GAGH,CAACY,KAAK,CAACC,OAAN,CAAcb,MAAd,CAAD;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA;AAAA;AAIA;AACA,UAAC,kBAAD;AACI,IAAA,MAAM,EAAEA,MADZ;AAEI,IAAA,mBAAmB,EAAEQ,mBAFzB;AAGI,IAAA,kBAAkB,EAAEF,kBAHxB;AAII,IAAA,UAAU,EAAEK,UAJhB;AAKI,IAAA,UAAU,EAAE,CAAC,CAACR,IAAI,CAACA,IALvB;AAMI,IAAA,OAAO,EAAE,CAAC,CAACA,IAAI,CAACA,IAAP,GAAcA,IAAI,CAACA,IAAL,CAAUW,IAAV,KAAmB,OAAjC,GAA2C;AANxD;AAAA;AAAA;AAAA;AAAA,UARJ;AAiBH,C,CAED;;;GAnDShB,a;UAEUL,W,EACFA,W;;;KAHRK,a;AAoDT,eAAeN,OAAO,GAAGM,aAAH,CAAtB","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\n\nimport { getMovies, deleteMovie } from \"../redux/actions\";\nimport MovieListComponent from \"../components/MovieListComponent\";\nimport Loading from \"../components/Loading\";\n\n/**\n * Manages the process of getting movie list data\n * @param {props} props\n */\nfunction MovieListView(props) {\n    // state from the redux store\n    const movies = useSelector((state) => state.entities.movies);\n    const user = useSelector((state) => state.user);\n\n    useEffect(() => {\n        // load movies when the page is loaded or the movies have changed.\n        if (!movies) {\n            loadMovies();\n        }\n    }, [movies]);\n\n    const loadMovies = async () => {\n        // trigger the redux action getMovies\n        props.dispatch(getMovies());\n    };\n\n    const onClickDeleteMovie = (id) => {\n        // trigger the redux action delete Movies\n        props.dispatch(deleteMovie(id));\n    };\n\n    const onClickDisplayMovie = (id) => {\n        // navigate to details of the selected movie\n        props.history.push(\"/movie/\" + id);\n    };\n\n    const onAddMovie = () => {\n        // navigate to an empty mask for entering details of the new movie\n        props.history.push(\"/movie/new\");\n    };\n\n    return !movies ? (\n        // if no movies are loaded, the above useEffect should be triggered\n        <Loading />\n    ) : !Array.isArray(movies) ? (\n        // apperantly something went wrong, usually there should be some kind of error handling\n        <div>error</div>\n    ) : (\n        // everyhing is fine an the movie list can be displayed\n        <MovieListComponent\n            movies={movies}\n            onClickDisplayMovie={onClickDisplayMovie}\n            onClickDeleteMovie={onClickDeleteMovie}\n            onAddMovie={onAddMovie}\n            isLoggedIn={!!user.user}\n            isAdmin={!!user.user ? user.user.role === \"admin\" : false}\n        />\n    );\n}\n\n// connect() establishes the connection to the redux functionalities\nexport default connect()(MovieListView);\n"]},"metadata":{},"sourceType":"module"}