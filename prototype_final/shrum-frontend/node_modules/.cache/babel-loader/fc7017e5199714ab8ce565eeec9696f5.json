{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/huangyongli/workspace/Shrum/prototype/shrum-frontend/src/components/KebabMenu.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { logout } from \"../redux/actions\";\nimport { Menu, MenuItem, Avatar, Divider } from \"@material-ui/core\";\nimport { connect, useSelector } from \"react-redux\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\nconst useStyles = makeStyles(theme => ({\n  menuitem: {\n    display: \"flex\",\n    minWidth: \"200px\"\n  },\n  avatar: {\n    marginRight: theme.spacing(1)\n  }\n}));\n/**\n * Menu for user managment\n * @param {props} props\n */\n\nfunction KebabMenu(props) {\n  _s();\n\n  const classes = useStyles();\n  const user = useSelector(state => {\n    // return the currnetly logged in user from redux store\n    return state.user;\n  });\n\n  const onClickLogin = () => {\n    // close this menu\n    props.onClose(); // navigate to the login page\n\n    props.history.push(\"/login\");\n  };\n\n  const onClickLogout = () => {\n    // trigger redux logout action\n    props.dispatch(logout()); // close this menu\n\n    props.onClose(); // navigate to the home page\n\n    props.history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    open: props.open,\n    anchorEl: props.anchor,\n    onClose: props.onClose,\n    getContentAnchorEl: null,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"right\"\n    },\n    children: user.user ? [/*#__PURE__*/_jsxDEV(MenuItem, {\n      className: classes.menuitem,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: user.user.username ? user.user.username[0] : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 27\n      }, this), user.user.username]\n    }, \"user\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, \"divider\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: onClickLogout,\n      className: classes.menuitem,\n      children: [/*#__PURE__*/_jsxDEV(ExitToAppIcon, {\n        className: classes.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 27\n      }, this), \"Logout\"]\n    }, \"logout\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 23\n    }, this)] : [/*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: onClickLogin,\n      className: classes.menuitem,\n      children: [/*#__PURE__*/_jsxDEV(VerifiedUserIcon, {\n        className: classes.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 27\n      }, this), \"Login\"]\n    }, \"login\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 23\n    }, this)]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n} // attributes of props and their type\n\n\n_s(KebabMenu, \"pTzANc/oA6E5kyl8thaf5ng45Ig=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = KebabMenu;\nKebabMenu.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  anchor: PropTypes.element,\n  open: PropTypes.bool.isRequired\n};\nexport default connect()(withRouter(KebabMenu));\n\nvar _c;\n\n$RefreshReg$(_c, \"KebabMenu\");","map":{"version":3,"sources":["/Users/huangyongli/workspace/Shrum/prototype/shrum-frontend/src/components/KebabMenu.js"],"names":["React","makeStyles","PropTypes","withRouter","logout","Menu","MenuItem","Avatar","Divider","connect","useSelector","ExitToAppIcon","VerifiedUserIcon","useStyles","theme","menuitem","display","minWidth","avatar","marginRight","spacing","KebabMenu","props","classes","user","state","onClickLogin","onClose","history","push","onClickLogout","dispatch","open","anchor","vertical","horizontal","username","propTypes","func","isRequired","element","bool"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,OAAjC,QAAgD,mBAAhD;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AAEA,MAAMC,SAAS,GAAGZ,UAAU,CAAEa,KAAD,KAAY;AACrCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,MADH;AAENC,IAAAA,QAAQ,EAAE;AAFJ,GAD2B;AAKrCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,WAAW,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd;AADT;AAL6B,CAAZ,CAAD,CAA5B;AASA;AACA;AACA;AACA;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AAEA,QAAMW,IAAI,GAAGd,WAAW,CAAEe,KAAD,IAAW;AAChC;AACA,WAAOA,KAAK,CAACD,IAAb;AACH,GAHuB,CAAxB;;AAKA,QAAME,YAAY,GAAG,MAAM;AACvB;AACAJ,IAAAA,KAAK,CAACK,OAAN,GAFuB,CAGvB;;AACAL,IAAAA,KAAK,CAACM,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACH,GALD;;AAOA,QAAMC,aAAa,GAAG,MAAM;AACxB;AACAR,IAAAA,KAAK,CAACS,QAAN,CAAe3B,MAAM,EAArB,EAFwB,CAGxB;;AACAkB,IAAAA,KAAK,CAACK,OAAN,GAJwB,CAKxB;;AACAL,IAAAA,KAAK,CAACM,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACH,GAPD;;AASA,sBACI,QAAC,IAAD;AACI,IAAA,IAAI,EAAEP,KAAK,CAACU,IADhB;AAEI,IAAA,QAAQ,EAAEV,KAAK,CAACW,MAFpB;AAGI,IAAA,OAAO,EAAEX,KAAK,CAACK,OAHnB;AAII,IAAA,kBAAkB,EAAE,IAJxB;AAKI,IAAA,YAAY,EAAE;AACVO,MAAAA,QAAQ,EAAE,QADA;AAEVC,MAAAA,UAAU,EAAE;AAFF,KALlB;AAAA,cAUKX,IAAI,CAACA,IAAL,GACK,cACI,QAAC,QAAD;AAAqB,MAAA,SAAS,EAAED,OAAO,CAACR,QAAxC;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAEQ,OAAO,CAACL,MAA3B;AAAA,kBACKM,IAAI,CAACA,IAAL,CAAUY,QAAV,GAAqBZ,IAAI,CAACA,IAAL,CAAUY,QAAV,CAAmB,CAAnB,CAArB,GAA6C;AADlD;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKZ,IAAI,CAACA,IAAL,CAAUY,QAJf;AAAA,OAAc,MAAd;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI,QAAC,OAAD,MAAa,SAAb;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI,QAAC,QAAD;AAEI,MAAA,OAAO,EAAEN,aAFb;AAGI,MAAA,SAAS,EAAEP,OAAO,CAACR,QAHvB;AAAA,8BAKI,QAAC,aAAD;AAAe,QAAA,SAAS,EAAEQ,OAAO,CAACL;AAAlC;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA,OACQ,QADR;AAAA;AAAA;AAAA;AAAA,YARJ,CADL,GAkBK,cACI,QAAC,QAAD;AAEI,MAAA,OAAO,EAAEQ,YAFb;AAGI,MAAA,SAAS,EAAEH,OAAO,CAACR,QAHvB;AAAA,8BAKI,QAAC,gBAAD;AAAkB,QAAA,SAAS,EAAEQ,OAAO,CAACL;AAArC;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA,OACQ,OADR;AAAA;AAAA;AAAA;AAAA,YADJ;AA5BV;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH,C,CAED;;;GAnESG,S;UACWR,S,EAEHH,W;;;KAHRW,S;AAoETA,SAAS,CAACgB,SAAV,GAAsB;AAClBV,EAAAA,OAAO,EAAEzB,SAAS,CAACoC,IAAV,CAAeC,UADN;AAElBN,EAAAA,MAAM,EAAE/B,SAAS,CAACsC,OAFA;AAGlBR,EAAAA,IAAI,EAAE9B,SAAS,CAACuC,IAAV,CAAeF;AAHH,CAAtB;AAMA,eAAe9B,OAAO,GAAGN,UAAU,CAACkB,SAAD,CAAb,CAAtB","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { logout } from \"../redux/actions\";\nimport { Menu, MenuItem, Avatar, Divider } from \"@material-ui/core\";\nimport { connect, useSelector } from \"react-redux\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\n\nconst useStyles = makeStyles((theme) => ({\n    menuitem: {\n        display: \"flex\",\n        minWidth: \"200px\",\n    },\n    avatar: {\n        marginRight: theme.spacing(1),\n    },\n}));\n/**\n * Menu for user managment\n * @param {props} props\n */\nfunction KebabMenu(props) {\n    const classes = useStyles();\n\n    const user = useSelector((state) => {\n        // return the currnetly logged in user from redux store\n        return state.user;\n    });\n\n    const onClickLogin = () => {\n        // close this menu\n        props.onClose();\n        // navigate to the login page\n        props.history.push(\"/login\");\n    };\n\n    const onClickLogout = () => {\n        // trigger redux logout action\n        props.dispatch(logout());\n        // close this menu\n        props.onClose();\n        // navigate to the home page\n        props.history.push(\"/\");\n    };\n\n    return (\n        <Menu\n            open={props.open}\n            anchorEl={props.anchor}\n            onClose={props.onClose}\n            getContentAnchorEl={null}\n            anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"right\",\n            }}\n        >\n            {user.user\n                ? [\n                      <MenuItem key=\"user\" className={classes.menuitem}>\n                          <Avatar className={classes.avatar}>\n                              {user.user.username ? user.user.username[0] : \"\"}\n                          </Avatar>\n                          {user.user.username}\n                      </MenuItem>,\n                      <Divider key=\"divider\" />,\n                      <MenuItem\n                          key=\"logout\"\n                          onClick={onClickLogout}\n                          className={classes.menuitem}\n                      >\n                          <ExitToAppIcon className={classes.avatar} />\n                          Logout\n                      </MenuItem>,\n                  ]\n                : [\n                      <MenuItem\n                          key=\"login\"\n                          onClick={onClickLogin}\n                          className={classes.menuitem}\n                      >\n                          <VerifiedUserIcon className={classes.avatar} />\n                          Login\n                      </MenuItem>,\n                  ]}\n        </Menu>\n    );\n}\n\n// attributes of props and their type\nKebabMenu.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    anchor: PropTypes.element,\n    open: PropTypes.bool.isRequired,\n};\n\nexport default connect()(withRouter(KebabMenu));\n"]},"metadata":{},"sourceType":"module"}