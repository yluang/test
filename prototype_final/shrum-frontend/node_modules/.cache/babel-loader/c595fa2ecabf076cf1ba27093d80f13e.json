{"ast":null,"code":"import HttpService from \"./HttpService\";\nexport default class MovieService {\n  static baseURL() {\n    return \"http://localhost:4000/movies\";\n  }\n\n  static getMovies() {\n    return new Promise(async (resolve, reject) => {\n      HttpService.get(this.baseURL(), function (data) {\n        resolve(data);\n      }, function (textStatus) {\n        reject(textStatus);\n      });\n    });\n  }\n\n  static getMovie(id) {\n    return new Promise(async (resolve, reject) => {\n      HttpService.get(`${MovieService.baseURL()}/${id}`, function (data) {\n        if (data !== undefined || Object.keys(data).length !== 0) {\n          resolve(data);\n        } else {\n          reject(\"Error while retrieving movie\");\n        }\n      }, function (textStatus) {\n        reject(textStatus);\n      });\n    });\n  }\n\n  static deleteMovie(id) {\n    return new Promise((resolve, reject) => {\n      HttpService.remove(`${MovieService.baseURL()}/${id}`, function (data) {\n        if (data.message !== undefined) {\n          resolve(data.message);\n        } else {\n          reject(\"Error while deleting\");\n        }\n      }, function (textStatus) {\n        reject(textStatus);\n      });\n    });\n  }\n\n  static updateMovie(movie) {\n    return new Promise((resolve, reject) => {\n      HttpService.put(`${this.baseURL()}/${movie._id}`, movie, function (data) {\n        resolve(data);\n      }, function (textStatus) {\n        reject(textStatus);\n      });\n    });\n  }\n\n  static getRating(movieId) {\n    return new Promise((resolve, reject) => {\n      HttpService.get(`${this.baseURL()}/rate/${movieId}`, function (data) {\n        resolve(data);\n      }, function (textStatus) {\n        reject(textStatus);\n      });\n    });\n  }\n\n  static rateMovie(movieId, rating) {\n    return new Promise((resolve, reject) => {\n      HttpService.put(`${this.baseURL()}/rate/${movieId}`, {\n        rating: rating\n      }, function (data) {\n        resolve(data);\n      }, function (textStatus) {\n        reject(textStatus);\n      });\n    });\n  }\n\n  static createMovie(movie) {\n    movie.id = Math.floor(Math.random() * 100000000 + 1).toString();\n    movie.posters = {\n      thumbnail: \"http://resizing.flixster.com/AeDB8hgaGed_TMCcIF1P_gubGwA=/54x81/dkpu1ddg7pbsk.cloudfront.net/movie/11/27/63/11276344_ori.jpg\",\n      profile: \"http://resizing.flixster.com/AeDB8hgaGed_TMCcIF1P_gubGwA=/54x81/dkpu1ddg7pbsk.cloudfront.net/movie/11/27/63/11276344_ori.jpg\",\n      detailed: \"http://resizing.flixster.com/AeDB8hgaGed_TMCcIF1P_gubGwA=/54x81/dkpu1ddg7pbsk.cloudfront.net/movie/11/27/63/11276344_ori.jpg\",\n      original: \"http://resizing.flixster.com/AeDB8hgaGed_TMCcIF1P_gubGwA=/54x81/dkpu1ddg7pbsk.cloudfront.net/movie/11/27/63/11276344_ori.jpg\"\n    };\n    return new Promise((resolve, reject) => {\n      HttpService.post(MovieService.baseURL(), movie, function (data) {\n        resolve(data);\n      }, function (textStatus) {\n        reject(textStatus);\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/huangyongli/Desktop/test/prototype_final/shrum-frontend/src/services/MovieService.js"],"names":["HttpService","MovieService","baseURL","getMovies","Promise","resolve","reject","get","data","textStatus","getMovie","id","undefined","Object","keys","length","deleteMovie","remove","message","updateMovie","movie","put","_id","getRating","movieId","rateMovie","rating","createMovie","Math","floor","random","toString","posters","thumbnail","profile","detailed","original","post"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AAEA,eAAe,MAAMC,YAAN,CAAmB;AAC9B,SAAOC,OAAP,GAAiB;AACb,WAAO,8BAAP;AACH;;AAED,SAAOC,SAAP,GAAmB;AACf,WAAO,IAAIC,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC1CN,MAAAA,WAAW,CAACO,GAAZ,CACI,KAAKL,OAAL,EADJ,EAEI,UAAUM,IAAV,EAAgB;AACZH,QAAAA,OAAO,CAACG,IAAD,CAAP;AACH,OAJL,EAKI,UAAUC,UAAV,EAAsB;AAClBH,QAAAA,MAAM,CAACG,UAAD,CAAN;AACH,OAPL;AASH,KAVM,CAAP;AAWH;;AAED,SAAOC,QAAP,CAAgBC,EAAhB,EAAoB;AAChB,WAAO,IAAIP,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC1CN,MAAAA,WAAW,CAACO,GAAZ,CACK,GAAEN,YAAY,CAACC,OAAb,EAAuB,IAAGS,EAAG,EADpC,EAEI,UAAUH,IAAV,EAAgB;AACZ,YAAIA,IAAI,KAAKI,SAAT,IAAsBC,MAAM,CAACC,IAAP,CAAYN,IAAZ,EAAkBO,MAAlB,KAA6B,CAAvD,EAA0D;AACtDV,UAAAA,OAAO,CAACG,IAAD,CAAP;AACH,SAFD,MAEO;AACHF,UAAAA,MAAM,CAAC,8BAAD,CAAN;AACH;AACJ,OARL,EASI,UAAUG,UAAV,EAAsB;AAClBH,QAAAA,MAAM,CAACG,UAAD,CAAN;AACH,OAXL;AAaH,KAdM,CAAP;AAeH;;AAED,SAAOO,WAAP,CAAmBL,EAAnB,EAAuB;AACnB,WAAO,IAAIP,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCN,MAAAA,WAAW,CAACiB,MAAZ,CACK,GAAEhB,YAAY,CAACC,OAAb,EAAuB,IAAGS,EAAG,EADpC,EAEI,UAAUH,IAAV,EAAgB;AACZ,YAAIA,IAAI,CAACU,OAAL,KAAiBN,SAArB,EAAgC;AAC5BP,UAAAA,OAAO,CAACG,IAAI,CAACU,OAAN,CAAP;AACH,SAFD,MAEO;AACHZ,UAAAA,MAAM,CAAC,sBAAD,CAAN;AACH;AACJ,OARL,EASI,UAAUG,UAAV,EAAsB;AAClBH,QAAAA,MAAM,CAACG,UAAD,CAAN;AACH,OAXL;AAaH,KAdM,CAAP;AAeH;;AAED,SAAOU,WAAP,CAAmBC,KAAnB,EAA0B;AACtB,WAAO,IAAIhB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCN,MAAAA,WAAW,CAACqB,GAAZ,CACK,GAAE,KAAKnB,OAAL,EAAe,IAAGkB,KAAK,CAACE,GAAI,EADnC,EAEIF,KAFJ,EAGI,UAAUZ,IAAV,EAAgB;AACZH,QAAAA,OAAO,CAACG,IAAD,CAAP;AACH,OALL,EAMI,UAAUC,UAAV,EAAsB;AAClBH,QAAAA,MAAM,CAACG,UAAD,CAAN;AACH,OARL;AAUH,KAXM,CAAP;AAYH;;AAED,SAAOc,SAAP,CAAiBC,OAAjB,EAA0B;AACtB,WAAO,IAAIpB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCN,MAAAA,WAAW,CAACO,GAAZ,CACK,GAAE,KAAKL,OAAL,EAAe,SAAQsB,OAAQ,EADtC,EAEI,UAAUhB,IAAV,EAAgB;AACZH,QAAAA,OAAO,CAACG,IAAD,CAAP;AACH,OAJL,EAKI,UAAUC,UAAV,EAAsB;AAClBH,QAAAA,MAAM,CAACG,UAAD,CAAN;AACH,OAPL;AASH,KAVM,CAAP;AAWH;;AAED,SAAOgB,SAAP,CAAiBD,OAAjB,EAA0BE,MAA1B,EAAkC;AAC9B,WAAO,IAAItB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCN,MAAAA,WAAW,CAACqB,GAAZ,CACK,GAAE,KAAKnB,OAAL,EAAe,SAAQsB,OAAQ,EADtC,EAEI;AAAEE,QAAAA,MAAM,EAAEA;AAAV,OAFJ,EAGI,UAAUlB,IAAV,EAAgB;AACZH,QAAAA,OAAO,CAACG,IAAD,CAAP;AACH,OALL,EAMI,UAAUC,UAAV,EAAsB;AAClBH,QAAAA,MAAM,CAACG,UAAD,CAAN;AACH,OARL;AAUH,KAXM,CAAP;AAYH;;AAED,SAAOkB,WAAP,CAAmBP,KAAnB,EAA0B;AACtBA,IAAAA,KAAK,CAACT,EAAN,GAAWiB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,SAAhB,GAA4B,CAAvC,EAA0CC,QAA1C,EAAX;AACAX,IAAAA,KAAK,CAACY,OAAN,GAAgB;AACZC,MAAAA,SAAS,EACL,8HAFQ;AAGZC,MAAAA,OAAO,EACH,8HAJQ;AAKZC,MAAAA,QAAQ,EACJ,8HANQ;AAOZC,MAAAA,QAAQ,EACJ;AARQ,KAAhB;AAUA,WAAO,IAAIhC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCN,MAAAA,WAAW,CAACqC,IAAZ,CACIpC,YAAY,CAACC,OAAb,EADJ,EAEIkB,KAFJ,EAGI,UAAUZ,IAAV,EAAgB;AACZH,QAAAA,OAAO,CAACG,IAAD,CAAP;AACH,OALL,EAMI,UAAUC,UAAV,EAAsB;AAClBH,QAAAA,MAAM,CAACG,UAAD,CAAN;AACH,OARL;AAUH,KAXM,CAAP;AAYH;;AA3H6B","sourcesContent":["import HttpService from \"./HttpService\";\n\nexport default class MovieService {\n    static baseURL() {\n        return \"http://localhost:4000/movies\";\n    }\n\n    static getMovies() {\n        return new Promise(async (resolve, reject) => {\n            HttpService.get(\n                this.baseURL(),\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static getMovie(id) {\n        return new Promise(async (resolve, reject) => {\n            HttpService.get(\n                `${MovieService.baseURL()}/${id}`,\n                function (data) {\n                    if (data !== undefined || Object.keys(data).length !== 0) {\n                        resolve(data);\n                    } else {\n                        reject(\"Error while retrieving movie\");\n                    }\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static deleteMovie(id) {\n        return new Promise((resolve, reject) => {\n            HttpService.remove(\n                `${MovieService.baseURL()}/${id}`,\n                function (data) {\n                    if (data.message !== undefined) {\n                        resolve(data.message);\n                    } else {\n                        reject(\"Error while deleting\");\n                    }\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static updateMovie(movie) {\n        return new Promise((resolve, reject) => {\n            HttpService.put(\n                `${this.baseURL()}/${movie._id}`,\n                movie,\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static getRating(movieId) {\n        return new Promise((resolve, reject) => {\n            HttpService.get(\n                `${this.baseURL()}/rate/${movieId}`,\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static rateMovie(movieId, rating) {\n        return new Promise((resolve, reject) => {\n            HttpService.put(\n                `${this.baseURL()}/rate/${movieId}`,\n                { rating: rating },\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static createMovie(movie) {\n        movie.id = Math.floor(Math.random() * 100000000 + 1).toString();\n        movie.posters = {\n            thumbnail:\n                \"http://resizing.flixster.com/AeDB8hgaGed_TMCcIF1P_gubGwA=/54x81/dkpu1ddg7pbsk.cloudfront.net/movie/11/27/63/11276344_ori.jpg\",\n            profile:\n                \"http://resizing.flixster.com/AeDB8hgaGed_TMCcIF1P_gubGwA=/54x81/dkpu1ddg7pbsk.cloudfront.net/movie/11/27/63/11276344_ori.jpg\",\n            detailed:\n                \"http://resizing.flixster.com/AeDB8hgaGed_TMCcIF1P_gubGwA=/54x81/dkpu1ddg7pbsk.cloudfront.net/movie/11/27/63/11276344_ori.jpg\",\n            original:\n                \"http://resizing.flixster.com/AeDB8hgaGed_TMCcIF1P_gubGwA=/54x81/dkpu1ddg7pbsk.cloudfront.net/movie/11/27/63/11276344_ori.jpg\",\n        };\n        return new Promise((resolve, reject) => {\n            HttpService.post(\n                MovieService.baseURL(),\n                movie,\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}