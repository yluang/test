{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/huangyongli/workspace/Shrum/prototype/shrum-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from 'connected-react-router'; //import { createStore, applyMiddleware } from \"redux\";\n//import thunkMiddleware from \"redux-thunk\";\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport ScrollContainer from \"./components/ScrollContainer\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@material-ui/core\"; //import reducers from \"./redux/reducers\";\n\nimport configureStore, { history } from \"./configureStore\";\nimport routes from \"./routes\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Sidebar from \"./components/Sidebar\";\nimport AppTheme from \"./theming/themetypes\";\nimport AppThemeOptions from \"./theming/themes\";\nconst useStyles = makeStyles(theme => ({\n  appRoot: {\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflow: \"auto\"\n  },\n  tableContainer: {\n    display: \"flex\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  tableRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    width: \"100%\"\n  },\n  tableColumn: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexBasis: 0,\n    flexGrow: 1,\n    textAlign: \"center\"\n  }\n}));\n\nfunction App() {\n  _s();\n\n  const classes = useStyles(); // set document title\n\n  useEffect(() => {\n    document.title = \"Shrum Task Tracking Platform\";\n  }, []); // create store for redux\n\n  const store = configureStore(); //createStore(reducers, applyMiddleware(thunkMiddleware));\n  // theme for app\n\n  const [theme, setTheme] = React.useState(AppTheme.LIGHT); // toggle theme\n\n  const toggleTheme = () => {\n    setTheme(theme === AppTheme.LIGHT ? AppTheme.DARK : AppTheme.LIGHT);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.appRoot,\n    children: /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      theme: createMuiTheme(AppThemeOptions[theme]),\n      children: /*#__PURE__*/_jsxDEV(Provider, {\n        store: store,\n        children: /*#__PURE__*/_jsxDEV(ConnectedRouter, {\n          history: history,\n          children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Header, {\n              darkmode: theme === AppTheme.DARK,\n              toggletheme: toggleTheme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.tableContainer,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.tableRow,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.tableColumn,\n                  style: {\n                    \"max-width\": \"200px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.tableColumn,\n                  children: [/*#__PURE__*/_jsxDEV(ScrollContainer, {\n                    children: /*#__PURE__*/_jsxDEV(Switch, {\n                      children: routes.map((route, i) => /*#__PURE__*/_jsxDEV(Route, { ...route,\n                        history: history\n                      }, i, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 104,\n                        columnNumber: 57\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"F3oeEHWKVpfHYOTkE1/uUkg86uQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/huangyongli/workspace/Shrum/prototype/shrum-frontend/src/App.js"],"names":["React","useEffect","Route","Switch","Provider","ConnectedRouter","MuiThemeProvider","createMuiTheme","makeStyles","CssBaseline","ScrollContainer","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","configureStore","history","routes","Header","Footer","Sidebar","AppTheme","AppThemeOptions","useStyles","theme","appRoot","height","display","flexDirection","overflow","tableContainer","width","tableRow","flexWrap","tableColumn","flexBasis","flexGrow","textAlign","App","classes","document","title","store","setTheme","useState","LIGHT","toggleTheme","DARK","map","route","i"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from 'connected-react-router'\n//import { createStore, applyMiddleware } from \"redux\";\n//import thunkMiddleware from \"redux-thunk\";\nimport {\n    MuiThemeProvider,\n    createMuiTheme,\n    makeStyles,\n} from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport ScrollContainer from \"./components/ScrollContainer\";\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow\n} from \"@material-ui/core\";\n\n//import reducers from \"./redux/reducers\";\nimport configureStore, { history } from \"./configureStore\";\nimport routes from \"./routes\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Sidebar from \"./components/Sidebar\";\nimport AppTheme from \"./theming/themetypes\";\nimport AppThemeOptions from \"./theming/themes\";\n\nconst useStyles = makeStyles((theme) => ({\n    appRoot: {\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        overflow: \"auto\"\n    },\n\n    tableContainer: {\n        display: \"flex\",\n        width: \"100%\",\n        height: \"100%\"\n    },\n\n    tableRow: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        width: \"100%\",\n    },\n\n    tableColumn: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        flexBasis: 0,\n        flexGrow: 1,\n\n        textAlign: \"center\",\n    }\n\n}));\n\nfunction App() {\n    const classes = useStyles();\n\n    // set document title\n    useEffect(() => {\n        document.title = \"Shrum Task Tracking Platform\";\n    }, []);\n\n    // create store for redux\n    const store = configureStore(); //createStore(reducers, applyMiddleware(thunkMiddleware));\n\n    // theme for app\n    const [theme, setTheme] = React.useState(AppTheme.LIGHT);\n\n    // toggle theme\n    const toggleTheme = () => {\n        setTheme(theme === AppTheme.LIGHT ? AppTheme.DARK : AppTheme.LIGHT);\n    };\n\n    return (\n        <div className={classes.appRoot}>\n            <MuiThemeProvider theme={createMuiTheme(AppThemeOptions[theme])}>\n                <Provider store={store}>\n                    <ConnectedRouter history={history} >\n                        <React.Fragment>\n                            <CssBaseline />\n                            <Header\n                                darkmode={theme === AppTheme.DARK}\n                                toggletheme={toggleTheme}\n                            />\n                            \n                            <div className={classes.tableContainer}>\n                                    <div className={classes.tableRow}>\n                                        <div className={classes.tableColumn} style={{ \"max-width\": \"200px\" }}> \n                                            <Sidebar />\n                                        </div>\n                                        <div className={classes.tableColumn}>\n                                            <ScrollContainer>\n                                                <Switch>\n                                                    {routes.map((route, i) => (\n                                                        <Route key={i} {...route} history={history} />\n                                                    ))}\n                                                </Switch>\n                                            </ScrollContainer>\n                                            <Footer />\n                                        </div>\n                                    </div>\n                            </div>\n                                                    \n                            { /*\n                            <table tableLayout=\"auto\">\n                                <tbody>\n                                    <tr>\n                                        <td>\n                                            <Sidebar />\n                                        </td>\n                                        <td width=\"100%\">\n                                            <ScrollContainer>\n                                                <h1>Container</h1>\n                                            </ScrollContainer>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                            */}\n                            \n                            \n                        </React.Fragment>\n                    </ConnectedRouter>\n                </Provider>\n            </MuiThemeProvider>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}