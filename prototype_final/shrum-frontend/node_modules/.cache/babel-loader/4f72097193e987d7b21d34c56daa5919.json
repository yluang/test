{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/huangyongli/workspace/TestShrum/prototype_final/shrum-frontend/src/views/ProjectCreationView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect, useSelector } from \"react-redux\";\nimport ProjectCreationComponent from \"../components/ProjectCreationComponent\";\nimport { createProject } from \"../redux/actions\";\n/**\n * For register new users\n * @param {props} props\n */\n\nfunction ProjectCreationView(props) {\n  _s();\n\n  const user = useSelector(state => state.user);\n  const project = useSelector(state => state.currentProject);\n  useEffect(() => {\n    if (!user.user) {\n      props.history.push(\"/\");\n    }\n  }, [user, props.history]);\n  useEffect(() => {\n    // Navigate to the ticket board after successful project creation\n    if (project.project) {\n      props.history.push(\"/board\");\n    }\n  }, [project]);\n\n  const onCreate = project => {\n    console.log(\"Creating new project: \", project); // Trigger redux action create project\n\n    props.dispatch(createProject(project));\n  };\n\n  const onCancel = () => {\n    props.history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProjectCreationComponent, {\n    user: user,\n    onCreate: onCreate,\n    onCancel: onCancel\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProjectCreationView, \"h0eNV5DKX26RKT4TvneC1pn6ahc=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = ProjectCreationView;\nexport default connect()(withRouter(ProjectCreationView));\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectCreationView\");","map":{"version":3,"sources":["/Users/huangyongli/workspace/TestShrum/prototype_final/shrum-frontend/src/views/ProjectCreationView.js"],"names":["React","useEffect","withRouter","connect","useSelector","ProjectCreationComponent","createProject","ProjectCreationView","props","user","state","project","currentProject","history","push","onCreate","console","log","dispatch","onCancel"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AAEA,OAAOC,wBAAP,MAAqC,wCAArC;AAEA,SAASC,aAAT,QAA8B,kBAA9B;AAEA;AACA;AACA;AACA;;AACC,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AACjC,QAAMC,IAAI,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAME,OAAO,GAAGP,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACE,cAAlB,CAA3B;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACQ,IAAI,CAACA,IAAV,EAAgB;AACZD,MAAAA,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACH;AACJ,GAJQ,EAIN,CAACL,IAAD,EAAOD,KAAK,CAACK,OAAb,CAJM,CAAT;AAMAZ,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAIU,OAAO,CAACA,OAAZ,EAAoB;AAChBH,MAAAA,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACH;AACJ,GALQ,EAKN,CAACH,OAAD,CALM,CAAT;;AAOA,QAAMI,QAAQ,GAAIJ,OAAD,IAAa;AAC1BK,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCN,OAAtC,EAD0B,CAG1B;;AACAH,IAAAA,KAAK,CAACU,QAAN,CAAeZ,aAAa,CAACK,OAAD,CAA5B;AAEH,GAND;;AAQA,QAAMQ,QAAQ,GAAG,MAAM;AACnBX,IAAAA,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACH,GAFD;;AAIA,sBACI,QAAC,wBAAD;AACI,IAAA,IAAI,EAAEL,IADV;AAEI,IAAA,QAAQ,EAAEM,QAFd;AAGI,IAAA,QAAQ,EAAEI;AAHd;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GApCSZ,mB;UACOH,W,EACGA,W;;;KAFVG,mB;AAsCV,eAAeJ,OAAO,GAAGD,UAAU,CAACK,mBAAD,CAAb,CAAtB","sourcesContent":["import React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect, useSelector } from \"react-redux\";\n\nimport ProjectCreationComponent from \"../components/ProjectCreationComponent\";\n\nimport { createProject } from \"../redux/actions\";\n\n/**\n * For register new users\n * @param {props} props\n */\n function ProjectCreationView(props) {\n    const user = useSelector((state) => state.user);\n    const project = useSelector((state) => state.currentProject);\n\n    useEffect(() => {\n        if (!user.user) {\n            props.history.push(\"/\");\n        }\n    }, [user, props.history]);\n\n    useEffect(() => {\n        // Navigate to the ticket board after successful project creation\n        if (project.project){\n            props.history.push(\"/board\");\n        }\n    }, [project]);\n\n    const onCreate = (project) => {\n        console.log(\"Creating new project: \", project);\n\n        // Trigger redux action create project\n        props.dispatch(createProject(project));\n\n    };\n\n    const onCancel = () => {\n        props.history.push(\"/\");\n    };\n\n    return (\n        <ProjectCreationComponent\n            user={user}\n            onCreate={onCreate}\n            onCancel={onCancel}\n        />\n    );\n}\n\nexport default connect()(withRouter(ProjectCreationView));\n"]},"metadata":{},"sourceType":"module"}