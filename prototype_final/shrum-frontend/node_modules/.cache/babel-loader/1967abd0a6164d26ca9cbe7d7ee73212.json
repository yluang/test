{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/huangyongli/Desktop/test/prototype_final/shrum-frontend/src/views/BoardView.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect, useSelector } from \"react-redux\"; //import BoardComponent from \"../components/BoardComponent\";\n\nimport Board from 'react-trello';\n/**\n * For register new users\n * @param {props} props\n */\n//  class NewCardForm extends Component {\n//   handleAdd = () => this.props.onAdd({title: this.titleRef.value, description: this.descRef.value, label: this.label.value, assignee: this.assignee.value, priority: this.priority.value, reviewer: this.reviewer.value})\n//   setTitleRef = (ref) => this.titleRef = ref\n//   setDescRef = (ref) => this.descRef = ref\n//   setLabelRef = (ref) => this.label = ref\n//   setAssigneeRef = (ref) => this.assignee = ref\n//   setPriorityRef =(ref) => this.priority = ref\n//   setReviewerRef = (ref) => this.reviewer = ref\n//   render() {\n//   const {onCancel} = this.props\n//   return (\n//    <div style={{background: 'white', borderRadius: 3, border: '1px solid #eee', borderBottom: '1px solid #ccc'}}>\n//     <div style={{padding: 5, margin: 5}}>\n//       <div>\n//         <div style={{marginBottom: 5}}>\n//           <input type=\"text\" ref={this.setTitleRef} placeholder=\"User\" />\n//         </div>\n//         <div style={{marginBottom: 5}}>\n//           <input type=\"text\" ref={this.setDescRef} placeholder=\"Task Description\" />\n//         </div>\n//         <div style={{marginBottom: 5}}>\n//           <input type=\"text\" ref={this.setLabelRef} placeholder=\"points\" />\n//         </div>\n//         <div style={{marginBottom: 5}}>\n//           <input type=\"text\" ref={this.setAssigneeRef} placeholder=\"assignee\" />\n//         </div>\n//         <div style={{marginBottom: 5}}>\n//           <input type=\"text\" ref={this.setPriorityRef} placeholder=\"priority\" />\n//         </div>\n//         <div style={{marginBottom: 5}}>\n//           <input type=\"text\" ref={this.setReviewerRef} placeholder=\"reviewer\" />\n//         </div>\n//       </div>\n//       <button onClick={this.handleAdd}>Add</button>\n//       <button onClick={onCancel}>Cancel</button>\n//     </div>\n//   </div>\n//     ) \n//   }\n// }\n\nfunction BoardView() {\n  //const [retrievedObject, setRetrievedObject] = useState([]);\n  localStorage.clear();\n  const data = {\n    lanes: [{\n      id: 'lane1',\n      title: 'To Do',\n      cards: [],\n      cards: [{\n        id: 'Card1',\n        title: 'Assignment 1',\n        description: 'Deadline: Sunday, May 2nd.',\n        assignee: 'None',\n        priority: 'low ❗',\n        reviewer: 'None',\n        label: '3 Points',\n        draggable: true\n      }, {\n        id: 'Card2',\n        title: 'Assignment 2',\n        description: 'Deadline: Sunday, May 16th.',\n        assignee: 'None',\n        priority: 'low ❗',\n        reviewer: 'None',\n        label: '5 Points',\n        metadata: {\n          sha: 'be312a1'\n        }\n      }, {\n        id: 'Card3',\n        title: 'Assignment 3',\n        description: 'Deadline: Sunday, July 25th.',\n        assignee: 'None',\n        priority: 'high ❗❗',\n        reviewer: 'None',\n        label: '8 Points',\n        metadata: {\n          sha: 'be312a1'\n        }\n      }, {\n        id: 'Card4',\n        title: 'Final Exam',\n        description: 'Deadline: Friday, Augusr 6th.',\n        assignee: 'None',\n        priority: 'high ❗❗',\n        reviewer: 'None',\n        label: '8 Points',\n        metadata: {\n          sha: 'be312a1'\n        }\n      }]\n    }, {\n      id: 'lane2',\n      title: 'In Progress',\n      cards: []\n    }, {\n      id: 'lane3',\n      title: 'In Review',\n      cards: []\n    }, {\n      id: 'lane4',\n      title: 'Done',\n      cards: []\n    }]\n  }; //localStorage.setItem('data', JSON.stringify(data));\n  //var retrievedObject = localStorage.getItem('data') || [];\n  //console.log('old data: ', JSON.parse(retrievedObject));\n\n  return /*#__PURE__*/_jsxDEV(Board, {\n    style: {\n      backgroundColor: 'grey'\n    },\n    editable: true // onCardAdd={(card) => {localStorage.setItem('data', JSON.stringify(card));\n    //                     retrievedObject = localStorage.getItem('data');\n    //                    console.log(\"new card: \", retrievedObject)}}\n    ,\n    onDataChange: newData => {\n      localStorage.clear();\n      localStorage.setItem('data', JSON.stringify(newData)); //console.log(\"data changed\",JSON.parse(retrievedObject))\n    },\n    cardDraggable: true,\n    draggable: true,\n    data: JSON.parse(localStorage.getItem('data') || data),\n    collapsibleLanes: true //components={{NewCardForm: NewCardForm}} \n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 7\n  }, this);\n}\n\n_c = BoardView;\nexport default connect()(withRouter(BoardView));\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardView\");","map":{"version":3,"sources":["/Users/huangyongli/Desktop/test/prototype_final/shrum-frontend/src/views/BoardView.js"],"names":["React","Component","useState","useEffect","withRouter","connect","useSelector","Board","BoardView","localStorage","clear","data","lanes","id","title","cards","description","assignee","priority","reviewer","label","draggable","metadata","sha","backgroundColor","newData","setItem","JSON","stringify","parse","getItem"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { connect, useSelector } from \"react-redux\";\n\n\n//import BoardComponent from \"../components/BoardComponent\";\nimport Board from 'react-trello'\n\n\n/**\n * For register new users\n * @param {props} props\n */\n\n//  class NewCardForm extends Component {\n//   handleAdd = () => this.props.onAdd({title: this.titleRef.value, description: this.descRef.value, label: this.label.value, assignee: this.assignee.value, priority: this.priority.value, reviewer: this.reviewer.value})\n//   setTitleRef = (ref) => this.titleRef = ref\n//   setDescRef = (ref) => this.descRef = ref\n//   setLabelRef = (ref) => this.label = ref\n//   setAssigneeRef = (ref) => this.assignee = ref\n//   setPriorityRef =(ref) => this.priority = ref\n//   setReviewerRef = (ref) => this.reviewer = ref\n//   render() {\n//   const {onCancel} = this.props\n//   return (\n//    <div style={{background: 'white', borderRadius: 3, border: '1px solid #eee', borderBottom: '1px solid #ccc'}}>\n//     <div style={{padding: 5, margin: 5}}>\n//       <div>\n//         <div style={{marginBottom: 5}}>\n//           <input type=\"text\" ref={this.setTitleRef} placeholder=\"User\" />\n//         </div>\n//         <div style={{marginBottom: 5}}>\n//           <input type=\"text\" ref={this.setDescRef} placeholder=\"Task Description\" />\n//         </div>\n//         <div style={{marginBottom: 5}}>\n//           <input type=\"text\" ref={this.setLabelRef} placeholder=\"points\" />\n//         </div>\n//         <div style={{marginBottom: 5}}>\n//           <input type=\"text\" ref={this.setAssigneeRef} placeholder=\"assignee\" />\n//         </div>\n//         <div style={{marginBottom: 5}}>\n//           <input type=\"text\" ref={this.setPriorityRef} placeholder=\"priority\" />\n//         </div>\n//         <div style={{marginBottom: 5}}>\n//           <input type=\"text\" ref={this.setReviewerRef} placeholder=\"reviewer\" />\n//         </div>\n//       </div>\n//       <button onClick={this.handleAdd}>Add</button>\n//       <button onClick={onCancel}>Cancel</button>\n//     </div>\n//   </div>\n//     ) \n//   }\n// }\n\n\n\nfunction BoardView() {\n  //const [retrievedObject, setRetrievedObject] = useState([]);\n  \n  localStorage.clear();\n\n    const data = {\n      lanes: [\n      {\n        id: 'lane1',\n        title: 'To Do',\n        cards:[],\n        cards: [\n          {id: 'Card1', title: 'Assignment 1', description: 'Deadline: Sunday, May 2nd.',assignee: 'None', priority:'low ❗', reviewer: 'None', label: '3 Points', draggable: true},\n          {id: 'Card2', title: 'Assignment 2', description: 'Deadline: Sunday, May 16th.', assignee: 'None', priority:'low ❗', reviewer: 'None',  label: '5 Points', metadata: {sha: 'be312a1'}},\n          {id: 'Card3', title: 'Assignment 3', description: 'Deadline: Sunday, July 25th.', assignee: 'None', priority:'high ❗❗', reviewer: 'None', label: '8 Points', metadata: {sha: 'be312a1'}},\n          {id: 'Card4', title: 'Final Exam', description: 'Deadline: Friday, Augusr 6th.',  assignee: 'None', priority:'high ❗❗', reviewer: 'None', label: '8 Points', metadata: {sha: 'be312a1'}}\n        ]\n      },\n      {\n        id: 'lane2',\n        title: 'In Progress',\n        cards: []\n     \n      },\n      {\n        id: 'lane3',\n        title: 'In Review',\n        cards: []\n       \n      },\n      {\n        id: 'lane4',\n        title: 'Done',\n        cards: []\n      \n      }\n    ]\n  };\n\n\n\n\n\n  //localStorage.setItem('data', JSON.stringify(data));\n  //var retrievedObject = localStorage.getItem('data') || [];\n  //console.log('old data: ', JSON.parse(retrievedObject));\n\n    return (\n      <Board style = {{backgroundColor: 'grey'}}\n      editable\n    \n      // onCardAdd={(card) => {localStorage.setItem('data', JSON.stringify(card));\n      //                     retrievedObject = localStorage.getItem('data');\n      //                    console.log(\"new card: \", retrievedObject)}}\n\n      onDataChange={(newData) => {\n                          localStorage.clear();\n                          localStorage.setItem('data', JSON.stringify(newData));\n                          //console.log(\"data changed\",JSON.parse(retrievedObject))\n                     }}\n\n                    cardDraggable\n                    draggable\n                    data={JSON.parse(localStorage.getItem('data') || data) }\n                    \n\n              \n                         \n                    collapsibleLanes\n                    //components={{NewCardForm: NewCardForm}} \n                         />\n                         \n    );\n\n\n   \n  \n}\n\nexport default connect()(withRouter(BoardView));\n"]},"metadata":{},"sourceType":"module"}