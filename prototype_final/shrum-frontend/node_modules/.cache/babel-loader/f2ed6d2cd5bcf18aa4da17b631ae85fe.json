{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/huangyongli/workspace/Shrum/prototype/shrum-frontend/src/components/MovieDetailsComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport CustomTextField from \"../components/CustomTextField\";\nimport CustomChip from \"../components/CustomChip\";\nimport DetailsArea from \"../components/DetailsArea\";\nimport MovieCast from \"./MovieCast\";\nimport { withRouter } from \"react-router-dom\";\nimport MovieService from \"../services/MovieService\";\nimport ReleaseDates from \"./ReleaseDates\";\nimport Ratings from \"./Ratings\";\nimport Synopsis from \"./Synopsis\";\nconst useStyles = makeStyles(theme => ({\n  flexCol: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  flexRow: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  justifySpaceBetween: {\n    justifyContent: \"space-between\"\n  },\n  flex: {\n    flex: 1\n  },\n  flexEnd: {\n    justifyContent: \"flex-end\"\n  },\n  marginSides: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  center: {\n    margin: \"auto\"\n  },\n  padding: {\n    padding: theme.spacing(2)\n  },\n  maxWidth: {\n    width: \"100%\",\n    maxWidth: \"1500px\"\n  },\n  pageArea: {\n    paddingBottom: theme.spacing(2),\n    \"&:last-child\": {\n      paddingBottom: 0\n    }\n  },\n  title: {\n    marginTop: theme.spacing(4)\n  },\n  barMinHeight: {\n    minHeight: theme.spacing(5),\n    position: \"absolute\",\n    top: theme.spacing(1),\n    right: theme.spacing(2)\n  }\n}));\n/**\n * For presenting and changing movie details\n * @param {props} props\n */\n\nfunction MovieDetailsComponent(props) {\n  _s();\n\n  const classes = useStyles();\n  const [movieTitle, setMovieTitle] = React.useState(\" \");\n  const [movieSynopsis, setMovieSynopsis] = React.useState(\"\");\n  const [movieCast, setMovieCast] = React.useState([]);\n  const [movieAgeRating, setMovieAgeRating] = React.useState(\"\");\n  const [movieRuntime, setMovieRuntime] = React.useState(\"\");\n  const [movieYear, setMovieYear] = React.useState(\"\");\n  const [criticsRating, setCriticsRating] = React.useState(\"\");\n  const [avgAudienceRating, setAvgAudienceRating] = React.useState(\"\");\n  const [theaterRelease, setTheaterRelease] = React.useState(\"\");\n  const [blurayRelase, setBlurayRelease] = React.useState(\"\");\n  const [moviethumbnail, setMovieThumbnail] = React.useState(\"\"); // for extracting the attributes of the given movie to the approriate state variables\n\n  const extractMovie = () => {\n    if (!props.movie) {\n      return;\n    }\n\n    setMovieTitle(props.movie.title);\n    setMovieSynopsis(props.movie.synopsis);\n    setMovieAgeRating(props.movie.mpaa_rating);\n    setMovieRuntime(props.movie.runtime);\n    setMovieCast(JSON.parse(JSON.stringify(props.movie.actors)));\n    setCriticsRating(props.movie.criticsRating);\n    setAvgAudienceRating(props.movie.avgAudienceRating);\n    setTheaterRelease(props.movie.theaterRelease);\n    setBlurayRelease(props.movie.blurayRelease);\n    setMovieYear(props.movie.year);\n    setMovieThumbnail(props.movie.thumbnail);\n  }; // creating a object with all relevant data to update or create a changed movie\n\n\n  const packMovie = () => {\n    let back = { ...props.movie\n    };\n    back.title = movieTitle;\n    back.synopsis = movieSynopsis;\n    back.runtime = movieRuntime;\n    back.mpaa_rating = movieAgeRating;\n    back.theaterRelease = theaterRelease;\n    back.blurayRelease = blurayRelase;\n    back.criticsRating = criticsRating;\n    back.actors = movieCast;\n    back.thumbnail = moviethumbnail;\n    return back;\n  }; // triggers when a new movie is given to this component or the new parameter is changed\n\n\n  useEffect(() => {\n    if (!props.new) {\n      extractMovie();\n    }\n  }, [props.movie, props.new]); // triggers when the new parameter is changed and setts the edit mode to true\n\n  useEffect(() => {\n    if (props.new) {\n      setEditMode(true);\n    }\n  }, [props.new]); // indicates whether the movie can be changed\n\n  const [editMode, setEditMode] = React.useState(null); // props for all grid items used below in the JSX\n\n  const girdItemProps = {\n    item: true,\n    className: classes.padding\n  }; // ----------------------------------------------------------------------------------------------------\n  // on change functions\n\n  const onChangeTitle = value => {\n    setMovieTitle(value);\n  };\n\n  const onChangeSynopsis = value => {\n    setMovieSynopsis(value);\n  };\n\n  const onChangeRuntime = value => {\n    setMovieRuntime(value);\n  };\n\n  const onChangeAgeRating = value => {\n    setMovieAgeRating(value);\n  };\n\n  const onChangeThumbnail = value => {\n    setMovieThumbnail(value);\n  };\n\n  const onChangeOwnRating = async value => {\n    await MovieService.rateMovie(props.movie._id, value);\n    let newAvgAudienceRating = await MovieService.getRating(props.movie._id);\n    setAvgAudienceRating(newAvgAudienceRating.rating);\n  };\n\n  const toggleEditMode = () => {\n    setEditMode(!editMode);\n  }; // ----------------------------------------------------------------------------------------------------\n  // for cast\n\n\n  const onAddCastMember = castMember => {\n    movieCast.push(castMember);\n    setMovieCast([...movieCast]);\n  }; // for cast\n\n\n  const onRemoveCastMember = index => {\n    movieCast.splice(index, 1);\n    setMovieCast([...movieCast]);\n  }; // cancel is called, functionality differs whether it is a new movie or not\n\n\n  const onCancel = () => {\n    if (props.new) {\n      props.history.push(\"/\");\n    } else {\n      setEditMode(false);\n      extractMovie();\n    }\n  }; // save is called, functionality differs whether it is a new movie or not\n\n\n  const onSave = () => {\n    if (props.new) {\n      props.onCreate(packMovie());\n    } else {\n      setEditMode(false);\n      props.onSave(packMovie());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.flexCol + \" \" + classes.padding + \" \" + classes.center + \" \" + classes.flex + \" \" + classes.maxWidth,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.flexRow + \" \" + classes.flexEnd + \" \" + classes.barMinHeight,\n      children: props.isAdmin ? editMode ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: onCancel,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.marginSides,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onSave,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.marginSides,\n          disabled: props.new && movieTitle === \"\",\n          children: props.new ? \"Create\" : \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        onClick: e => setEditMode(true),\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.marginSides,\n        disabled: !props.isLoggedIn,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 25\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.pageArea + \" \" + classes.title,\n      children: /*#__PURE__*/_jsxDEV(CustomTextField, {\n        value: movieTitle,\n        editMode: editMode,\n        furtherProps: {\n          fullWidth: true\n        },\n        align: \"center\",\n        variant: \"h2\",\n        onChange: onChangeTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      className: classes.pageArea,\n      children: [/*#__PURE__*/_jsxDEV(Grid, { ...girdItemProps,\n        children: /*#__PURE__*/_jsxDEV(CustomChip, {\n          content: movieRuntime,\n          caption: \"Runtime\",\n          suffix: \"Minutes\",\n          editMode: editMode,\n          onChange: onChangeRuntime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, { ...girdItemProps,\n        children: /*#__PURE__*/_jsxDEV(CustomChip, {\n          content: movieYear === -1 ? \"No Release Year\" : movieYear,\n          caption: \"Year\",\n          editMode: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, { ...girdItemProps,\n        children: /*#__PURE__*/_jsxDEV(CustomChip, {\n          content: movieAgeRating,\n          caption: \"MPAA\",\n          editMode: editMode,\n          onChange: onChangeAgeRating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        xl: 6,\n        lg: 6,\n        md: 6,\n        ms: 12,\n        xs: 12,\n        ...girdItemProps,\n        children: /*#__PURE__*/_jsxDEV(DetailsArea, {\n          title: \"Ratings\",\n          content: /*#__PURE__*/_jsxDEV(Ratings, {\n            criticsRating: typeof criticsRating === \"number\" ? criticsRating : 0,\n            avgAudienceRating: typeof avgAudienceRating === \"number\" ? avgAudienceRating : 0,\n            editMode: editMode,\n            onChangeCriticsRating: value => setCriticsRating(value),\n            onChangeOwnRating: value => onChangeOwnRating(value),\n            isAdmin: props.isAdmin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xl: 6,\n        lg: 6,\n        md: 6,\n        ms: 12,\n        xs: 12,\n        ...girdItemProps,\n        children: /*#__PURE__*/_jsxDEV(DetailsArea, {\n          title: \"Release Dates\",\n          content: /*#__PURE__*/_jsxDEV(ReleaseDates, {\n            theaterRelease: theaterRelease,\n            blurayRelase: blurayRelase,\n            editMode: editMode,\n            onChangeTheaterRelease: value => setTheaterRelease(value),\n            onChangeBlurayRelease: value => setBlurayRelease(value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xl: 6,\n        lg: 6,\n        md: 6,\n        ms: 12,\n        xs: 12,\n        ...girdItemProps,\n        children: /*#__PURE__*/_jsxDEV(DetailsArea, {\n          title: \"Synopsis\",\n          content: /*#__PURE__*/_jsxDEV(Synopsis, {\n            editMode: editMode,\n            movieSynopsis: movieSynopsis,\n            moviethumbnail: moviethumbnail,\n            onChangeThumbnail: onChangeThumbnail,\n            onChangeSynopsis: onChangeSynopsis\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xl: 6,\n        lg: 6,\n        md: 6,\n        ms: 12,\n        xs: 12,\n        ...girdItemProps,\n        children: /*#__PURE__*/_jsxDEV(DetailsArea, {\n          title: \"Starring\",\n          content: /*#__PURE__*/_jsxDEV(MovieCast, {\n            movieCast: movieCast,\n            editMode: editMode,\n            toggleEditMode: toggleEditMode,\n            onAddCastMember: onAddCastMember,\n            onRemoveCastMember: onRemoveCastMember,\n            isLoggedIn: props.isLoggedIn,\n            isAdmin: props.isAdmin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 9\n  }, this);\n} // attributes of props and their type\n\n\n_s(MovieDetailsComponent, \"gwg6P+KSvgCGhevzPMJgsO3r2+E=\", false, function () {\n  return [useStyles];\n});\n\n_c = MovieDetailsComponent;\nMovieDetailsComponent.propTypes = {\n  movie: PropTypes.object,\n  new: PropTypes.bool,\n  onCreate: PropTypes.func,\n  onSave: PropTypes.func\n}; // withRouter() allows accsing the necessary functionality to navigate from this component\n\nexport default _c2 = withRouter(MovieDetailsComponent);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MovieDetailsComponent\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/huangyongli/workspace/Shrum/prototype/shrum-frontend/src/components/MovieDetailsComponent.js"],"names":["React","useEffect","makeStyles","Button","Grid","PropTypes","CustomTextField","CustomChip","DetailsArea","MovieCast","withRouter","MovieService","ReleaseDates","Ratings","Synopsis","useStyles","theme","flexCol","display","flexDirection","flexRow","justifySpaceBetween","justifyContent","flex","flexEnd","marginSides","marginLeft","spacing","marginRight","center","margin","padding","maxWidth","width","pageArea","paddingBottom","title","marginTop","barMinHeight","minHeight","position","top","right","MovieDetailsComponent","props","classes","movieTitle","setMovieTitle","useState","movieSynopsis","setMovieSynopsis","movieCast","setMovieCast","movieAgeRating","setMovieAgeRating","movieRuntime","setMovieRuntime","movieYear","setMovieYear","criticsRating","setCriticsRating","avgAudienceRating","setAvgAudienceRating","theaterRelease","setTheaterRelease","blurayRelase","setBlurayRelease","moviethumbnail","setMovieThumbnail","extractMovie","movie","synopsis","mpaa_rating","runtime","JSON","parse","stringify","actors","blurayRelease","year","thumbnail","packMovie","back","new","setEditMode","editMode","girdItemProps","item","className","onChangeTitle","value","onChangeSynopsis","onChangeRuntime","onChangeAgeRating","onChangeThumbnail","onChangeOwnRating","rateMovie","_id","newAvgAudienceRating","getRating","rating","toggleEditMode","onAddCastMember","castMember","push","onRemoveCastMember","index","splice","onCancel","history","onSave","onCreate","isAdmin","e","isLoggedIn","fullWidth","propTypes","object","bool","func"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport CustomTextField from \"../components/CustomTextField\";\nimport CustomChip from \"../components/CustomChip\";\nimport DetailsArea from \"../components/DetailsArea\";\nimport MovieCast from \"./MovieCast\";\nimport { withRouter } from \"react-router-dom\";\nimport MovieService from \"../services/MovieService\";\nimport ReleaseDates from \"./ReleaseDates\";\nimport Ratings from \"./Ratings\";\nimport Synopsis from \"./Synopsis\";\n\nconst useStyles = makeStyles((theme) => ({\n    flexCol: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    flexRow: {\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    justifySpaceBetween: {\n        justifyContent: \"space-between\",\n    },\n    flex: {\n        flex: 1,\n    },\n    flexEnd: {\n        justifyContent: \"flex-end\",\n    },\n    marginSides: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    center: {\n        margin: \"auto\",\n    },\n    padding: {\n        padding: theme.spacing(2),\n    },\n    maxWidth: {\n        width: \"100%\",\n        maxWidth: \"1500px\",\n    },\n    pageArea: {\n        paddingBottom: theme.spacing(2),\n        \"&:last-child\": {\n            paddingBottom: 0,\n        },\n    },\n    title: {\n        marginTop: theme.spacing(4),\n    },\n    barMinHeight: {\n        minHeight: theme.spacing(5),\n        position: \"absolute\",\n        top: theme.spacing(1),\n        right: theme.spacing(2),\n    },\n}));\n\n/**\n * For presenting and changing movie details\n * @param {props} props\n */\nfunction MovieDetailsComponent(props) {\n    const classes = useStyles();\n\n    const [movieTitle, setMovieTitle] = React.useState(\" \");\n    const [movieSynopsis, setMovieSynopsis] = React.useState(\"\");\n    const [movieCast, setMovieCast] = React.useState([]);\n    const [movieAgeRating, setMovieAgeRating] = React.useState(\"\");\n    const [movieRuntime, setMovieRuntime] = React.useState(\"\");\n    const [movieYear, setMovieYear] = React.useState(\"\");\n    const [criticsRating, setCriticsRating] = React.useState(\"\");\n    const [avgAudienceRating, setAvgAudienceRating] = React.useState(\"\");\n    const [theaterRelease, setTheaterRelease] = React.useState(\"\");\n    const [blurayRelase, setBlurayRelease] = React.useState(\"\");\n    const [moviethumbnail, setMovieThumbnail] = React.useState(\"\");\n\n    // for extracting the attributes of the given movie to the approriate state variables\n    const extractMovie = () => {\n        if (!props.movie) {\n            return;\n        }\n\n        setMovieTitle(props.movie.title);\n        setMovieSynopsis(props.movie.synopsis);\n        setMovieAgeRating(props.movie.mpaa_rating);\n        setMovieRuntime(props.movie.runtime);\n\n        setMovieCast(JSON.parse(JSON.stringify(props.movie.actors)));\n        setCriticsRating(props.movie.criticsRating);\n        setAvgAudienceRating(props.movie.avgAudienceRating);\n        setTheaterRelease(props.movie.theaterRelease);\n        setBlurayRelease(props.movie.blurayRelease);\n        setMovieYear(props.movie.year);\n        setMovieThumbnail(props.movie.thumbnail);\n    };\n\n    // creating a object with all relevant data to update or create a changed movie\n    const packMovie = () => {\n        let back = {\n            ...props.movie,\n        };\n\n        back.title = movieTitle;\n        back.synopsis = movieSynopsis;\n        back.runtime = movieRuntime;\n        back.mpaa_rating = movieAgeRating;\n\n        back.theaterRelease = theaterRelease;\n        back.blurayRelease = blurayRelase;\n        back.criticsRating = criticsRating;\n        back.actors = movieCast;\n        back.thumbnail = moviethumbnail;\n\n        return back;\n    };\n\n    // triggers when a new movie is given to this component or the new parameter is changed\n    useEffect(() => {\n        if (!props.new) {\n            extractMovie();\n        }\n    }, [props.movie, props.new]);\n\n    // triggers when the new parameter is changed and setts the edit mode to true\n    useEffect(() => {\n        if (props.new) {\n            setEditMode(true);\n        }\n    }, [props.new]);\n\n    // indicates whether the movie can be changed\n    const [editMode, setEditMode] = React.useState(null);\n\n    // props for all grid items used below in the JSX\n    const girdItemProps = {\n        item: true,\n        className: classes.padding,\n    };\n\n    // ----------------------------------------------------------------------------------------------------\n    // on change functions\n\n    const onChangeTitle = (value) => {\n        setMovieTitle(value);\n    };\n\n    const onChangeSynopsis = (value) => {\n        setMovieSynopsis(value);\n    };\n\n    const onChangeRuntime = (value) => {\n        setMovieRuntime(value);\n    };\n\n    const onChangeAgeRating = (value) => {\n        setMovieAgeRating(value);\n    };\n\n    const onChangeThumbnail = (value) => {\n        setMovieThumbnail(value);\n    };\n\n    const onChangeOwnRating = async (value) => {\n        await MovieService.rateMovie(props.movie._id, value);\n        let newAvgAudienceRating = await MovieService.getRating(\n            props.movie._id\n        );\n        setAvgAudienceRating(newAvgAudienceRating.rating);\n    };\n\n    const toggleEditMode = () => {\n        setEditMode(!editMode);\n    };\n    // ----------------------------------------------------------------------------------------------------\n\n    // for cast\n    const onAddCastMember = (castMember) => {\n        movieCast.push(castMember);\n        setMovieCast([...movieCast]);\n    };\n\n    // for cast\n    const onRemoveCastMember = (index) => {\n        movieCast.splice(index, 1);\n        setMovieCast([...movieCast]);\n    };\n\n    // cancel is called, functionality differs whether it is a new movie or not\n    const onCancel = () => {\n        if (props.new) {\n            props.history.push(\"/\");\n        } else {\n            setEditMode(false);\n            extractMovie();\n        }\n    };\n\n    // save is called, functionality differs whether it is a new movie or not\n    const onSave = () => {\n        if (props.new) {\n            props.onCreate(packMovie());\n        } else {\n            setEditMode(false);\n            props.onSave(packMovie());\n        }\n    };\n\n    return (\n        <div\n            className={\n                classes.flexCol +\n                \" \" +\n                classes.padding +\n                \" \" +\n                classes.center +\n                \" \" +\n                classes.flex +\n                \" \" +\n                classes.maxWidth\n            }\n        >\n            {/* Admin Buttons */}\n            <div\n                className={\n                    classes.flexRow +\n                    \" \" +\n                    classes.flexEnd +\n                    \" \" +\n                    classes.barMinHeight\n                }\n            >\n                {/* Checks if the current user is admin. Only an admin can alter movies */}\n                {props.isAdmin ? (\n                    editMode ? (\n                        <React.Fragment>\n                            <Button\n                                onClick={onCancel}\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.marginSides}\n                            >\n                                Cancel\n                            </Button>\n                            <Button\n                                onClick={onSave}\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.marginSides}\n                                disabled={props.new && movieTitle === \"\"}\n                            >\n                                {props.new ? \"Create\" : \"Save\"}\n                            </Button>\n                        </React.Fragment>\n                    ) : (\n                        <Button\n                            onClick={(e) => setEditMode(true)}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.marginSides}\n                            disabled={!props.isLoggedIn}\n                        >\n                            Edit\n                        </Button>\n                    )\n                ) : null}\n            </div>\n\n            {/* Movie Title */}\n            <div className={classes.pageArea + \" \" + classes.title}>\n                <CustomTextField\n                    value={movieTitle}\n                    editMode={editMode}\n                    furtherProps={{\n                        fullWidth: true,\n                    }}\n                    align=\"center\"\n                    variant=\"h2\"\n                    onChange={onChangeTitle}\n                />\n            </div>\n\n            {/* Runtime, Year and MPAA as Chips */}\n            <Grid container justify=\"center\" className={classes.pageArea}>\n                <Grid {...girdItemProps}>\n                    <CustomChip\n                        content={movieRuntime}\n                        caption=\"Runtime\"\n                        suffix=\"Minutes\"\n                        editMode={editMode}\n                        onChange={onChangeRuntime}\n                    />\n                </Grid>\n                <Grid {...girdItemProps}>\n                    <CustomChip\n                        content={\n                            movieYear === -1 ? \"No Release Year\" : movieYear\n                        }\n                        caption=\"Year\"\n                        editMode={false}\n                    />\n                </Grid>\n                <Grid {...girdItemProps}>\n                    <CustomChip\n                        content={movieAgeRating}\n                        caption=\"MPAA\"\n                        editMode={editMode}\n                        onChange={onChangeAgeRating}\n                    />\n                </Grid>\n            </Grid>\n\n            {/* More detail data of the movie, grouped in DetailsArea.js for a consistent look */}\n            <Grid container>\n                {/* Ratings */}\n                <Grid xl={6} lg={6} md={6} ms={12} xs={12} {...girdItemProps}>\n                    <DetailsArea\n                        title=\"Ratings\"\n                        content={\n                            <Ratings\n                                criticsRating={\n                                    typeof criticsRating === \"number\"\n                                        ? criticsRating\n                                        : 0\n                                }\n                                avgAudienceRating={\n                                    typeof avgAudienceRating === \"number\"\n                                        ? avgAudienceRating\n                                        : 0\n                                }\n                                editMode={editMode}\n                                onChangeCriticsRating={(value) =>\n                                    setCriticsRating(value)\n                                }\n                                onChangeOwnRating={(value) =>\n                                    onChangeOwnRating(value)\n                                }\n                                isAdmin={props.isAdmin}\n                            />\n                        }\n                    />\n                </Grid>\n\n                {/* Release Dates */}\n                <Grid xl={6} lg={6} md={6} ms={12} xs={12} {...girdItemProps}>\n                    <DetailsArea\n                        title=\"Release Dates\"\n                        content={\n                            <ReleaseDates\n                                theaterRelease={theaterRelease}\n                                blurayRelase={blurayRelase}\n                                editMode={editMode}\n                                onChangeTheaterRelease={(value) =>\n                                    setTheaterRelease(value)\n                                }\n                                onChangeBlurayRelease={(value) =>\n                                    setBlurayRelease(value)\n                                }\n                            />\n                        }\n                    />\n                </Grid>\n\n                {/* Synopsis */}\n                <Grid xl={6} lg={6} md={6} ms={12} xs={12} {...girdItemProps}>\n                    <DetailsArea\n                        title=\"Synopsis\"\n                        content={\n                            <Synopsis\n                                editMode={editMode}\n                                movieSynopsis={movieSynopsis}\n                                moviethumbnail={moviethumbnail}\n                                onChangeThumbnail={onChangeThumbnail}\n                                onChangeSynopsis={onChangeSynopsis}\n                            />\n                        }\n                    />\n                </Grid>\n\n                {/* Cast */}\n                <Grid xl={6} lg={6} md={6} ms={12} xs={12} {...girdItemProps}>\n                    <DetailsArea\n                        title=\"Starring\"\n                        content={\n                            <MovieCast\n                                movieCast={movieCast}\n                                editMode={editMode}\n                                toggleEditMode={toggleEditMode}\n                                onAddCastMember={onAddCastMember}\n                                onRemoveCastMember={onRemoveCastMember}\n                                isLoggedIn={props.isLoggedIn}\n                                isAdmin={props.isAdmin}\n                            />\n                        }\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\n// attributes of props and their type\nMovieDetailsComponent.propTypes = {\n    movie: PropTypes.object,\n    new: PropTypes.bool,\n    onCreate: PropTypes.func,\n    onSave: PropTypes.func,\n};\n\n// withRouter() allows accsing the necessary functionality to navigate from this component\nexport default withRouter(MovieDetailsComponent);\n"]},"metadata":{},"sourceType":"module"}