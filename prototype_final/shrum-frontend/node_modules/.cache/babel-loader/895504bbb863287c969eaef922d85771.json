{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/huangyongli/workspace/Shrum/prototype/shrum-frontend/src/components/Synopsis.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Table, TableBody, TableCell, TableRow, Tooltip, Typography } from \"@material-ui/core\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport PropTypes from \"prop-types\";\nimport CustomTextField from \"../components/CustomTextField\";\nconst useStyles = makeStyles(theme => ({\n  flexCol: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  flexRow: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  justifySpaceBetween: {\n    justifyContent: \"space-between\"\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  image: {\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: theme.shadows[2],\n    maxWidth: 54\n  }\n}));\n/**\n * For presenting and changing movie details\n * @param {props} props\n */\n\nfunction Synopsis(props) {\n  _s();\n\n  const classes = useStyles();\n  return props.editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.flexCol,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: /*#__PURE__*/_jsxDEV(TableBody, {\n        children: [/*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.flexRow + \" \" + classes.justifySpaceBetween,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: \"Thumbnail\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Please enter the link to the image.\",\n                interactive: true,\n                children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(CustomTextField, {\n              value: props.moviethumbnail,\n              editMode: props.editMode,\n              furtherProps: {\n                fullWidth: true\n              },\n              onChange: props.onChangeThumbnail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Synopsis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(CustomTextField, {\n              value: props.movieSynopsis,\n              editMode: props.editMode,\n              furtherProps: {\n                multiline: true,\n                fullWidth: true\n              },\n              onChange: props.onChangeSynopsis,\n              isEmptyText: \"tba\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.flexRow,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.moviethumbnail,\n        className: classes.margin + \" \" + classes.image,\n        alt: \"Movie Thumbnail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomTextField, {\n      value: props.movieSynopsis,\n      editMode: props.editMode,\n      furtherProps: {\n        multiline: true,\n        fullWidth: true\n      },\n      onChange: props.onChangeSynopsis,\n      isEmptyText: \"tba\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n} // attributes of props and their type\n\n\n_s(Synopsis, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Synopsis;\nSynopsis.propTypes = {\n  moviethumbnail: PropTypes.string,\n  movieSynopsis: PropTypes.string,\n  editMode: PropTypes.bool,\n  onChangeThumbnail: PropTypes.func,\n  onChangeSynopsis: PropTypes.func\n};\nexport default Synopsis;\n\nvar _c;\n\n$RefreshReg$(_c, \"Synopsis\");","map":{"version":3,"sources":["/Users/huangyongli/workspace/Shrum/prototype/shrum-frontend/src/components/Synopsis.js"],"names":["React","makeStyles","Table","TableBody","TableCell","TableRow","Tooltip","Typography","InfoIcon","PropTypes","CustomTextField","useStyles","theme","flexCol","display","flexDirection","flexRow","justifySpaceBetween","justifyContent","margin","spacing","image","borderRadius","shape","boxShadow","shadows","maxWidth","Synopsis","props","classes","editMode","moviethumbnail","fullWidth","onChangeThumbnail","movieSynopsis","multiline","onChangeSynopsis","propTypes","string","bool","func"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableRow,\n    Tooltip,\n    Typography,\n} from \"@material-ui/core\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport PropTypes from \"prop-types\";\nimport CustomTextField from \"../components/CustomTextField\";\n\nconst useStyles = makeStyles((theme) => ({\n    flexCol: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    flexRow: {\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    justifySpaceBetween: {\n        justifyContent: \"space-between\",\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    image: {\n        borderRadius: theme.shape.borderRadius,\n        boxShadow: theme.shadows[2],\n        maxWidth: 54,\n    },\n}));\n\n/**\n * For presenting and changing movie details\n * @param {props} props\n */\nfunction Synopsis(props) {\n    const classes = useStyles();\n\n    return props.editMode ? (\n        <div className={classes.flexCol}>\n            <Table>\n                <TableBody>\n                    <TableRow>\n                        <TableCell>\n                            <div\n                                className={\n                                    classes.flexRow +\n                                    \" \" +\n                                    classes.justifySpaceBetween\n                                }\n                            >\n                                <Typography variant=\"body2\">\n                                    Thumbnail\n                                </Typography>\n                                <Tooltip\n                                    title=\"Please enter the link to the image.\"\n                                    interactive\n                                >\n                                    <InfoIcon />\n                                </Tooltip>\n                            </div>\n                        </TableCell>\n                        <TableCell>\n                            <CustomTextField\n                                value={props.moviethumbnail}\n                                editMode={props.editMode}\n                                furtherProps={{\n                                    fullWidth: true,\n                                }}\n                                onChange={props.onChangeThumbnail}\n                            />\n                        </TableCell>\n                    </TableRow>\n\n                    <TableRow>\n                        <TableCell>Synopsis</TableCell>\n                        <TableCell>\n                            <CustomTextField\n                                value={props.movieSynopsis}\n                                editMode={props.editMode}\n                                furtherProps={{\n                                    multiline: true,\n                                    fullWidth: true,\n                                }}\n                                onChange={props.onChangeSynopsis}\n                                isEmptyText=\"tba\"\n                            />\n                        </TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n        </div>\n    ) : (\n        <div className={classes.flexRow}>\n            <div>\n                <img\n                    src={props.moviethumbnail}\n                    className={classes.margin + \" \" + classes.image}\n                    alt=\"Movie Thumbnail\"\n                />\n            </div>\n            <CustomTextField\n                value={props.movieSynopsis}\n                editMode={props.editMode}\n                furtherProps={{\n                    multiline: true,\n                    fullWidth: true,\n                }}\n                onChange={props.onChangeSynopsis}\n                isEmptyText=\"tba\"\n            />\n        </div>\n    );\n}\n\n// attributes of props and their type\nSynopsis.propTypes = {\n    moviethumbnail: PropTypes.string,\n    movieSynopsis: PropTypes.string,\n    editMode: PropTypes.bool,\n    onChangeThumbnail: PropTypes.func,\n    onChangeSynopsis: PropTypes.func,\n};\n\nexport default Synopsis;\n"]},"metadata":{},"sourceType":"module"}