{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/huangyongli/workspace/Shrum/prototype/shrum-frontend/src/components/MovieListComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Divider, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, TableSortLabel, TablePagination } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport MovieListRow from \"./MovieListRow\"; // a material ui function. With this way of styling you have the style classes of this component in one place\n// and you can access the global theme of the application\n\nconst useStyles = makeStyles(theme => ({\n  movieListRoot: {\n    padding: theme.spacing(2),\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  movieListHeader: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    maxWidth: \"1000px\"\n  },\n  headerDivider: {\n    margin: theme.spacing(2)\n  },\n  addMovieButton: {\n    margin: theme.spacing(2)\n  },\n  movieListPaper: {\n    width: \"1000px\"\n  },\n  image: {\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: theme.shadows[2]\n  }\n}));\n/**\n * header cells for sortable table columns\n * @param {props} props\n */\n\nfunction SortableTableHeadCell(props) {\n  const {\n    headCell,\n    order,\n    orderBy,\n    onRequestSort\n  } = props;\n  return /*#__PURE__*/_jsxDEV(TableCell, {\n    sortDirection: orderBy === headCell.id ? order : false,\n    align: \"center\",\n    width: props.width,\n    children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n      active: orderBy === headCell.id,\n      direction: orderBy === headCell.id ? order : \"asc\",\n      onClick: onRequestSort,\n      children: headCell.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, headCell.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n} // data for sortable table columns\n\n\n_c = SortableTableHeadCell;\nconst sortableHeadCells = [{\n  id: \"title\",\n  label: \"Titel\",\n  width: \"40%\"\n}, {\n  id: \"year\",\n  label: \"Year\",\n  width: \"10%\"\n}, {\n  id: \"criticsRating\",\n  label: \"Critics Rating\",\n  width: \"15%\"\n}, {\n  id: \"avgAudienceRating\",\n  label: \"Audience Rating\",\n  width: \"15%\"\n}];\n/**\n * Comparator for two objects on a generic property\n * @param {compare object a} a\n * @param {compare object b} b\n * @param {order by property name} orderBy\n * @returns 1 when b > a, -1 when a < b\n */\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n/**\n * Get comparator for sorting table\n * @param {asc or desc} order\n * @param {order by propoerty name} orderBy\n * @returns function that compares two objects\n */\n\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n/**\n * Sort array with respect to the initial order of the objects\n * @param {to sort array} array\n * @param {comparator for sorting} comparator\n * @returns sorted array\n */\n\n\nfunction stableSort(array, comparator) {\n  // include index into the to sortable array objects\n  const stabilizedThis = array.map((el, index) => [el, index]); // sort the array\n\n  stabilizedThis.sort((a, b) => {\n    // compare two array objects a[0] or b[0] refer to the original element of the list a[1] or b[1] would be the initial index\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order; // if both objects have the same property value in the order by property, their initial order in the array is maintained\n\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n/**\n * For presenting and changing movies\n * @param {props} props\n */\n\n\nfunction MovieListComponent(props) {\n  _s();\n\n  // with this you can access the above defiend style classes\n  const classes = useStyles();\n  const [orderBy, setOrderBy] = React.useState();\n  const [order, setOrder] = React.useState();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const onRequestSort = (cellId, event) => {\n    // if the current orderBy is also the clicked property then the direction of the sorting should be changed\n    // otherwise the fist order direction is always ascending\n    const isAsc = orderBy === cellId && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\"); // setting the called cell id as order by\n\n    setOrderBy(cellId);\n  };\n\n  const onChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const onChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.movieListRoot,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.movieListHeader,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        children: \"Focus on the exciting part, we'll handle the rest!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        className: classes.headerDivider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        align: \"center\",\n        children: \"Here is a list of movies in our database. If you are logged in you can add, alter and delete the movies here. You can register or log in by clicking on the icon in the top right.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.movieListPaper,\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                width: \"10%\",\n                children: \"Picture\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this), sortableHeadCells.map((headCell, index) => /*#__PURE__*/_jsxDEV(SortableTableHeadCell, {\n                order: order,\n                orderBy: orderBy,\n                headCell: headCell,\n                onRequestSort: () => onRequestSort(headCell.id),\n                width: headCell.width\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 37\n              }, this)), props.isAdmin ? /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 37\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: stableSort(props.movies, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((movie, index) => {\n              return /*#__PURE__*/_jsxDEV(MovieListRow, {\n                movie: movie,\n                onClickDisplayMovie: props.onClickDisplayMovie,\n                onClickDeleteMovie: props.onClickDeleteMovie,\n                isAdmin: props.isAdmin\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: props.movies.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: onChangePage,\n        onChangeRowsPerPage: onChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this), props.isAdmin ? /*#__PURE__*/_jsxDEV(Button, {\n      onClick: props.onAddMovie,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.addMovieButton,\n      children: \"Add Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 9\n  }, this);\n} // attributes of props and their type\n\n\n_s(MovieListComponent, \"kQPp65r1QN56rRROQeWEJf6mlsM=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = MovieListComponent;\nMovieListComponent.propTypes = {\n  onAddMovie: PropTypes.func.isRequired,\n  onClickDeleteMovie: PropTypes.func.isRequired,\n  onClickDisplayMovie: PropTypes.func.isRequired,\n  isLoggedIn: PropTypes.bool,\n  movies: PropTypes.array\n};\nexport default MovieListComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SortableTableHeadCell\");\n$RefreshReg$(_c2, \"MovieListComponent\");","map":{"version":3,"sources":["/Users/huangyongli/workspace/Shrum/prototype/shrum-frontend/src/components/MovieListComponent.js"],"names":["React","makeStyles","Button","Divider","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","TableSortLabel","TablePagination","PropTypes","MovieListRow","useStyles","theme","movieListRoot","padding","spacing","flex","display","flexDirection","alignItems","movieListHeader","justifyContent","paddingTop","paddingBottom","maxWidth","headerDivider","margin","addMovieButton","movieListPaper","width","image","borderRadius","shape","boxShadow","shadows","SortableTableHeadCell","props","headCell","order","orderBy","onRequestSort","id","label","sortableHeadCells","descendingComparator","a","b","getComparator","stableSort","array","comparator","stabilizedThis","map","el","index","sort","MovieListComponent","classes","setOrderBy","useState","setOrder","page","setPage","rowsPerPage","setRowsPerPage","cellId","event","isAsc","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","value","isAdmin","movies","slice","movie","onClickDisplayMovie","onClickDeleteMovie","length","onAddMovie","propTypes","func","isRequired","isLoggedIn","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Button,\n    Divider,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Typography,\n    TableSortLabel,\n    TablePagination,\n} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport MovieListRow from \"./MovieListRow\";\n\n// a material ui function. With this way of styling you have the style classes of this component in one place\n// and you can access the global theme of the application\nconst useStyles = makeStyles((theme) => ({\n    movieListRoot: {\n        padding: theme.spacing(2),\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    movieListHeader: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        maxWidth: \"1000px\",\n    },\n    headerDivider: {\n        margin: theme.spacing(2),\n    },\n    addMovieButton: {\n        margin: theme.spacing(2),\n    },\n    movieListPaper: {\n        width: \"1000px\",\n    },\n    image: {\n        borderRadius: theme.shape.borderRadius,\n        boxShadow: theme.shadows[2],\n    },\n}));\n\n/**\n * header cells for sortable table columns\n * @param {props} props\n */\nfunction SortableTableHeadCell(props) {\n    const { headCell, order, orderBy, onRequestSort } = props;\n\n    return (\n        <TableCell\n            key={headCell.id}\n            sortDirection={orderBy === headCell.id ? order : false}\n            align=\"center\"\n            width={props.width}\n        >\n            <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : \"asc\"}\n                onClick={onRequestSort}\n            >\n                {headCell.label}\n            </TableSortLabel>\n        </TableCell>\n    );\n}\n\n// data for sortable table columns\nconst sortableHeadCells = [\n    {\n        id: \"title\",\n        label: \"Titel\",\n        width: \"40%\",\n    },\n    {\n        id: \"year\",\n        label: \"Year\",\n        width: \"10%\",\n    },\n    {\n        id: \"criticsRating\",\n        label: \"Critics Rating\",\n        width: \"15%\",\n    },\n    {\n        id: \"avgAudienceRating\",\n        label: \"Audience Rating\",\n        width: \"15%\",\n    },\n];\n\n/**\n * Comparator for two objects on a generic property\n * @param {compare object a} a\n * @param {compare object b} b\n * @param {order by property name} orderBy\n * @returns 1 when b > a, -1 when a < b\n */\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * Get comparator for sorting table\n * @param {asc or desc} order\n * @param {order by propoerty name} orderBy\n * @returns function that compares two objects\n */\nfunction getComparator(order, orderBy) {\n    return order === \"desc\"\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n/**\n * Sort array with respect to the initial order of the objects\n * @param {to sort array} array\n * @param {comparator for sorting} comparator\n * @returns sorted array\n */\nfunction stableSort(array, comparator) {\n    // include index into the to sortable array objects\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    // sort the array\n    stabilizedThis.sort((a, b) => {\n        // compare two array objects a[0] or b[0] refer to the original element of the list a[1] or b[1] would be the initial index\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        // if both objects have the same property value in the order by property, their initial order in the array is maintained\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\n/**\n * For presenting and changing movies\n * @param {props} props\n */\nfunction MovieListComponent(props) {\n    // with this you can access the above defiend style classes\n    const classes = useStyles();\n\n    const [orderBy, setOrderBy] = React.useState();\n    const [order, setOrder] = React.useState();\n\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const onRequestSort = (cellId, event) => {\n        // if the current orderBy is also the clicked property then the direction of the sorting should be changed\n        // otherwise the fist order direction is always ascending\n        const isAsc = orderBy === cellId && order === \"asc\";\n        setOrder(isAsc ? \"desc\" : \"asc\");\n\n        // setting the called cell id as order by\n        setOrderBy(cellId);\n    };\n\n    const onChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const onChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    return (\n        <div className={classes.movieListRoot}>\n            <div className={classes.movieListHeader}>\n                <Typography variant=\"h4\" align=\"center\">\n                    Focus on the exciting part, we'll handle the rest!\n                </Typography>\n                <Divider className={classes.headerDivider} />\n                <Typography align=\"center\">\n                    Here is a list of movies in our database. If you are logged\n                    in you can add, alter and delete the movies here. You can\n                    register or log in by clicking on the icon in the top right.\n                </Typography>\n            </div>\n            <Paper className={classes.movieListPaper}>\n                <TableContainer>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell width=\"10%\">Picture</TableCell>\n                                {sortableHeadCells.map((headCell, index) => (\n                                    <SortableTableHeadCell\n                                        key={index}\n                                        order={order}\n                                        orderBy={orderBy}\n                                        headCell={headCell}\n                                        onRequestSort={() =>\n                                            onRequestSort(headCell.id)\n                                        }\n                                        width={headCell.width}\n                                    />\n                                ))}\n                                {props.isAdmin ? (\n                                    <TableCell align=\"center\">Delete</TableCell>\n                                ) : null}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {stableSort(\n                                props.movies,\n                                getComparator(order, orderBy)\n                            )\n                                .slice(\n                                    page * rowsPerPage,\n                                    page * rowsPerPage + rowsPerPage\n                                )\n                                .map((movie, index) => {\n                                    return (\n                                        <MovieListRow\n                                            key={index}\n                                            movie={movie}\n                                            onClickDisplayMovie={\n                                                props.onClickDisplayMovie\n                                            }\n                                            onClickDeleteMovie={\n                                                props.onClickDeleteMovie\n                                            }\n                                            isAdmin={props.isAdmin}\n                                        />\n                                    );\n                                })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={props.movies.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={onChangePage}\n                    onChangeRowsPerPage={onChangeRowsPerPage}\n                />\n            </Paper>\n            {props.isAdmin ? (\n                <Button\n                    onClick={props.onAddMovie}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.addMovieButton}\n                >\n                    Add Movie\n                </Button>\n            ) : null}\n        </div>\n    );\n}\n\n// attributes of props and their type\nMovieListComponent.propTypes = {\n    onAddMovie: PropTypes.func.isRequired,\n    onClickDeleteMovie: PropTypes.func.isRequired,\n    onClickDisplayMovie: PropTypes.func.isRequired,\n    isLoggedIn: PropTypes.bool,\n    movies: PropTypes.array,\n};\n\nexport default MovieListComponent;\n"]},"metadata":{},"sourceType":"module"}