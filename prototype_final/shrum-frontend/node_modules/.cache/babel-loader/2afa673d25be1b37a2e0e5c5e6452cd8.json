{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/huangyongli/workspace/Shrum_new/prototype/shrum-frontend/src/components/Header.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, AppBar, Button, IconButton, TextField, Toolbar, Typography } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { connect, useSelector } from \"react-redux\";\nimport KebabMenu from \"./KebabMenu\";\nimport logo from './logo.png';\nimport { FormatAlignCenter } from \"@material-ui/icons\";\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    flexGrow: 1\n  },\n  title: {\n    flexGrow: 1,\n    paddingLeft: theme.spacing(1)\n  },\n  logo: {\n    maxHeight: \"3rem\"\n  },\n  searchBar: {\n    flexGrow: 1,\n    background: \"#FFFFFF\",\n    margin: \"0 20px 0 20px\",\n    borderRadius: 5,\n    borderColor: \"none\"\n  },\n  projectName: {},\n  avatar: {\n    margin: \"0 0 0 20px\"\n  }\n}));\n/**\n * Navigation bar of the app\n * @param {props} props\n */\n\nfunction Header(props) {\n  _s();\n\n  const classes = useStyles();\n  const user = useSelector(state => state.user);\n  const project = useSelector(state => state.currentProject);\n  const [menuAnchor, setMenuAnchor] = React.useState(null);\n  const searchbarDefaultText = \"Search tasks, comments, people, ...\";\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"sticky\",\n    children: [/*#__PURE__*/_jsxDEV(KebabMenu, {\n      open: Boolean(menuAnchor),\n      anchor: menuAnchor,\n      onClose: () => setMenuAnchor(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: classes.logo,\n        onClick: () => props.history.push(\"/\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: typeof user.user === \"undefined\" ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.projectName,\n            variant: \"h5\",\n            color: \"inherit\",\n            children: typeof project === \"undefined\" || !project.project ? \"No project\" : project.project.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.avatar,\n            onClick: event => setMenuAnchor(event.currentTarget),\n            children: user.user.username ? user.user.username[0] : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"VcFcRY5KBR4k1TA4HIGCUHEDxzE=\", false, function () {\n  return [useStyles, useSelector, useSelector];\n});\n\n_c = Header;\nexport default connect()(withRouter(Header));\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/huangyongli/workspace/Shrum_new/prototype/shrum-frontend/src/components/Header.js"],"names":["React","withRouter","makeStyles","Avatar","AppBar","Button","IconButton","TextField","Toolbar","Typography","MenuIcon","connect","useSelector","KebabMenu","logo","FormatAlignCenter","useStyles","theme","toolbar","flexGrow","title","paddingLeft","spacing","maxHeight","searchBar","background","margin","borderRadius","borderColor","projectName","avatar","Header","props","classes","user","state","project","currentProject","menuAnchor","setMenuAnchor","useState","searchbarDefaultText","Boolean","history","push","name","event","currentTarget","username"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, AppBar, Button, IconButton, TextField, Toolbar, Typography } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport { connect, useSelector } from \"react-redux\";\n\nimport KebabMenu from \"./KebabMenu\";\n\nimport logo from './logo.png';\nimport { FormatAlignCenter } from \"@material-ui/icons\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    toolbar: {\n        flexGrow: 1,\n    },\n    title: {\n        flexGrow: 1,\n        paddingLeft: theme.spacing(1),\n    },\n    logo: {\n        maxHeight: \"3rem\",\n    },\n    searchBar: {\n        flexGrow: 1,\n        background: \"#FFFFFF\",\n        margin: \"0 20px 0 20px\",\n        borderRadius: 5,\n        borderColor: \"none\"\n    },\n    projectName: {\n\n    },\n    avatar: {\n        margin: \"0 0 0 20px\"\n    },\n}));\n\n/**\n * Navigation bar of the app\n * @param {props} props\n */\nfunction Header(props) {\n    const classes = useStyles();\n\n    const user = useSelector((state) => state.user);\n    const project = useSelector((state) => state.currentProject);\n\n    const [menuAnchor, setMenuAnchor] = React.useState(null);\n\n    const searchbarDefaultText = \"Search tasks, comments, people, ...\";\n\n    return (\n        <AppBar position=\"sticky\" >\n            <KebabMenu\n                open={Boolean(menuAnchor)}\n                anchor={menuAnchor}\n                onClose={() => setMenuAnchor(null)}\n            />\n            <Toolbar className={classes.toolbar}>\n\n                <img\n                    src={logo}\n                    className={classes.logo}\n                    onClick={() => props.history.push(\"/\")}\n                />\n\n                { /*\n                Title will probably not be shown, since we have a logo already that includes the project name\n                or show the logo without title and uncomment this\n                \n                <Typography\n                    className={classes.title}\n                    variant=\"h5\"\n                    color=\"inherit\"\n                >\n                    Shrum\n                </Typography>\n                */ }\n\n\n\n\n                {/* TODO implement proper search bar -> low priority */}\n\n                {/* <TextField \n                    className={classes.searchBar}\n                    variant={\"outlined\"}\n                    placeholder={searchbarDefaultText}\n                />   */}\n\n\n\n\n                { /* Legacy Movie App Code\n\n                <IconButton onClick={onClickGithub} color=\"inherit\">\n                    <GitHubIcon />\n                </IconButton>\n                <IconButton onClick={props.toggletheme} color=\"inherit\">\n                    {props.darkmode ? <WbSunnyIcon /> : <Brightness3Icon />}\n                </IconButton>\n                <IconButton\n                    \n                    color=\"inherit\"\n                >\n                    <MenuIcon />\n                </IconButton>\n                \n                // Pls dont delete: Alternative Login/Signup buttons\n                        <div className={classes.signinButton}\n                            onClick={onClickSignIn}>\n                            <Typography\n                                className={classes.signin}\n                                variant=\"h5\"\n                                color=\"inherit\"\n                            >\n                                Sign In\n                            </Typography>\n                        </div>\n\n                        <div className={classes.signupButton}\n                            onClick={onClickSignUp}>\n                            <Typography\n                                className={classes.signup}\n                                variant=\"h5\"\n                                color=\"inherit\"\n                            >\n                                Sign Up\n                            </Typography>\n                        </div>\n                */\n                }\n                \n                <div>\n                    {typeof (user.user) === \"undefined\" ? (\n                        <>\n\n                      \n                        </>\n                    ) :\n                     (\n                        <>\n                            <Typography\n                                className={classes.projectName}\n                                variant=\"h5\"\n                                color=\"inherit\"\n                            >\n                                {(typeof (project) === \"undefined\" || !project.project) ? \"No project\" : project.project.name}\n                            </Typography>\n                            <Avatar className={classes.avatar}\n                                onClick={(event) => setMenuAnchor(event.currentTarget)}>\n                                {user.user.username ? user.user.username[0] : \"\"}\n                            </Avatar>\n                        </>\n                    )}\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default connect()(withRouter(Header));\n"]},"metadata":{},"sourceType":"module"}