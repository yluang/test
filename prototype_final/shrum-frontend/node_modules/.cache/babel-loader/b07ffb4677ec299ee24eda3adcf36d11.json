{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/huangyongli/workspace/Shrum/prototype/shrum-frontend/src/components/MovieListRow.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { IconButton, TableCell, TableRow, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Rating } from \"@material-ui/lab\"; // a material ui function. With this way of styling you have the style classes of this component in one place\n// and you can access the global theme of the application\n\nconst useStyles = makeStyles(theme => ({\n  image: {\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: theme.shadows[2],\n    maxWidth: 54\n  }\n}));\n/**\n * For presenting and changing movies\n * @param {props} props\n */\n\nfunction MovieListRow(props) {\n  _s();\n\n  // with this you can access the above defiend style classes\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    onClick: () => props.onClickDisplayMovie(props.movie._id),\n    height: \"118px\",\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      children: props.movie.thumbnail ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.movie.thumbnail,\n        alt: \"Movie Thumbnail\",\n        className: classes.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(ImageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: props.movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: props.movie.year === -1 ? \"No Release Year\" : props.movie.year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        children: !props.movie.criticsRating || props.movie.criticsRating === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          children: \"No Critics Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Rating, {\n            value: props.movie.criticsRating,\n            readOnly: true,\n            name: \"critics-rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), props.movie.criticsRating.toFixed(1) + \" / 5.0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        children: !props.movie.avgAudienceRating || props.movie.avgAudienceRating === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          children: \"No Audience Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Rating, {\n            value: props.movie.avgAudienceRating,\n            readOnly: true,\n            name: \"audience-rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), props.movie.avgAudienceRating.toFixed(1) + \" / 5.0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), props.isAdmin ? /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: e => {\n          e.stopPropagation();\n          props.onClickDeleteMovie(props.movie._id);\n        },\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this) : null]\n  }, props.movie._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n} // attributes of props and their type\n\n\n_s(MovieListRow, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = MovieListRow;\nMovieListRow.propTypes = {\n  movie: PropTypes.object,\n  onClickDisplayMovie: PropTypes.func,\n  onClickDeleteMovie: PropTypes.func,\n  isAdmin: PropTypes.bool\n};\nexport default MovieListRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieListRow\");","map":{"version":3,"sources":["/Users/huangyongli/workspace/Shrum/prototype/shrum-frontend/src/components/MovieListRow.js"],"names":["React","makeStyles","IconButton","TableCell","TableRow","Typography","PropTypes","ImageIcon","DeleteIcon","Rating","useStyles","theme","image","borderRadius","shape","boxShadow","shadows","maxWidth","MovieListRow","props","classes","onClickDisplayMovie","movie","_id","thumbnail","title","year","display","flexDirection","alignItems","criticsRating","toFixed","avgAudienceRating","isAdmin","e","stopPropagation","onClickDeleteMovie","propTypes","object","func","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { IconButton, TableCell, TableRow, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Rating } from \"@material-ui/lab\";\n\n// a material ui function. With this way of styling you have the style classes of this component in one place\n// and you can access the global theme of the application\nconst useStyles = makeStyles((theme) => ({\n    image: {\n        borderRadius: theme.shape.borderRadius,\n        boxShadow: theme.shadows[2],\n        maxWidth: 54,\n    },\n}));\n\n/**\n * For presenting and changing movies\n * @param {props} props\n */\nfunction MovieListRow(props) {\n    // with this you can access the above defiend style classes\n    const classes = useStyles();\n\n    return (\n        <TableRow\n            key={props.movie._id}\n            onClick={() => props.onClickDisplayMovie(props.movie._id)}\n            height=\"118px\"\n        >\n            <TableCell>\n                {props.movie.thumbnail ? (\n                    <img\n                        src={props.movie.thumbnail}\n                        alt=\"Movie Thumbnail\"\n                        className={classes.image}\n                    />\n                ) : (\n                    <ImageIcon />\n                )}\n            </TableCell>\n            <TableCell>\n                <Typography variant=\"h6\">{props.movie.title}</Typography>\n            </TableCell>\n            <TableCell>\n                <Typography>\n                    {props.movie.year === -1\n                        ? \"No Release Year\"\n                        : props.movie.year}\n                </Typography>\n            </TableCell>\n            <TableCell>\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    {!props.movie.criticsRating ||\n                    props.movie.criticsRating === 0 ? (\n                        <Typography align=\"center\">\n                            No Critics Rating\n                        </Typography>\n                    ) : (\n                        <React.Fragment>\n                            <Rating\n                                value={props.movie.criticsRating}\n                                readOnly\n                                name=\"critics-rating\"\n                            />\n                            {props.movie.criticsRating.toFixed(1) + \" / 5.0\"}\n                        </React.Fragment>\n                    )}\n                </div>\n            </TableCell>\n            <TableCell>\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    {!props.movie.avgAudienceRating ||\n                    props.movie.avgAudienceRating === 0 ? (\n                        <Typography align=\"center\">\n                            No Audience Rating\n                        </Typography>\n                    ) : (\n                        <React.Fragment>\n                            <Rating\n                                value={props.movie.avgAudienceRating}\n                                readOnly\n                                name=\"audience-rating\"\n                            />\n                            {props.movie.avgAudienceRating.toFixed(1) +\n                                \" / 5.0\"}\n                        </React.Fragment>\n                    )}\n                </div>\n            </TableCell>\n            {props.isAdmin ? (\n                <TableCell>\n                    <IconButton\n                        onClick={(e) => {\n                            e.stopPropagation();\n                            props.onClickDeleteMovie(props.movie._id);\n                        }}\n                    >\n                        <DeleteIcon />\n                    </IconButton>\n                </TableCell>\n            ) : null}\n        </TableRow>\n    );\n}\n\n// attributes of props and their type\nMovieListRow.propTypes = {\n    movie: PropTypes.object,\n    onClickDisplayMovie: PropTypes.func,\n    onClickDeleteMovie: PropTypes.func,\n    isAdmin: PropTypes.bool,\n};\n\nexport default MovieListRow;\n"]},"metadata":{},"sourceType":"module"}