{"version":3,"sources":["components/ScrollContainer.js","redux/reducers/userReducer.js","redux/reducers/index.js","redux/reducers/entitiesReducer.js","redux/reducers/selectedMovieReducer.js","services/HttpService.js","services/UserService.js","services/MovieService.js","redux/actions/movieActions.js","components/MovieListRow.js","components/MovieListComponent.js","components/Loading.js","views/MovieListView.js","components/UserLoginComponent.js","views/UserLoginView.js","redux/actions/userActions.js","components/SignUpComponent.js","views/SignUpView.js","components/CustomTextField.js","components/CustomChip.js","components/DetailsArea.js","components/MovieCast.js","components/ReleaseDates.js","components/Ratings.js","components/Synopsis.js","components/MovieDetailsComponent.js","views/MovieDetailsView.js","routes.js","components/KebabMenu.js","components/Header.js","components/Footer.js","theming/themetypes.js","theming/themes.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","scrollContainerRoot","height","width","position","wrapper","flexWrap","flex","overflowY","display","flexDirection","ScrollContainer","props","classes","className","children","getUser","window","localStorage","base64","split","replace","userJson","JSON","parse","atob","exp","Date","now","removeItem","user","_id","username","role","combineReducers","state","action","type","error","entities","movies","selectedMovie","movie","updates","HttpService","token","url","onSuccess","onError","header","Headers","append","fetch","method","headers","resp","this","checkIfUnauthorized","location","json","hasOwnProperty","extractUser","message","data","body","stringify","res","status","UserService","pass","isAdmin","Promise","resolve","reject","post","baseURL","password","textStatus","MovieService","a","get","id","undefined","Object","keys","length","remove","put","movieId","rating","Math","floor","random","toString","posters","thumbnail","profile","detailed","original","getMovies","dispatch","console","log","image","borderRadius","shape","boxShadow","shadows","maxWidth","MovieListRow","TableRow","onClick","onClickDisplayMovie","TableCell","src","alt","Typography","variant","title","year","style","alignItems","criticsRating","Fragment","Rating","value","readOnly","name","toFixed","align","avgAudienceRating","IconButton","e","stopPropagation","onClickDeleteMovie","movieListRoot","padding","spacing","movieListHeader","justifyContent","paddingTop","paddingBottom","headerDivider","margin","addMovieButton","movieListPaper","SortableTableHeadCell","headCell","order","orderBy","onRequestSort","sortDirection","TableSortLabel","active","direction","label","sortableHeadCells","descendingComparator","b","getComparator","stableSort","array","comparator","stabilizedThis","map","el","index","sort","MovieListComponent","React","useState","setOrderBy","setOrder","page","setPage","rowsPerPage","setRowsPerPage","Divider","Paper","TableContainer","Table","TableHead","cellId","TableBody","slice","TablePagination","rowsPerPageOptions","component","count","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","Button","onAddMovie","color","loadingRoot","loadingContent","Loading","CircularProgress","connect","useSelector","useEffect","loadMovies","Array","isArray","history","push","deleteMovie","isLoggedIn","userLoginRoot","loginPaper","loginRow","loginButtons","loginButton","marginLeft","LoginComponent","setUsername","setPassword","loginError","setLoginError","TextField","fullWidth","onChange","onSignUp","onCancel","preventDefault","onLogin","disabled","withRouter","login","usersignUpRoot","signUpPaper","signUpRow","signUpButtons","signUpButton","SignUpComponent","password2","setPassword2","setIsAdmin","registerError","setRegisterError","onBlurPassword","onBlur","FormControlLabel","control","Checkbox","checked","onRegister","register","CustomTextField","customtextfieldroot","minHeight","mixins","textfieldminheight","nofullwidth","inputBase","input","textAlign","fontSize","typography","setValue","editMode","suffix","InputProps","disableUnderline","inputProps","furtherProps","utils","DateFnsUtils","format","keyboardIcon","date","invalidDateMessage","KeyboardButtonProps","isEmptyText","flexCol","customChip","background","palette","primary","main","contrastText","paddingLeft","paddingRight","CustomChip","content","caption","border","borderStyle","borderColor","DetailsArea","MovieCast","newActorName","setNewActorName","newActorCharacter","setNewActorCharacter","movieCast","actor","characters","size","onRemoveCastMember","toggleEditMode","Edit","newActor","onAddCastMember","Add","ReleaseDates","theaterRelease","onChangeTheaterRelease","blurayRelase","onChangeBlurayRelease","Ratings","onChangeCriticsRating","onChangeOwnRating","flexRow","justifySpaceBetween","Synopsis","Tooltip","interactive","moviethumbnail","onChangeThumbnail","movieSynopsis","multiline","onChangeSynopsis","flexEnd","marginSides","marginRight","center","pageArea","marginTop","barMinHeight","top","right","movieTitle","setMovieTitle","setMovieSynopsis","setMovieCast","movieAgeRating","setMovieAgeRating","movieRuntime","setMovieRuntime","movieYear","setMovieYear","setCriticsRating","setAvgAudienceRating","setTheaterRelease","setBlurayRelease","setMovieThumbnail","extractMovie","synopsis","mpaa_rating","runtime","actors","blurayRelease","packMovie","back","new","setEditMode","girdItemProps","item","rateMovie","getRating","newAvgAudienceRating","onCreate","onSave","Grid","container","justify","xl","lg","md","ms","xs","castMember","splice","routes","path","MovieListView","exact","UserLoginView","SignUpView","getMovie","getState","changeMovie","changedMovie","updateMovie","addMovie","createMovie","match","newMovie","setNewMovie","params","menuitem","minWidth","avatar","open","anchorEl","anchor","onClose","getContentAnchorEl","anchorOrigin","vertical","horizontal","MenuItem","Avatar","logout","toolbar","flexGrow","menuAnchor","setMenuAnchor","AppBar","Boolean","Toolbar","focus","toggletheme","darkmode","currentTarget","footerRoot","Footer","Link","href","rel","AppTheme","DARK","LIGHT","themeindependent","appThemeOptions","light","dark","secondary","paper","default","appRoot","App","document","store","createStore","reducers","applyMiddleware","thunkMiddleware","setTheme","createMuiTheme","AppThemeOptions","CssBaseline","route","i","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.164e728a.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    scrollContainerRoot: {\n        height: \"100%\",\n        width: \"100%\",\n        position: \"relative\",\n    },\n    wrapper: {\n        height: \"100%\",\n        width: \"100%\",\n        flexWrap: \"nowrap\",\n        flex: \"1 1 auto\",\n        position: \"absolute\",\n        overflowY: \"scroll\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n}));\n\n/**\n * For having an internal scroll container\n * @param {props} props\n */\nfunction ScrollContainer(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.scrollContainerRoot}>\n            <div className={classes.wrapper}>{props.children}</div>\n        </div>\n    );\n}\n\nexport default ScrollContainer;\n","const getUser = () => {\n    if (window.localStorage[\"jwtToken\"]) {\n        let token = window.localStorage[\"jwtToken\"];\n        let base64Url = token.split(\".\")[1];\n        let base64 = base64Url.replace(\"-\", \"+\").replace(\"_\", \"/\");\n        let userJson = JSON.parse(window.atob(base64));\n        // if token is expired delete it and return {}\n        // --> User is not logged in anymore.\n        if (userJson.exp > Date.now()) {\n            window.localStorage.removeItem(\"jwtToken\");\n            return {};\n        }\n        return {\n            user: {\n                _id: userJson._id,\n                username: userJson.username,\n                role: userJson.role,\n            },\n        };\n    }\n    return {};\n};\n\nexport default function user(state = getUser(), action) {\n    switch (action.type) {\n        case \"LOGIN_SUCCESS\":\n            return { user: action.user };\n        case \"LOGIN_FAILURE\":\n            return { error: \"Password or username incorrect.\" };\n        case \"LOGIN_RESET\":\n            return {};\n        case \"LOGOUT\":\n            return {};\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport user from \"./userReducer\";\nimport entities from \"./entitiesReducer\";\nimport selectedMovie from \"./selectedMovieReducer\";\n\nexport default combineReducers({\n    user,\n    entities,\n    selectedMovie,\n});\n","export default function entities(state = {}, action) {\n    switch (action.type) {\n        case \"GETMOVIES_SUCCESS\":\n            return { movies: action.movies };\n        case \"DELETEMOVIE_SUCCESS\":\n            return { movies: action.movies };\n        case \"ADDMOVIE_SUCCESS\":\n            return { ...state };\n        default:\n            return state;\n    }\n}\n","export default function selectedMovie(state = {}, action) {\n    switch (action.type) {\n        case \"GETMOVIE_SUCCESS\":\n            return { movie: action.movie };\n        case \"GETMVOVIE_ERROR\":\n            return { error: action.error };\n        case \"CHANGE_SELECTED_MOVIE\":\n            return {\n                movie: {\n                    ...state.movie,\n                    ...action.updates,\n                },\n            };\n        default:\n            return { movie: action.movie };\n    }\n}\n","export default class HttpService {\n    static extractUser(token) {\n        let base64Url = token.split(\".\")[1];\n        let base64 = base64Url.replace(\"-\", \"+\").replace(\"_\", \"/\");\n        let userJson = JSON.parse(window.atob(base64));\n        return {\n            user: {\n                _id: userJson._id,\n                username: userJson.username,\n                role: userJson.role,\n            },\n        };\n    }\n\n    static async get(url, onSuccess, onError) {\n        let token = window.localStorage[\"jwtToken\"];\n        let header = new Headers();\n        if (token) {\n            header.append(\"Authorization\", `JWT ${token}`);\n        }\n\n        try {\n            let resp = await fetch(url, {\n                method: \"GET\",\n                headers: header,\n            });\n\n            if (this.checkIfUnauthorized(resp)) {\n                window.location = \"/login\";\n            } else {\n                resp = await resp.json();\n            }\n\n            if (resp.error) {\n                onError(resp.error);\n            } else {\n                if (resp.hasOwnProperty(\"token\")) {\n                    window.localStorage[\"jwtToken\"] = resp.token;\n                    resp.user = this.extractUser(resp.token);\n                }\n                onSuccess(resp);\n            }\n        } catch (err) {\n            onError(err.message);\n        }\n    }\n\n    static async put(url, data, onSuccess, onError) {\n        let token = window.localStorage[\"jwtToken\"];\n        let header = new Headers();\n        if (token) {\n            header.append(\"Authorization\", `JWT ${token}`);\n        }\n        header.append(\"Content-Type\", \"application/json\");\n\n        try {\n            let resp = await fetch(url, {\n                method: \"PUT\",\n                headers: header,\n                body: JSON.stringify(data),\n            });\n\n            if (this.checkIfUnauthorized(resp)) {\n                window.location = \"/login\";\n                return;\n            } else {\n                resp = await resp.json();\n            }\n\n            if (resp.error) {\n                onError(resp.error);\n            } else {\n                if (resp.hasOwnProperty(\"token\")) {\n                    window.localStorage[\"jwtToken\"] = resp.token;\n                    resp.user = this.extractUser(resp.token);\n                }\n                onSuccess(resp);\n            }\n        } catch (err) {\n            onError(err.message);\n        }\n    }\n\n    static async post(url, data, onSuccess, onError) {\n        let token = window.localStorage[\"jwtToken\"];\n        let header = new Headers();\n        if (token) {\n            header.append(\"Authorization\", `JWT ${token}`);\n        }\n        header.append(\"Content-Type\", \"application/json\");\n\n        try {\n            let resp = await fetch(url, {\n                method: \"POST\",\n                headers: header,\n                body: JSON.stringify(data),\n            });\n\n            if (this.checkIfUnauthorized(resp)) {\n                window.location = \"/login\";\n                return;\n            } else {\n                resp = await resp.json();\n            }\n\n            if (resp.error) {\n                onError(resp.error);\n            } else {\n                if (resp.hasOwnProperty(\"token\")) {\n                    window.localStorage[\"jwtToken\"] = resp.token;\n                    resp.user = this.extractUser(resp.token);\n                }\n                onSuccess(resp);\n            }\n        } catch (err) {\n            onError(err.message);\n        }\n    }\n\n    static async remove(url, onSuccess, onError) {\n        let token = window.localStorage[\"jwtToken\"];\n        let header = new Headers();\n        if (token) {\n            header.append(\"Authorization\", `JWT ${token}`);\n        }\n\n        try {\n            let resp = await fetch(url, {\n                method: \"DELETE\",\n                headers: header,\n            });\n\n            if (this.checkIfUnauthorized(resp)) {\n                window.location = \"/login\";\n                return;\n            } else {\n                resp = await resp.json();\n            }\n\n            if (resp.error) {\n                onError(resp.error);\n            } else {\n                onSuccess(resp);\n            }\n        } catch (err) {\n            onError(err.message);\n        }\n    }\n\n    static checkIfUnauthorized(res) {\n        if (res.status === 401) {\n            return true;\n        }\n        return false;\n    }\n}\n","import HttpService from \"./HttpService\";\n\nexport default class UserService {\n    static baseURL() {\n        return \"http://localhost:4000/auth\";\n    }\n\n    static register(user, pass, isAdmin) {\n        return new Promise((resolve, reject) => {\n            HttpService.post(\n                `${UserService.baseURL()}/register`,\n                {\n                    username: user,\n                    password: pass,\n                    isAdmin: isAdmin,\n                },\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static login(user, pass) {\n        return new Promise((resolve, reject) => {\n            HttpService.post(\n                `${UserService.baseURL()}/login`,\n                {\n                    username: user,\n                    password: pass,\n                },\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static logout() {\n        window.localStorage.removeItem(\"jwtToken\");\n    }\n}\n","import HttpService from \"./HttpService\";\n\nexport default class MovieService {\n    static baseURL() {\n        return \"http://localhost:4000/movies\";\n    }\n\n    static getMovies() {\n        return new Promise(async (resolve, reject) => {\n            HttpService.get(\n                this.baseURL(),\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static getMovie(id) {\n        return new Promise(async (resolve, reject) => {\n            HttpService.get(\n                `${MovieService.baseURL()}/${id}`,\n                function (data) {\n                    if (data !== undefined || Object.keys(data).length !== 0) {\n                        resolve(data);\n                    } else {\n                        reject(\"Error while retrieving movie\");\n                    }\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static deleteMovie(id) {\n        return new Promise((resolve, reject) => {\n            HttpService.remove(\n                `${MovieService.baseURL()}/${id}`,\n                function (data) {\n                    if (data.message !== undefined) {\n                        resolve(data.message);\n                    } else {\n                        reject(\"Error while deleting\");\n                    }\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static updateMovie(movie) {\n        return new Promise((resolve, reject) => {\n            HttpService.put(\n                `${this.baseURL()}/${movie._id}`,\n                movie,\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static getRating(movieId) {\n        return new Promise((resolve, reject) => {\n            HttpService.get(\n                `${this.baseURL()}/rate/${movieId}`,\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static rateMovie(movieId, rating) {\n        return new Promise((resolve, reject) => {\n            HttpService.put(\n                `${this.baseURL()}/rate/${movieId}`,\n                { rating: rating },\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n\n    static createMovie(movie) {\n        movie.id = Math.floor(Math.random() * 100000000 + 1).toString();\n        movie.posters = {\n            thumbnail:\n                \"http://resizing.flixster.com/AeDB8hgaGed_TMCcIF1P_gubGwA=/54x81/dkpu1ddg7pbsk.cloudfront.net/movie/11/27/63/11276344_ori.jpg\",\n            profile:\n                \"http://resizing.flixster.com/AeDB8hgaGed_TMCcIF1P_gubGwA=/54x81/dkpu1ddg7pbsk.cloudfront.net/movie/11/27/63/11276344_ori.jpg\",\n            detailed:\n                \"http://resizing.flixster.com/AeDB8hgaGed_TMCcIF1P_gubGwA=/54x81/dkpu1ddg7pbsk.cloudfront.net/movie/11/27/63/11276344_ori.jpg\",\n            original:\n                \"http://resizing.flixster.com/AeDB8hgaGed_TMCcIF1P_gubGwA=/54x81/dkpu1ddg7pbsk.cloudfront.net/movie/11/27/63/11276344_ori.jpg\",\n        };\n        return new Promise((resolve, reject) => {\n            HttpService.post(\n                MovieService.baseURL(),\n                movie,\n                function (data) {\n                    resolve(data);\n                },\n                function (textStatus) {\n                    reject(textStatus);\n                }\n            );\n        });\n    }\n}\n","import MovieService from \"../../services/MovieService\";\n\nexport function getMovies() {\n    // when the backend call was successfull and the movies are retrieved\n    // in the dispatcher the movies will be added to the global state\n    function onSuccess(movies) {\n        return { type: \"GETMOVIES_SUCCESS\", movies: movies };\n    }\n    // when the backend call was failed\n    function onFailure(error) {\n        // error handling\n        console.log(\"failed to get the movies\", error);\n    }\n\n    return async (dispatch) => {\n        try {\n            // ask for the movies in the backend\n            let movies = await MovieService.getMovies();\n            // call onSuccess in context of redux\n            dispatch(onSuccess(movies));\n        } catch (e) {\n            onFailure(e);\n        }\n    };\n}\n\nexport function deleteMovie(id) {\n    function onSuccess(movies) {\n        return { type: \"DELETEMOVIE_SUCCESS\", movies: movies };\n    }\n    function onFailure(error) {\n        console.log(\"delete movie failure\", error);\n    }\n\n    return async (dispatch) => {\n        try {\n            await MovieService.deleteMovie(id);\n            let movies = await MovieService.getMovies();\n            dispatch(onSuccess(movies));\n        } catch (e) {\n            onFailure(e);\n        }\n    };\n}\n\nexport function addMovie(movie) {\n    function onSuccess() {\n        return { type: \"ADDMOVIE_SUCCESS\" };\n    }\n    function onFailure(error) {\n        console.log(\"add movie failure\", error);\n    }\n\n    return async (dispatch) => {\n        try {\n            await MovieService.createMovie(movie);\n            dispatch(onSuccess());\n        } catch (e) {\n            onFailure(e);\n        }\n    };\n}\n\nexport function changeMovie(changedMovie) {\n    function onSuccess(movie) {\n        return { type: \"UPDATEMOVIE_SUCCESS\", movie: movie };\n    }\n\n    function onFailure(error) {\n        console.log(\"change movie failure\", error);\n    }\n\n    return async (dispatch) => {\n        try {\n            let movie = await MovieService.updateMovie(changedMovie);\n            dispatch(onSuccess(movie));\n        } catch (e) {\n            onFailure(e);\n        }\n    };\n}\n\nexport const getMovie = (id) => {\n    function onSuccess(movie) {\n        return { type: \"GETMOVIE_SUCCESS\", movie: movie };\n    }\n    function onFailure(error) {\n        console.log(\"failed to load a movie\", error);\n    }\n\n    return async (dispatch, getState) => {\n        try {\n            let movie = await MovieService.getMovie(id);\n            dispatch(onSuccess(movie));\n        } catch (e) {\n            onFailure(e);\n        }\n    };\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { IconButton, TableCell, TableRow, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Rating } from \"@material-ui/lab\";\n\n// a material ui function. With this way of styling you have the style classes of this component in one place\n// and you can access the global theme of the application\nconst useStyles = makeStyles((theme) => ({\n    image: {\n        borderRadius: theme.shape.borderRadius,\n        boxShadow: theme.shadows[2],\n        maxWidth: 54,\n    },\n}));\n\n/**\n * For presenting and changing movies\n * @param {props} props\n */\nfunction MovieListRow(props) {\n    // with this you can access the above defiend style classes\n    const classes = useStyles();\n\n    return (\n        <TableRow\n            key={props.movie._id}\n            onClick={() => props.onClickDisplayMovie(props.movie._id)}\n            height=\"118px\"\n        >\n            <TableCell>\n                {props.movie.thumbnail ? (\n                    <img\n                        src={props.movie.thumbnail}\n                        alt=\"Movie Thumbnail\"\n                        className={classes.image}\n                    />\n                ) : (\n                    <ImageIcon />\n                )}\n            </TableCell>\n            <TableCell>\n                <Typography variant=\"h6\">{props.movie.title}</Typography>\n            </TableCell>\n            <TableCell>\n                <Typography>\n                    {props.movie.year === -1\n                        ? \"No Release Year\"\n                        : props.movie.year}\n                </Typography>\n            </TableCell>\n            <TableCell>\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    {!props.movie.criticsRating ||\n                    props.movie.criticsRating === 0 ? (\n                        <Typography align=\"center\">\n                            No Critics Rating\n                        </Typography>\n                    ) : (\n                        <React.Fragment>\n                            <Rating\n                                value={props.movie.criticsRating}\n                                readOnly\n                                name=\"critics-rating\"\n                            />\n                            {props.movie.criticsRating.toFixed(1) + \" / 5.0\"}\n                        </React.Fragment>\n                    )}\n                </div>\n            </TableCell>\n            <TableCell>\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    {!props.movie.avgAudienceRating ||\n                    props.movie.avgAudienceRating === 0 ? (\n                        <Typography align=\"center\">\n                            No Audience Rating\n                        </Typography>\n                    ) : (\n                        <React.Fragment>\n                            <Rating\n                                value={props.movie.avgAudienceRating}\n                                readOnly\n                                name=\"audience-rating\"\n                            />\n                            {props.movie.avgAudienceRating.toFixed(1) +\n                                \" / 5.0\"}\n                        </React.Fragment>\n                    )}\n                </div>\n            </TableCell>\n            {props.isAdmin ? (\n                <TableCell>\n                    <IconButton\n                        onClick={(e) => {\n                            e.stopPropagation();\n                            props.onClickDeleteMovie(props.movie._id);\n                        }}\n                    >\n                        <DeleteIcon />\n                    </IconButton>\n                </TableCell>\n            ) : null}\n        </TableRow>\n    );\n}\n\n// attributes of props and their type\nMovieListRow.propTypes = {\n    movie: PropTypes.object,\n    onClickDisplayMovie: PropTypes.func,\n    onClickDeleteMovie: PropTypes.func,\n    isAdmin: PropTypes.bool,\n};\n\nexport default MovieListRow;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Button,\n    Divider,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Typography,\n    TableSortLabel,\n    TablePagination,\n} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport MovieListRow from \"./MovieListRow\";\n\n// a material ui function. With this way of styling you have the style classes of this component in one place\n// and you can access the global theme of the application\nconst useStyles = makeStyles((theme) => ({\n    movieListRoot: {\n        padding: theme.spacing(2),\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    movieListHeader: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        maxWidth: \"1000px\",\n    },\n    headerDivider: {\n        margin: theme.spacing(2),\n    },\n    addMovieButton: {\n        margin: theme.spacing(2),\n    },\n    movieListPaper: {\n        width: \"1000px\",\n    },\n    image: {\n        borderRadius: theme.shape.borderRadius,\n        boxShadow: theme.shadows[2],\n    },\n}));\n\n/**\n * header cells for sortable table columns\n * @param {props} props\n */\nfunction SortableTableHeadCell(props) {\n    const { headCell, order, orderBy, onRequestSort } = props;\n\n    return (\n        <TableCell\n            key={headCell.id}\n            sortDirection={orderBy === headCell.id ? order : false}\n            align=\"center\"\n            width={props.width}\n        >\n            <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : \"asc\"}\n                onClick={onRequestSort}\n            >\n                {headCell.label}\n            </TableSortLabel>\n        </TableCell>\n    );\n}\n\n// data for sortable table columns\nconst sortableHeadCells = [\n    {\n        id: \"title\",\n        label: \"Titel\",\n        width: \"40%\",\n    },\n    {\n        id: \"year\",\n        label: \"Year\",\n        width: \"10%\",\n    },\n    {\n        id: \"criticsRating\",\n        label: \"Critics Rating\",\n        width: \"15%\",\n    },\n    {\n        id: \"avgAudienceRating\",\n        label: \"Audience Rating\",\n        width: \"15%\",\n    },\n];\n\n/**\n * Comparator for two objects on a generic property\n * @param {compare object a} a\n * @param {compare object b} b\n * @param {order by property name} orderBy\n * @returns 1 when b > a, -1 when a < b\n */\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * Get comparator for sorting table\n * @param {asc or desc} order\n * @param {order by propoerty name} orderBy\n * @returns function that compares two objects\n */\nfunction getComparator(order, orderBy) {\n    return order === \"desc\"\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n/**\n * Sort array with respect to the initial order of the objects\n * @param {to sort array} array\n * @param {comparator for sorting} comparator\n * @returns sorted array\n */\nfunction stableSort(array, comparator) {\n    // include index into the to sortable array objects\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    // sort the array\n    stabilizedThis.sort((a, b) => {\n        // compare two array objects a[0] or b[0] refer to the original element of the list a[1] or b[1] would be the initial index\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        // if both objects have the same property value in the order by property, their initial order in the array is maintained\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\n/**\n * For presenting and changing movies\n * @param {props} props\n */\nfunction MovieListComponent(props) {\n    // with this you can access the above defiend style classes\n    const classes = useStyles();\n\n    const [orderBy, setOrderBy] = React.useState();\n    const [order, setOrder] = React.useState();\n\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const onRequestSort = (cellId, event) => {\n        // if the current orderBy is also the clicked property then the direction of the sorting should be changed\n        // otherwise the fist order direction is always ascending\n        const isAsc = orderBy === cellId && order === \"asc\";\n        setOrder(isAsc ? \"desc\" : \"asc\");\n\n        // setting the called cell id as order by\n        setOrderBy(cellId);\n    };\n\n    const onChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const onChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    return (\n        <div className={classes.movieListRoot}>\n            <div className={classes.movieListHeader}>\n                <Typography variant=\"h4\" align=\"center\">\n                    Welcome to the Movie Database App!\n                </Typography>\n                <Divider className={classes.headerDivider} />\n                <Typography align=\"center\">\n                    Here is a list of movies in our database. If you are logged\n                    in you can add, alter and delete the movies here. You can\n                    register or log in by clicking on the icon in the top right.\n                </Typography>\n            </div>\n            <Paper className={classes.movieListPaper}>\n                <TableContainer>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell width=\"10%\">Picture</TableCell>\n                                {sortableHeadCells.map((headCell, index) => (\n                                    <SortableTableHeadCell\n                                        key={index}\n                                        order={order}\n                                        orderBy={orderBy}\n                                        headCell={headCell}\n                                        onRequestSort={() =>\n                                            onRequestSort(headCell.id)\n                                        }\n                                        width={headCell.width}\n                                    />\n                                ))}\n                                {props.isAdmin ? (\n                                    <TableCell align=\"center\">Delete</TableCell>\n                                ) : null}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {stableSort(\n                                props.movies,\n                                getComparator(order, orderBy)\n                            )\n                                .slice(\n                                    page * rowsPerPage,\n                                    page * rowsPerPage + rowsPerPage\n                                )\n                                .map((movie, index) => {\n                                    return (\n                                        <MovieListRow\n                                            key={index}\n                                            movie={movie}\n                                            onClickDisplayMovie={\n                                                props.onClickDisplayMovie\n                                            }\n                                            onClickDeleteMovie={\n                                                props.onClickDeleteMovie\n                                            }\n                                            isAdmin={props.isAdmin}\n                                        />\n                                    );\n                                })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={props.movies.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={onChangePage}\n                    onChangeRowsPerPage={onChangeRowsPerPage}\n                />\n            </Paper>\n            {props.isAdmin ? (\n                <Button\n                    onClick={props.onAddMovie}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.addMovieButton}\n                >\n                    Add Movie\n                </Button>\n            ) : null}\n        </div>\n    );\n}\n\n// attributes of props and their type\nMovieListComponent.propTypes = {\n    onAddMovie: PropTypes.func.isRequired,\n    onClickDeleteMovie: PropTypes.func.isRequired,\n    onClickDisplayMovie: PropTypes.func.isRequired,\n    isLoggedIn: PropTypes.bool,\n    movies: PropTypes.array,\n};\n\nexport default MovieListComponent;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CircularProgress, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    loadingRoot: {\n        display: \"flex\",\n        width: \"100%\",\n        height: \"100%\",\n    },\n    loadingContent: {\n        margin: \"auto\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n}));\n\n/**\n * Loading screen\n * @param {props} props\n */\nfunction Loading(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.loadingRoot}>\n            <div className={classes.loadingContent}>\n                <CircularProgress />\n                <Typography align=\"center\">Loading ... </Typography>\n            </div>\n        </div>\n    );\n}\n\nexport default Loading;\n","import React, { useEffect } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\n\nimport { getMovies, deleteMovie } from \"../redux/actions\";\nimport MovieListComponent from \"../components/MovieListComponent\";\nimport Loading from \"../components/Loading\";\n\n/**\n * Manages the process of getting movie list data\n * @param {props} props\n */\nfunction MovieListView(props) {\n    // state from the redux store\n    const movies = useSelector((state) => state.entities.movies);\n    const user = useSelector((state) => state.user);\n\n    useEffect(() => {\n        // load movies when the page is loaded or the movies have changed.\n        if (!movies) {\n            loadMovies();\n        }\n    }, [movies]);\n\n    const loadMovies = async () => {\n        // trigger the redux action getMovies\n        props.dispatch(getMovies());\n    };\n\n    const onClickDeleteMovie = (id) => {\n        // trigger the redux action delete Movies\n        props.dispatch(deleteMovie(id));\n    };\n\n    const onClickDisplayMovie = (id) => {\n        // navigate to details of the selected movie\n        props.history.push(\"/movie/\" + id);\n    };\n\n    const onAddMovie = () => {\n        // navigate to an empty mask for entering details of the new movie\n        props.history.push(\"/movie/new\");\n    };\n\n    return !movies ? (\n        // if no movies are loaded, the above useEffect should be triggered\n        <Loading />\n    ) : !Array.isArray(movies) ? (\n        // apperantly something went wrong, usually there should be some kind of error handling\n        <div>error</div>\n    ) : (\n        // everyhing is fine an the movie list can be displayed\n        <MovieListComponent\n            movies={movies}\n            onClickDisplayMovie={onClickDisplayMovie}\n            onClickDeleteMovie={onClickDeleteMovie}\n            onAddMovie={onAddMovie}\n            isLoggedIn={!!user.user}\n            isAdmin={!!user.user ? user.user.role === \"admin\" : false}\n        />\n    );\n}\n\n// connect() establishes the connection to the redux functionalities\nexport default connect()(MovieListView);\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Paper, Button, TextField, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    userLoginRoot: {\n        margin: \"auto\",\n    },\n    loginPaper: {\n        width: \"500px\",\n        padding: theme.spacing(2),\n    },\n    loginRow: {\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        \"&:last-child\": {\n            paddingBottom: theme.spacing(0),\n        },\n        \"&:first-child\": {\n            paddingTop: theme.spacing(0),\n        },\n    },\n    loginButtons: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    loginButton: {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\n/**\n * For user login\n * @param {props} props\n */\nfunction LoginComponent(props) {\n    const classes = useStyles();\n\n    const [username, setUsername] = React.useState(\"\");\n    const [password, setPassword] = React.useState(\"\");\n\n    const [loginError, setLoginError] = React.useState(\"\");\n\n    useEffect(() => {\n        if (props.user.error) {\n            setLoginError(props.user.error);\n        } else {\n            setLoginError(\"\");\n        }\n    }, [props.user]);\n\n    const onLogin = (e) => {\n        e.preventDefault();\n        props.onLogin(username, password);\n    };\n\n    const onChangeUsername = (e) => {\n        setUsername(e.target.value);\n        setLoginError(\"\");\n    };\n\n    const onChangePassword = (e) => {\n        setPassword(e.target.value);\n        setLoginError(\"\");\n    };\n\n    return (\n        <div className={classes.userLoginRoot}>\n            <Paper className={classes.loginPaper} component=\"form\">\n                <div className={classes.loginRow}>\n                    <TextField\n                        label=\"Username\"\n                        fullWidth\n                        value={username}\n                        onChange={onChangeUsername}\n                        error={loginError !== \"\"}\n                    />\n                </div>\n                <div className={classes.loginRow}>\n                    <TextField\n                        label=\"Password\"\n                        fullWidth\n                        value={password}\n                        onChange={onChangePassword}\n                        error={loginError !== \"\"}\n                        type=\"password\"\n                    />\n                </div>\n                {loginError !== \"\" ? (\n                    <div className={classes.loginRow}>\n                        <Typography color=\"error\">{loginError}</Typography>\n                    </div>\n                ) : null}\n                <div className={classes.loginRow + \" \" + classes.loginButtons}>\n                    <Button onClick={props.onSignUp}>\n                        Not Registered yet?\n                    </Button>\n                    <div>\n                        <Button\n                            className={classes.loginButton}\n                            onClick={props.onCancel}\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            className={classes.loginButton}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={onLogin}\n                            disabled={username === \"\" || password === \"\"}\n                            type=\"submit\"\n                        >\n                            Login\n                        </Button>\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default LoginComponent;\n","import React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect, useSelector } from \"react-redux\";\nimport LoginComponent from \"../components/UserLoginComponent\";\n\nimport { login } from \"../redux/actions\";\n\n/**\n * For user login\n * @param {props} props\n */\nfunction UserLoginView(props) {\n    const user = useSelector((state) => state.user);\n\n    useEffect(() => {\n        if (user.user) {\n            props.history.push(\"/\");\n        }\n    }, [user, props.history]);\n\n    const onLogin = (username, password) => {\n        props.dispatch(login(username, password));\n    };\n\n    const onCancel = () => {\n        props.history.push(\"/\");\n    };\n\n    const onSignUp = () => {\n        props.history.push(\"/register\");\n    };\n\n    return (\n        <LoginComponent\n            user={user}\n            onCancel={onCancel}\n            onLogin={onLogin}\n            onSignUp={onSignUp}\n        />\n    );\n}\n\nexport default connect()(withRouter(UserLoginView));\n","import UserService from \"../../services/UserService\";\n\nexport function login(username, password) {\n    function onSuccess(user) {\n        return { type: \"LOGIN_SUCCESS\", user: user };\n    }\n    function onFailure(error) {\n        return { type: \"LOGIN_FAILURE\", error: error };\n    }\n\n    return async (dispatch) => {\n        try {\n            let resp = await UserService.login(username, password);\n            dispatch(onSuccess(resp.user));\n        } catch (e) {\n            dispatch(onFailure(e));\n        }\n    };\n}\n\nexport function logout() {\n    UserService.logout();\n    return { type: \"LOGOUT\" };\n}\n\nexport function loginReset() {\n    return { type: \"LOGIN_RESET\" };\n}\n\nexport function register(username, password, isAdmin) {\n    function onSuccess(user) {\n        return { type: \"LOGIN_SUCCESS\", user: user };\n    }\n    function onFailure(error) {\n        return { type: \"LOGIN_FAILURE\", error: error };\n    }\n\n    return async (dispatch) => {\n        try {\n            let resp = await UserService.register(username, password, isAdmin);\n            dispatch(onSuccess(resp.user));\n        } catch (e) {\n            dispatch(onFailure(e));\n        }\n    };\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Paper,\n    Button,\n    TextField,\n    Typography,\n    FormControlLabel,\n    Checkbox,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    usersignUpRoot: {\n        margin: \"auto\",\n    },\n    signUpPaper: {\n        width: \"500px\",\n        padding: theme.spacing(2),\n    },\n    signUpRow: {\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        \"&:last-child\": {\n            paddingBottom: theme.spacing(0),\n        },\n        \"&:first-child\": {\n            paddingTop: theme.spacing(0),\n        },\n    },\n    signUpButtons: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    signUpButton: {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\n/**\n * For register new users\n * @param {props} props\n */\nfunction SignUpComponent(props) {\n    const classes = useStyles();\n\n    const [username, setUsername] = React.useState(\"\");\n    const [password, setPassword] = React.useState(\"\");\n    const [password2, setPassword2] = React.useState(\"\");\n    const [isAdmin, setIsAdmin] = React.useState(false);\n\n    const [registerError, setRegisterError] = React.useState(\"\");\n\n    useEffect(() => {\n        if (props.user.error) {\n            setRegisterError(props.user.error);\n        } else {\n            setRegisterError(\"\");\n        }\n    }, [props.user]);\n\n    const onRegister = (e) => {\n        e.preventDefault();\n        props.onRegister(username, password, isAdmin);\n    };\n\n    const onChangeUsername = (e) => {\n        setUsername(e.target.value);\n        setRegisterError(\"\");\n    };\n\n    const onChangePassword = (e) => {\n        setPassword(e.target.value);\n        setRegisterError(\"\");\n    };\n\n    const onChangePassword2 = (e) => {\n        setPassword2(e.target.value);\n        setRegisterError(\"\");\n    };\n\n    const onBlurPassword = (e) => {\n        if (password !== \"\" && password2 !== \"\") {\n            if (password !== password2) {\n                setRegisterError(\"Passwords do not match.\");\n            } else {\n                setRegisterError(\"\");\n            }\n        }\n    };\n\n    return (\n        <div className={classes.usersignUpRoot}>\n            <Paper className={classes.signUpPaper} component=\"form\">\n                <div className={classes.signUpRow}>\n                    <Typography variant=\"h4\" align=\"center\">\n                        Welcome to the Movie Database App!\n                    </Typography>\n                </div>\n                <div className={classes.signUpRow}>\n                    <TextField\n                        label=\"Username\"\n                        fullWidth\n                        value={username}\n                        onChange={onChangeUsername}\n                    />\n                </div>\n                <div className={classes.signUpRow}>\n                    <TextField\n                        label=\"Password\"\n                        fullWidth\n                        value={password}\n                        onChange={onChangePassword}\n                        error={registerError !== \"\"}\n                        onBlur={onBlurPassword}\n                        type=\"password\"\n                    />\n                </div>\n                <div className={classes.signUpRow}>\n                    <TextField\n                        label=\"Repeat Password\"\n                        fullWidth\n                        value={password2}\n                        onChange={onChangePassword2}\n                        error={registerError !== \"\"}\n                        onBlur={onBlurPassword}\n                        type=\"password\"\n                    />\n                </div>\n                <div className={classes.signUpRow}>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={isAdmin}\n                                onChange={(e) => setIsAdmin(e.target.checked)}\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"Is Admin\"\n                    />\n                </div>\n                {registerError !== \"\" ? (\n                    <div className={classes.signUpRow}>\n                        <Typography color=\"error\">{registerError}</Typography>\n                    </div>\n                ) : null}\n                <div\n                    className={classes.signUpRow + \" \" + classes.signUpButtons}\n                >\n                    <Button\n                        className={classes.signUpButton}\n                        onClick={props.onCancel}\n                    >\n                        Cancel\n                    </Button>\n                    <Button\n                        className={classes.signUpButton}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={onRegister}\n                        disabled={\n                            username === \"\" ||\n                            password === \"\" ||\n                            password2 === \"\" ||\n                            registerError !== \"\" ||\n                            password !== password2\n                        }\n                        type=\"submit\"\n                    >\n                        Register\n                    </Button>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default SignUpComponent;\n","import React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect, useSelector } from \"react-redux\";\n\nimport SignUpComponent from \"../components/SignUpComponent\";\n\nimport { register } from \"../redux/actions\";\n\n/**\n * For register new users\n * @param {props} props\n */\nfunction SignUpView(props) {\n    const user = useSelector((state) => state.user);\n\n    useEffect(() => {\n        if (user.user) {\n            props.history.push(\"/\");\n        }\n    }, [user, props.history]);\n\n    const onRegister = (username, password, isAdmin) => {\n        props.dispatch(register(username, password, isAdmin));\n    };\n\n    const onCancel = () => {\n        props.history.push(\"/\");\n    };\n\n    return (\n        <SignUpComponent\n            user={user}\n            onRegister={onRegister}\n            onCancel={onCancel}\n        />\n    );\n}\n\nexport default connect()(withRouter(SignUpView));\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField } from \"@material-ui/core\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport TodayIcon from \"@material-ui/icons/Today\";\n\n/**\n * component for changing movie attributes at the same place where they are displayed\n * @param {props} props\n */\nfunction CustomTextField(props) {\n    // by moving the styles inside the functional component the props can influence the style\n    const useStyles = makeStyles((theme) => ({\n        customtextfieldroot: {\n            minHeight: theme.mixins.textfieldminheight,\n            width: props.nofullwidth ? \"\" : \"100%\",\n            display: \"flex\",\n            alignItems: \"center\",\n        },\n        inputBase: {\n            padding: theme.spacing(1),\n            color: \"inherit !important\",\n        },\n        input: {\n            padding: theme.spacing(0),\n            textAlign: props.align ? props.align : \"left\",\n            fontSize: props.variant\n                ? theme.typography[props.variant].fontSize\n                : theme.typography.fontSize,\n            color: \"inherit\",\n        },\n    }));\n\n    const classes = useStyles();\n\n    const [value, setValue] = React.useState(props.value);\n\n    useEffect(() => {\n        setValue(props.value);\n    }, [props.value]);\n\n    return (\n        <div className={classes.customtextfieldroot}>\n            {(props.value === \"\" || !props.value || props.value === null) &&\n            !props.editMode ? (\n                // if no value is given return the given text\n                <TextField\n                    value={props.isEmptyText}\n                    disabled={true}\n                    variant=\"standard\"\n                    InputProps={{\n                        className: classes.inputBase,\n                        disableUnderline: true,\n                    }}\n                    inputProps={{\n                        className: classes.input,\n                    }}\n                    {...props.furtherProps}\n                />\n            ) : props.type !== \"date\" ? (\n                // return a standard textfield\n                <TextField\n                    value={\n                        props.editMode\n                            ? value\n                            : props.value +\n                              (props.suffix ? \" \" + props.suffix : \"\")\n                    }\n                    onChange={(e) => setValue(e.target.value)}\n                    onBlur={(e) =>\n                        props.onChange ? props.onChange(e.target.value) : null\n                    }\n                    disabled={!props.editMode}\n                    variant={props.editMode ? \"outlined\" : \"standard\"}\n                    InputProps={\n                        props.editMode\n                            ? {\n                                  className: classes.inputBase,\n                              }\n                            : {\n                                  className: classes.inputBase,\n                                  disableUnderline: true,\n                              }\n                    }\n                    inputProps={{\n                        className: classes.input,\n                    }}\n                    {...props.furtherProps}\n                />\n            ) : (\n                // if the field has a value and the type is date return a datepicker\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                        format=\"dd.MM.yyyy\"\n                        value={props.value}\n                        readOnly={!props.editMode}\n                        keyboardIcon={props.editMode ? <TodayIcon /> : null}\n                        variant={props.editMode ? \"outlined\" : \"standard\"}\n                        InputProps={{\n                            className: classes.inputBase,\n                            disableUnderline: true,\n                        }}\n                        inputProps={{\n                            className: classes.input,\n                        }}\n                        {...props.furtherProps}\n                        onChange={(date) =>\n                            props.onChange ? props.onChange(date) : null\n                        }\n                        invalidDateMessage=\"\"\n                        KeyboardButtonProps={{\n                            \"aria-label\": \"change date\",\n                        }}\n                    />\n                </MuiPickersUtilsProvider>\n            )}\n        </div>\n    );\n}\n\n// attributes of props and their type\nCustomTextField.propTypes = {\n    align: PropTypes.string,\n    variant: PropTypes.string,\n    editMode: PropTypes.bool,\n    value: PropTypes.any,\n    onChange: PropTypes.func,\n    furtherProps: PropTypes.any,\n};\n\nexport default CustomTextField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport CustomTextField from \"../components/CustomTextField\";\n\nconst useStyles = makeStyles((theme) => ({\n    flexCol: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    customChip: {\n        background: theme.palette.primary.main,\n        borderRadius: theme.shape.borderRadius,\n        color: theme.palette.primary.contrastText,\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n    },\n}));\n\n/**\n * for presenting simple data of the movie\n * @param {props} props\n */\nfunction CustomChip(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.flexCol + \" \" + classes.customChip}>\n            <CustomTextField\n                value={props.content}\n                suffix={props.suffix}\n                editMode={props.editMode}\n                align=\"center\"\n                onChange={props.onChange}\n                variant=\"h6\"\n                isEmptyText=\"tba\"\n            />\n            <Typography variant=\"caption\" align=\"center\">\n                {props.caption}\n            </Typography>\n        </div>\n    );\n}\n\n// attributes of props and their type\nCustomChip.propTypes = {\n    suffix: PropTypes.string,\n    editMode: PropTypes.bool,\n    onChange: PropTypes.func,\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    caption: PropTypes.string.isRequired,\n};\n\nexport default CustomChip;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Paper } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    flexCol: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    padding: {\n        padding: theme.spacing(2),\n    },\n    border: {\n        borderStyle: \"solid\",\n        borderColor: theme.palette.primary.main,\n    },\n}));\n\n/**\n * Container for presenting complex movie data\n * @param {props} props\n */\nfunction DetailsArea(props) {\n    const classes = useStyles();\n\n    return (\n        <Paper\n            className={\n                classes.flexCol + \" \" + classes.padding + \" \" + classes.border\n            }\n        >\n            <Typography variant=\"h5\">{props.title}</Typography>\n            <div className={classes.padding}>{props.content}</div>\n        </Paper>\n    );\n}\n\n// attributes of props and their type\nDetailsArea.propTypes = {\n    content: PropTypes.object.isRequired,\n    title: PropTypes.string.isRequired,\n};\n\nexport default DetailsArea;\n","import React from \"react\";\nimport {\n    IconButton,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableRow,\n} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport CustomTextField from \"../components/CustomTextField\";\nimport { Add, Delete, Edit } from \"@material-ui/icons\";\n\n/**\n * For presenting and changing movie cast information\n * @param {props} props\n */\nfunction MovieCast(props) {\n    const [newActorName, setNewActorName] = React.useState(\"\");\n    const [newActorCharacter, setNewActorCharacter] = React.useState(\"\");\n\n    // on click on add cast member\n    const onAddCastMember = () => {\n        if (newActorName === \"\") {\n            return;\n        }\n        let newActor = { name: newActorName };\n        if (newActorCharacter !== \"\") {\n            newActor.characters = [newActorCharacter];\n        }\n        props.onAddCastMember(newActor);\n        setNewActorName(\"\");\n        setNewActorCharacter(\"\");\n    };\n\n    return (\n        <TableContainer>\n            <Table>\n                <TableBody>\n                    {/* showing the already added cast members  */}\n                    {props.movieCast && props.movieCast !== 0\n                        ? props.movieCast.map((actor, index) => (\n                              <TableRow key={index}>\n                                  <TableCell>\n                                      <CustomTextField\n                                          value={actor.name}\n                                          isEmptyText=\"Actor\"\n                                      />\n                                  </TableCell>\n                                  {actor.characters &&\n                                  Array.isArray(actor.characters) ? (\n                                      <React.Fragment>\n                                          <TableCell>as</TableCell>\n                                          <TableCell>\n                                              <CustomTextField\n                                                  value={actor.characters[0]}\n                                                  isEmptyText=\"a Role\"\n                                              />\n                                          </TableCell>\n                                      </React.Fragment>\n                                  ) : (\n                                      <React.Fragment>\n                                          <TableCell></TableCell>\n                                          <TableCell></TableCell>\n                                      </React.Fragment>\n                                  )}\n                                  {props.isAdmin ? (\n                                      <TableCell>\n                                          {props.editMode ? (\n                                              <IconButton\n                                                  size=\"small\"\n                                                  onClick={() =>\n                                                      props.onRemoveCastMember(\n                                                          index\n                                                      )\n                                                  }\n                                              >\n                                                  <Delete />\n                                              </IconButton>\n                                          ) : (\n                                              <IconButton\n                                                  size=\"small\"\n                                                  onClick={props.toggleEditMode}\n                                                  disabled={!props.isLoggedIn}\n                                              >\n                                                  <Edit />\n                                              </IconButton>\n                                          )}\n                                      </TableCell>\n                                  ) : null}\n                              </TableRow>\n                          ))\n                        : null}\n                    {/* give the opportunity to add a new cast member */}\n                    {props.editMode ? (\n                        <TableRow>\n                            <TableCell>\n                                <CustomTextField\n                                    value={newActorName}\n                                    editMode={props.editMode}\n                                    onChange={(value) => setNewActorName(value)}\n                                />\n                            </TableCell>\n                            <TableCell>as</TableCell>\n                            <TableCell>\n                                <CustomTextField\n                                    value={newActorCharacter}\n                                    editMode={props.editMode}\n                                    onChange={(value) =>\n                                        setNewActorCharacter(value)\n                                    }\n                                />\n                            </TableCell>\n                            <TableCell>\n                                <IconButton\n                                    size=\"small\"\n                                    onClick={onAddCastMember}\n                                >\n                                    <Add />\n                                </IconButton>\n                            </TableCell>\n                        </TableRow>\n                    ) : null}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n\n// attributes of props and their type\nMovieCast.propTypes = {\n    movieCast: PropTypes.array,\n    editMode: PropTypes.bool,\n    onAddCastMember: PropTypes.func.isRequired,\n    onRemoveCastMember: PropTypes.func.isRequired,\n    isLoggedIn: PropTypes.bool,\n    toggleEditMode: PropTypes.func.isRequired,\n};\n\nexport default MovieCast;\n","import React from \"react\";\nimport { Table, TableBody, TableCell, TableRow } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport CustomTextField from \"../components/CustomTextField\";\n\n/**\n * For presenting and changing movie details\n * @param {props} props\n */\nfunction ReleaseDates(props) {\n    return (\n        <Table>\n            <TableBody>\n                <TableRow>\n                    <TableCell>\n                        <CustomTextField\n                            value=\"Theater\"\n                            editMode={false}\n                            variant=\"body1\"\n                        />\n                    </TableCell>\n                    <TableCell>\n                        <CustomTextField\n                            type=\"date\"\n                            isEmptyText=\"No Theater Release\"\n                            variant=\"body1\"\n                            value={\n                                props.theaterRelease ? props.theaterRelease : \"\"\n                            }\n                            editMode={props.editMode}\n                            onChange={(value) =>\n                                props.onChangeTheaterRelease(value)\n                            }\n                        />\n                    </TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>\n                        <CustomTextField\n                            value=\"Blu-Ray\"\n                            editMode={false}\n                            variant=\"body1\"\n                        />\n                    </TableCell>\n                    <TableCell>\n                        <CustomTextField\n                            type=\"date\"\n                            variant=\"body1\"\n                            isEmptyText=\"No Bluray Release\"\n                            value={props.blurayRelase ? props.blurayRelase : \"\"}\n                            editMode={props.editMode}\n                            onChange={(value) =>\n                                props.onChangeBlurayRelease(value)\n                            }\n                        />\n                    </TableCell>\n                </TableRow>\n            </TableBody>\n        </Table>\n    );\n}\n\n// attributes of props and their type\nReleaseDates.propTypes = {\n    theaterRelease: PropTypes.any,\n    blurayRelase: PropTypes.any,\n    editMode: PropTypes.bool,\n    onChangeTheaterRelease: PropTypes.func,\n    onChangeBlurayRelease: PropTypes.func,\n};\n\nexport default ReleaseDates;\n","import React from \"react\";\nimport { Table, TableBody, TableCell, TableRow } from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\nimport PropTypes from \"prop-types\";\nimport CustomTextField from \"./CustomTextField\";\n\n/**\n * For presenting and changing movie details\n * @param {props} props\n */\nfunction Ratings(props) {\n    return (\n        <Table>\n            <TableBody>\n                <TableRow>\n                    <TableCell>\n                        <CustomTextField\n                            value=\"Critics\"\n                            editMode={false}\n                            variant=\"body1\"\n                        />\n                    </TableCell>\n                    <TableCell>\n                        <CustomTextField\n                            value={props.criticsRating.toFixed(1)}\n                            editMode={false}\n                            variant=\"body1\"\n                            align=\"end\"\n                            nofullwidth\n                        />\n                    </TableCell>\n                    <TableCell>\n                        <Rating\n                            value={props.criticsRating}\n                            onChange={(e, value) =>\n                                props.onChangeCriticsRating(value)\n                            }\n                            readOnly={!props.editMode}\n                            name=\"critics-rating\"\n                        />\n                    </TableCell>\n                </TableRow>\n\n                <TableRow>\n                    <TableCell>\n                        <CustomTextField\n                            value=\"Audience\"\n                            editMode={false}\n                            variant=\"body1\"\n                        />\n                    </TableCell>\n                    <TableCell>\n                        <CustomTextField\n                            value={props.avgAudienceRating.toFixed(1)}\n                            editMode={false}\n                            variant=\"body1\"\n                            align=\"end\"\n                        />\n                    </TableCell>\n                    <TableCell>\n                        <Rating\n                            value={props.avgAudienceRating}\n                            onChange={(e, value) =>\n                                props.onChangeOwnRating(value)\n                            }\n                            readOnly={props.isAdmin}\n                            name=\"audience-rating\"\n                        />\n                    </TableCell>\n                </TableRow>\n            </TableBody>\n        </Table>\n    );\n}\n\n// attributes of props and their type\nRatings.propTypes = {\n    criticsRating: PropTypes.number,\n    avgAudienceRating: PropTypes.number,\n    editMode: PropTypes.bool,\n    onChangeCriticsRating: PropTypes.func,\n    onChangeOwnRating: PropTypes.func,\n};\n\nexport default Ratings;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableRow,\n    Tooltip,\n    Typography,\n} from \"@material-ui/core\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport PropTypes from \"prop-types\";\nimport CustomTextField from \"../components/CustomTextField\";\n\nconst useStyles = makeStyles((theme) => ({\n    flexCol: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    flexRow: {\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    justifySpaceBetween: {\n        justifyContent: \"space-between\",\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    image: {\n        borderRadius: theme.shape.borderRadius,\n        boxShadow: theme.shadows[2],\n        maxWidth: 54,\n    },\n}));\n\n/**\n * For presenting and changing movie details\n * @param {props} props\n */\nfunction Synopsis(props) {\n    const classes = useStyles();\n\n    return props.editMode ? (\n        <div className={classes.flexCol}>\n            <Table>\n                <TableBody>\n                    <TableRow>\n                        <TableCell>\n                            <div\n                                className={\n                                    classes.flexRow +\n                                    \" \" +\n                                    classes.justifySpaceBetween\n                                }\n                            >\n                                <Typography variant=\"body2\">\n                                    Thumbnail\n                                </Typography>\n                                <Tooltip\n                                    title=\"Please enter the link to the image.\"\n                                    interactive\n                                >\n                                    <InfoIcon />\n                                </Tooltip>\n                            </div>\n                        </TableCell>\n                        <TableCell>\n                            <CustomTextField\n                                value={props.moviethumbnail}\n                                editMode={props.editMode}\n                                furtherProps={{\n                                    fullWidth: true,\n                                }}\n                                onChange={props.onChangeThumbnail}\n                            />\n                        </TableCell>\n                    </TableRow>\n\n                    <TableRow>\n                        <TableCell>Synopsis</TableCell>\n                        <TableCell>\n                            <CustomTextField\n                                value={props.movieSynopsis}\n                                editMode={props.editMode}\n                                furtherProps={{\n                                    multiline: true,\n                                    fullWidth: true,\n                                }}\n                                onChange={props.onChangeSynopsis}\n                                isEmptyText=\"tba\"\n                            />\n                        </TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n        </div>\n    ) : (\n        <div className={classes.flexRow}>\n            <div>\n                <img\n                    src={props.moviethumbnail}\n                    className={classes.margin + \" \" + classes.image}\n                    alt=\"Movie Thumbnail\"\n                />\n            </div>\n            <CustomTextField\n                value={props.movieSynopsis}\n                editMode={props.editMode}\n                furtherProps={{\n                    multiline: true,\n                    fullWidth: true,\n                }}\n                onChange={props.onChangeSynopsis}\n                isEmptyText=\"tba\"\n            />\n        </div>\n    );\n}\n\n// attributes of props and their type\nSynopsis.propTypes = {\n    moviethumbnail: PropTypes.string,\n    movieSynopsis: PropTypes.string,\n    editMode: PropTypes.bool,\n    onChangeThumbnail: PropTypes.func,\n    onChangeSynopsis: PropTypes.func,\n};\n\nexport default Synopsis;\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport CustomTextField from \"../components/CustomTextField\";\nimport CustomChip from \"../components/CustomChip\";\nimport DetailsArea from \"../components/DetailsArea\";\nimport MovieCast from \"./MovieCast\";\nimport { withRouter } from \"react-router-dom\";\nimport MovieService from \"../services/MovieService\";\nimport ReleaseDates from \"./ReleaseDates\";\nimport Ratings from \"./Ratings\";\nimport Synopsis from \"./Synopsis\";\n\nconst useStyles = makeStyles((theme) => ({\n    flexCol: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    flexRow: {\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    justifySpaceBetween: {\n        justifyContent: \"space-between\",\n    },\n    flex: {\n        flex: 1,\n    },\n    flexEnd: {\n        justifyContent: \"flex-end\",\n    },\n    marginSides: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    center: {\n        margin: \"auto\",\n    },\n    padding: {\n        padding: theme.spacing(2),\n    },\n    maxWidth: {\n        width: \"100%\",\n        maxWidth: \"1500px\",\n    },\n    pageArea: {\n        paddingBottom: theme.spacing(2),\n        \"&:last-child\": {\n            paddingBottom: 0,\n        },\n    },\n    title: {\n        marginTop: theme.spacing(4),\n    },\n    barMinHeight: {\n        minHeight: theme.spacing(5),\n        position: \"absolute\",\n        top: theme.spacing(1),\n        right: theme.spacing(2),\n    },\n}));\n\n/**\n * For presenting and changing movie details\n * @param {props} props\n */\nfunction MovieDetailsComponent(props) {\n    const classes = useStyles();\n\n    const [movieTitle, setMovieTitle] = React.useState(\" \");\n    const [movieSynopsis, setMovieSynopsis] = React.useState(\"\");\n    const [movieCast, setMovieCast] = React.useState([]);\n    const [movieAgeRating, setMovieAgeRating] = React.useState(\"\");\n    const [movieRuntime, setMovieRuntime] = React.useState(\"\");\n    const [movieYear, setMovieYear] = React.useState(\"\");\n    const [criticsRating, setCriticsRating] = React.useState(\"\");\n    const [avgAudienceRating, setAvgAudienceRating] = React.useState(\"\");\n    const [theaterRelease, setTheaterRelease] = React.useState(\"\");\n    const [blurayRelase, setBlurayRelease] = React.useState(\"\");\n    const [moviethumbnail, setMovieThumbnail] = React.useState(\"\");\n\n    // for extracting the attributes of the given movie to the approriate state variables\n    const extractMovie = () => {\n        if (!props.movie) {\n            return;\n        }\n\n        setMovieTitle(props.movie.title);\n        setMovieSynopsis(props.movie.synopsis);\n        setMovieAgeRating(props.movie.mpaa_rating);\n        setMovieRuntime(props.movie.runtime);\n\n        setMovieCast(JSON.parse(JSON.stringify(props.movie.actors)));\n        setCriticsRating(props.movie.criticsRating);\n        setAvgAudienceRating(props.movie.avgAudienceRating);\n        setTheaterRelease(props.movie.theaterRelease);\n        setBlurayRelease(props.movie.blurayRelease);\n        setMovieYear(props.movie.year);\n        setMovieThumbnail(props.movie.thumbnail);\n    };\n\n    // creating a object with all relevant data to update or create a changed movie\n    const packMovie = () => {\n        let back = {\n            ...props.movie,\n        };\n\n        back.title = movieTitle;\n        back.synopsis = movieSynopsis;\n        back.runtime = movieRuntime;\n        back.mpaa_rating = movieAgeRating;\n\n        back.theaterRelease = theaterRelease;\n        back.blurayRelease = blurayRelase;\n        back.criticsRating = criticsRating;\n        back.actors = movieCast;\n        back.thumbnail = moviethumbnail;\n\n        return back;\n    };\n\n    // triggers when a new movie is given to this component or the new parameter is changed\n    useEffect(() => {\n        if (!props.new) {\n            extractMovie();\n        }\n    }, [props.movie, props.new]);\n\n    // triggers when the new parameter is changed and setts the edit mode to true\n    useEffect(() => {\n        if (props.new) {\n            setEditMode(true);\n        }\n    }, [props.new]);\n\n    // indicates whether the movie can be changed\n    const [editMode, setEditMode] = React.useState(null);\n\n    // props for all grid items used below in the JSX\n    const girdItemProps = {\n        item: true,\n        className: classes.padding,\n    };\n\n    // ----------------------------------------------------------------------------------------------------\n    // on change functions\n\n    const onChangeTitle = (value) => {\n        setMovieTitle(value);\n    };\n\n    const onChangeSynopsis = (value) => {\n        setMovieSynopsis(value);\n    };\n\n    const onChangeRuntime = (value) => {\n        setMovieRuntime(value);\n    };\n\n    const onChangeAgeRating = (value) => {\n        setMovieAgeRating(value);\n    };\n\n    const onChangeThumbnail = (value) => {\n        setMovieThumbnail(value);\n    };\n\n    const onChangeOwnRating = async (value) => {\n        await MovieService.rateMovie(props.movie._id, value);\n        let newAvgAudienceRating = await MovieService.getRating(\n            props.movie._id\n        );\n        setAvgAudienceRating(newAvgAudienceRating.rating);\n    };\n\n    const toggleEditMode = () => {\n        setEditMode(!editMode);\n    };\n    // ----------------------------------------------------------------------------------------------------\n\n    // for cast\n    const onAddCastMember = (castMember) => {\n        movieCast.push(castMember);\n        setMovieCast([...movieCast]);\n    };\n\n    // for cast\n    const onRemoveCastMember = (index) => {\n        movieCast.splice(index, 1);\n        setMovieCast([...movieCast]);\n    };\n\n    // cancel is called, functionality differs whether it is a new movie or not\n    const onCancel = () => {\n        if (props.new) {\n            props.history.push(\"/\");\n        } else {\n            setEditMode(false);\n            extractMovie();\n        }\n    };\n\n    // save is called, functionality differs whether it is a new movie or not\n    const onSave = () => {\n        if (props.new) {\n            props.onCreate(packMovie());\n        } else {\n            setEditMode(false);\n            props.onSave(packMovie());\n        }\n    };\n\n    return (\n        <div\n            className={\n                classes.flexCol +\n                \" \" +\n                classes.padding +\n                \" \" +\n                classes.center +\n                \" \" +\n                classes.flex +\n                \" \" +\n                classes.maxWidth\n            }\n        >\n            {/* Admin Buttons */}\n            <div\n                className={\n                    classes.flexRow +\n                    \" \" +\n                    classes.flexEnd +\n                    \" \" +\n                    classes.barMinHeight\n                }\n            >\n                {/* Checks if the current user is admin. Only an admin can alter movies */}\n                {props.isAdmin ? (\n                    editMode ? (\n                        <React.Fragment>\n                            <Button\n                                onClick={onCancel}\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.marginSides}\n                            >\n                                Cancel\n                            </Button>\n                            <Button\n                                onClick={onSave}\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.marginSides}\n                                disabled={props.new && movieTitle === \"\"}\n                            >\n                                {props.new ? \"Create\" : \"Save\"}\n                            </Button>\n                        </React.Fragment>\n                    ) : (\n                        <Button\n                            onClick={(e) => setEditMode(true)}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.marginSides}\n                            disabled={!props.isLoggedIn}\n                        >\n                            Edit\n                        </Button>\n                    )\n                ) : null}\n            </div>\n\n            {/* Movie Title */}\n            <div className={classes.pageArea + \" \" + classes.title}>\n                <CustomTextField\n                    value={movieTitle}\n                    editMode={editMode}\n                    furtherProps={{\n                        fullWidth: true,\n                    }}\n                    align=\"center\"\n                    variant=\"h2\"\n                    onChange={onChangeTitle}\n                />\n            </div>\n\n            {/* Runtime, Year and MPAA as Chips */}\n            <Grid container justify=\"center\" className={classes.pageArea}>\n                <Grid {...girdItemProps}>\n                    <CustomChip\n                        content={movieRuntime}\n                        caption=\"Runtime\"\n                        suffix=\"Minutes\"\n                        editMode={editMode}\n                        onChange={onChangeRuntime}\n                    />\n                </Grid>\n                <Grid {...girdItemProps}>\n                    <CustomChip\n                        content={\n                            movieYear === -1 ? \"No Release Year\" : movieYear\n                        }\n                        caption=\"Year\"\n                        editMode={false}\n                    />\n                </Grid>\n                <Grid {...girdItemProps}>\n                    <CustomChip\n                        content={movieAgeRating}\n                        caption=\"MPAA\"\n                        editMode={editMode}\n                        onChange={onChangeAgeRating}\n                    />\n                </Grid>\n            </Grid>\n\n            {/* More detail data of the movie, grouped in DetailsArea.js for a consistent look */}\n            <Grid container>\n                {/* Ratings */}\n                <Grid xl={6} lg={6} md={6} ms={12} xs={12} {...girdItemProps}>\n                    <DetailsArea\n                        title=\"Ratings\"\n                        content={\n                            <Ratings\n                                criticsRating={\n                                    typeof criticsRating === \"number\"\n                                        ? criticsRating\n                                        : 0\n                                }\n                                avgAudienceRating={\n                                    typeof avgAudienceRating === \"number\"\n                                        ? avgAudienceRating\n                                        : 0\n                                }\n                                editMode={editMode}\n                                onChangeCriticsRating={(value) =>\n                                    setCriticsRating(value)\n                                }\n                                onChangeOwnRating={(value) =>\n                                    onChangeOwnRating(value)\n                                }\n                                isAdmin={props.isAdmin}\n                            />\n                        }\n                    />\n                </Grid>\n\n                {/* Release Dates */}\n                <Grid xl={6} lg={6} md={6} ms={12} xs={12} {...girdItemProps}>\n                    <DetailsArea\n                        title=\"Release Dates\"\n                        content={\n                            <ReleaseDates\n                                theaterRelease={theaterRelease}\n                                blurayRelase={blurayRelase}\n                                editMode={editMode}\n                                onChangeTheaterRelease={(value) =>\n                                    setTheaterRelease(value)\n                                }\n                                onChangeBlurayRelease={(value) =>\n                                    setBlurayRelease(value)\n                                }\n                            />\n                        }\n                    />\n                </Grid>\n\n                {/* Synopsis */}\n                <Grid xl={6} lg={6} md={6} ms={12} xs={12} {...girdItemProps}>\n                    <DetailsArea\n                        title=\"Synopsis\"\n                        content={\n                            <Synopsis\n                                editMode={editMode}\n                                movieSynopsis={movieSynopsis}\n                                moviethumbnail={moviethumbnail}\n                                onChangeThumbnail={onChangeThumbnail}\n                                onChangeSynopsis={onChangeSynopsis}\n                            />\n                        }\n                    />\n                </Grid>\n\n                {/* Cast */}\n                <Grid xl={6} lg={6} md={6} ms={12} xs={12} {...girdItemProps}>\n                    <DetailsArea\n                        title=\"Starring\"\n                        content={\n                            <MovieCast\n                                movieCast={movieCast}\n                                editMode={editMode}\n                                toggleEditMode={toggleEditMode}\n                                onAddCastMember={onAddCastMember}\n                                onRemoveCastMember={onRemoveCastMember}\n                                isLoggedIn={props.isLoggedIn}\n                                isAdmin={props.isAdmin}\n                            />\n                        }\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\n// attributes of props and their type\nMovieDetailsComponent.propTypes = {\n    movie: PropTypes.object,\n    new: PropTypes.bool,\n    onCreate: PropTypes.func,\n    onSave: PropTypes.func,\n};\n\n// withRouter() allows accsing the necessary functionality to navigate from this component\nexport default withRouter(MovieDetailsComponent);\n","import React, { useEffect } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\n\nimport { getMovie, changeMovie, addMovie } from \"../redux/actions\";\nimport MovieDetailsComponent from \"../components/MovieDetailsComponent\";\nimport Loading from \"../components/Loading\";\n\n/**\n * Manages the process of getting movie details data\n * @param {props} props\n */\nfunction MovieDetailsView(props) {\n    // props can be deconstructed into single variables, so you do not need to write \"props.\" all the time\n    let { match, getMovie } = props;\n\n    // from redux store\n    const selectedMovie = useSelector((state) => state.selectedMovie);\n    const user = useSelector((state) => state.user);\n\n    // state variable of this functional component\n    const [newMovie, setNewMovie] = React.useState(false);\n\n    useEffect(() => {\n        // get id of movie from URL\n        let movieId = match.params.id;\n\n        // check if a new movie is created\n        if (movieId === \"new\") {\n            // procedd with an empty element\n            setNewMovie(true);\n        } else {\n            // trigger movie load from backend\n            getMovie(movieId);\n        }\n    }, [match.params]);\n\n    // for saving an existing movie\n    const onSave = (movie) => {\n        props.changeMovie(movie);\n    };\n\n    // for creating a new movie\n    const onCreate = (movie) => {\n        // trigger redux action add movie\n        props.addMovie(movie);\n        // navigate back to the movie list\n        props.history.push(\"/\");\n    };\n\n    return !selectedMovie.movie && !selectedMovie.error && !newMovie ? (\n        <Loading />\n    ) : selectedMovie.error ? (\n        <div>error</div>\n    ) : selectedMovie.movie ? (\n        <MovieDetailsComponent\n            movie={selectedMovie.movie}\n            onSave={onSave}\n            isLoggedIn={!!user.user}\n            isAdmin={!!user.user ? user.user.role === \"admin\" : false}\n        />\n    ) : newMovie ? (\n        <MovieDetailsComponent\n            new={true}\n            onCreate={onCreate}\n            isLoggedIn={!!user.user}\n            isAdmin={!!user.user ? user.user.role === \"admin\" : false}\n        />\n    ) : null;\n}\n\n// connect() establishes allows the usage of redux functionality\n// here the function getMovie, changeMovie and addMovie are mentionend\n// this is an alternative way of calling connecting them with redux\n// another way is shown in MovieListView.js\nexport default connect(null, { getMovie, changeMovie, addMovie })(\n    MovieDetailsView\n);\n","import MovieListView from \"./views/MovieListView\";\nimport UserLoginView from \"./views/UserLoginView\";\nimport SignUpView from \"./views/SignUpView\";\nimport MovieDetailsView from \"./views/MovieDetailsView\";\n\n// routes within the movie database example app\n// used for routing\n\nconst routes = [\n    {\n        path: \"/\",\n        component: MovieListView,\n        exact: true,\n    },\n    {\n        path: \"/login\",\n        component: UserLoginView,\n    },\n    {\n        path: \"/register\",\n        component: SignUpView,\n    },\n    {\n        path: \"/movie/:id\",\n        component: MovieDetailsView,\n    },\n];\n\nexport default routes;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { logout } from \"../redux/actions\";\nimport { Menu, MenuItem, Avatar, Divider } from \"@material-ui/core\";\nimport { connect, useSelector } from \"react-redux\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\n\nconst useStyles = makeStyles((theme) => ({\n    menuitem: {\n        display: \"flex\",\n        minWidth: \"200px\",\n    },\n    avatar: {\n        marginRight: theme.spacing(1),\n    },\n}));\n/**\n * Menu for user managment\n * @param {props} props\n */\nfunction KebabMenu(props) {\n    const classes = useStyles();\n\n    const user = useSelector((state) => {\n        // return the currnetly logged in user from redux store\n        return state.user;\n    });\n\n    const onClickLogin = () => {\n        // close this menu\n        props.onClose();\n        // navigate to the login page\n        props.history.push(\"/login\");\n    };\n\n    const onClickLogout = () => {\n        // trigger redux logout action\n        props.dispatch(logout());\n        // close this menu\n        props.onClose();\n        // navigate to the home page\n        props.history.push(\"/\");\n    };\n\n    return (\n        <Menu\n            open={props.open}\n            anchorEl={props.anchor}\n            onClose={props.onClose}\n            getContentAnchorEl={null}\n            anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"right\",\n            }}\n        >\n            {user.user\n                ? [\n                      <MenuItem key=\"user\" className={classes.menuitem}>\n                          <Avatar className={classes.avatar}>\n                              {user.user.username ? user.user.username[0] : \"\"}\n                          </Avatar>\n                          {user.user.username}\n                      </MenuItem>,\n                      <Divider key=\"divider\" />,\n                      <MenuItem\n                          key=\"logout\"\n                          onClick={onClickLogout}\n                          className={classes.menuitem}\n                      >\n                          <ExitToAppIcon className={classes.avatar} />\n                          Logout\n                      </MenuItem>,\n                  ]\n                : [\n                      <MenuItem\n                          key=\"login\"\n                          onClick={onClickLogin}\n                          className={classes.menuitem}\n                      >\n                          <VerifiedUserIcon className={classes.avatar} />\n                          Login\n                      </MenuItem>,\n                  ]}\n        </Menu>\n    );\n}\n\n// attributes of props and their type\nKebabMenu.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    anchor: PropTypes.element,\n    open: PropTypes.bool.isRequired,\n};\n\nexport default connect()(withRouter(KebabMenu));\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, IconButton, Toolbar, Typography } from \"@material-ui/core\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport LocalMoviesIcon from \"@material-ui/icons/LocalMovies\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\n\nimport KebabMenu from \"./KebabMenu\";\n\nconst useStyles = makeStyles((theme) => ({\n    toolbar: {\n        flexGrow: 1,\n    },\n    title: {\n        flexGrow: 1,\n        paddingLeft: theme.spacing(1),\n    },\n}));\n\n/**\n * Navigation bar of the app\n * @param {props} props\n */\nfunction Header(props) {\n    const classes = useStyles();\n\n    const [menuAnchor, setMenuAnchor] = React.useState(null);\n\n    const onClickGithub = (event) => {\n        var win = window.open(\n            \"https://github.com/sebischair/seba-master-movie-frontend\",\n            \"_blank\"\n        );\n        win.focus();\n    };\n\n    return (\n        <AppBar position=\"sticky\">\n            <KebabMenu\n                open={Boolean(menuAnchor)}\n                anchor={menuAnchor}\n                onClose={() => setMenuAnchor(null)}\n            />\n            <Toolbar className={classes.toolbar}>\n                <LocalMoviesIcon\n                    fontSize=\"large\"\n                    onClick={() => props.history.push(\"/\")}\n                />\n                <Typography\n                    className={classes.title}\n                    variant=\"h5\"\n                    color=\"inherit\"\n                >\n                    Movie Database App\n                </Typography>\n                <IconButton onClick={onClickGithub} color=\"inherit\">\n                    <GitHubIcon />\n                </IconButton>\n                <IconButton onClick={props.toggletheme} color=\"inherit\">\n                    {props.darkmode ? <WbSunnyIcon /> : <Brightness3Icon />}\n                </IconButton>\n                <IconButton\n                    onClick={(event) => setMenuAnchor(event.currentTarget)}\n                    color=\"inherit\"\n                >\n                    <MenuIcon />\n                </IconButton>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link, Typography } from \"@material-ui/core\";\nimport CopyrightIcon from \"@material-ui/icons/Copyright\";\n\nconst useStyles = makeStyles((theme) => ({\n    footerRoot: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    title: {\n        flexGrow: 1,\n        paddingLeft: theme.spacing(1),\n    },\n}));\n\n/**\n * Footer of the app\n * @param {props} props\n */\nfunction Footer(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.footerRoot}>\n            <CopyrightIcon size=\"small\" />\n            <Typography variant=\"h6\">\n                <Link\n                    href=\"https://wwwmatthes.in.tum.de/pages/1mqqqoqe7gapz/SEBA-Master-Web-Application-Engineering\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    sebis\n                </Link>\n            </Typography>\n        </div>\n    );\n}\n\nexport default Footer;\n","export const AppTheme = {\n    DARK: \"dark\",\n    LIGHT: \"light\",\n};\n\nexport default AppTheme;\n","import { AppTheme } from \"./themetypes\";\n\nconst themeindependent = {\n    mixins: {\n        textfieldminheight: \"38px\",\n    },\n};\n\nconst appThemeOptions = {\n    [AppTheme.LIGHT]: {\n        palette: {\n            type: \"light\",\n            primary: {\n                light: \"#7986cb\",\n                main: \"#3f51b5\",\n                dark: \"#303f9f\",\n            },\n            secondary: {\n                light: \"#ff4081\",\n                main: \"#f50057\",\n                dark: \"#c51162\",\n            },\n            background: {\n                paper: \"#fff\",\n                default: \"#fafafa\",\n            },\n        },\n        ...themeindependent,\n    },\n    [AppTheme.DARK]: {\n        palette: {\n            type: \"dark\",\n            primary: {\n                light: \"#616161\",\n                main: \"#424242\",\n                dark: \"#212121\",\n            },\n            secondary: {\n                light: \"#5A42EA\",\n                main: \"#3E22E6\",\n                dark: \"#22108E\",\n            },\n            background: {\n                paper: \"#303030\",\n                default: \"#000\",\n            },\n        },\n        ...themeindependent,\n    },\n};\n\nexport default appThemeOptions;\n","import React, { useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {\n    MuiThemeProvider,\n    createMuiTheme,\n    makeStyles,\n} from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport ScrollContainer from \"./components/ScrollContainer\";\n\nimport reducers from \"./redux/reducers\";\nimport routes from \"./routes\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport AppTheme from \"./theming/themetypes\";\nimport AppThemeOptions from \"./theming/themes\";\n\nconst useStyles = makeStyles((theme) => ({\n    appRoot: {\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n}));\n\nfunction App() {\n    const classes = useStyles();\n\n    // set document title\n    useEffect(() => {\n        document.title = \"Movie Database App\";\n    }, []);\n\n    // create store for redux\n    const store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\n    // theme for app\n    const [theme, setTheme] = React.useState(AppTheme.LIGHT);\n\n    // toggle theme\n    const toggleTheme = () => {\n        setTheme(theme === AppTheme.LIGHT ? AppTheme.DARK : AppTheme.LIGHT);\n    };\n\n    return (\n        <div className={classes.appRoot}>\n            <MuiThemeProvider theme={createMuiTheme(AppThemeOptions[theme])}>\n                <Provider store={store}>\n                    <CssBaseline />\n                    <React.Fragment>\n                        <Header\n                            darkmode={theme === AppTheme.DARK}\n                            toggletheme={toggleTheme}\n                        />\n                        <ScrollContainer>\n                            <Switch>\n                                {routes.map((route, i) => (\n                                    <Route key={i} {...route} />\n                                ))}\n                            </Switch>\n                            <Footer />\n                        </ScrollContainer>\n                    </React.Fragment>\n                </Provider>\n            </MuiThemeProvider>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}